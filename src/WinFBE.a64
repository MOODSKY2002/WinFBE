.intel_syntax noprefix
.section .text
   .text
   .globl _ZN3AFX12CBSTR_ISBSTREPv
_ZN3AFX12CBSTR_ISBSTREPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 256
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_2473:
   cmp QWORD PTR 16[rbp], 0
   jne .Lt_2476
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_2474
   .Lt_2476:
   mov r11, 16[rbp]
   mov eax, DWORD PTR -4[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov r11, 2
   mov rax, r10
   cqo
   idiv r11
   mov r10, rax
#O2mov r8d, r10d
   #O2mov -120[rbp], r8d
   mov -120[rbp], r10d #Optim 2
   mov eax, DWORD PTR -120[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   mov rcx, 16[rbp]
   mov QWORD PTR -128[rbp], r11
   call fb_WstrLen #NO_ALL
   mov r11, rax
   mov r10, QWORD PTR -128[rbp]
   cmp r10, r11
   jne .Lt_2478
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_2474
   .Lt_2478:
   .Lt_2474:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX9AFXISBSTREPv
_ZN3AFX9AFXISBSTREPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 256
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_457E:
   cmp QWORD PTR 16[rbp], 0
   jne .Lt_4581
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_457F
   .Lt_4581:
   mov r11, 16[rbp]
   mov eax, DWORD PTR -4[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov r11, 2
   mov rax, r10
   cqo
   idiv r11
   mov r10, rax
#O2mov r8d, r10d
   #O2mov -120[rbp], r8d
   mov -120[rbp], r10d #Optim 2
   mov eax, DWORD PTR -120[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   mov rcx, 16[rbp]
   mov QWORD PTR -128[rbp], r11
   call fb_WstrLen #NO_ALL
   mov r11, rax
   mov r10, QWORD PTR -128[rbp]
   cmp r10, r11
   jne .Lt_4583
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_457F
   .Lt_4583:
   .Lt_457F:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX11CMASKEDEDIT15CMASKEDEDITPROCEP6HWND__jyxyy
_ZN3AFX11CMASKEDEDIT15CMASKEDEDITPROCEP6HWND__jyxyy:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov QWORD PTR 32[rbp], r8
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_4CA6:
   mov eax, DWORD PTR 24[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   cmp r11, 135
   jne .Lt_4CA9
   .Lt_4CAA:
   mov QWORD PTR -120[rbp], 129
   jmp .Lt_4CA7
   jmp .Lt_4CA8
   .Lt_4CA9:
   mov eax, DWORD PTR 24[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   cmp r11, 9999
   jne .Lt_4CAB
   .Lt_4CAC:
   mov r11, QWORD PTR 56[rbp]
   mov -128[rbp], r11
   cmp QWORD PTR -128[rbp], 0
   jne .Lt_4CAE
   jmp .Lt_4CA7
   .Lt_4CAE:
   mov rcx, -128[rbp]
   mov edx, -1
   call _ZN3AFX11CMASKEDEDIT6SETPOSEi #NO_ALL
   jmp .Lt_4CA7
   jmp .Lt_4CA8
   .Lt_4CAB:
   mov eax, DWORD PTR 24[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   cmp r11, 256
   jne .Lt_4CAF
   .Lt_4CB0:
   mov r11, QWORD PTR 56[rbp]
   mov -136[rbp], r11
   cmp QWORD PTR -136[rbp], 0
   jne .Lt_4CB2
   jmp .Lt_4CA7
   .Lt_4CB2:
   mov r11, -136[rbp]
#O5lea r10, 8[r11]
   #O5mov rcx, r10
   lea rcx, 8[r11] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov r11, -136[rbp]
#O5lea r8, 32[r11]
   #O5mov rcx, r8
   lea rcx, 32[r11] #Optim 5
   mov QWORD PTR -144[rbp], r10
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -144[rbp]
   and r11, r10
   je .Lt_4CB4
   mov r11, QWORD PTR 40[rbp]
   and r11, 65535
   mov r10d, r11d
   mov r11, QWORD PTR 40[rbp]
   mov eax, 4294901760
   and r11, rax
   shr r11, 16
   mov r8d, r11d
   mov r11d, DWORD PTR 32[rbp]
   mov rcx, -136[rbp]
   mov edx, r11d
   mov r8d, r8d
   mov r9d, r10d
   mov QWORD PTR -144[rbp], r8
   call _ZN3AFX11CMASKEDEDIT9ONKEYDOWNEjjj #NO_ALL
   jmp .Lt_4CA7
   .Lt_4CB4:
   .Lt_4CB3:
   jmp .Lt_4CA8
   .Lt_4CAF:
   mov eax, DWORD PTR 24[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   cmp r11, 258
   jne .Lt_4CB5
   .Lt_4CB6:
   cmp QWORD PTR 32[rbp], 22
   jne .Lt_4CB8
   mov rcx, 16[rbp]
   mov edx, 770
   xor r8d, r8d
   xor r9d, r9d
   call SendMessageW #NO_ALL
   jmp .Lt_4CA7
   .Lt_4CB8:
   .Lt_4CB7:
   cmp QWORD PTR 32[rbp], 3
   jne .Lt_4CBA
   mov rcx, 16[rbp]
   mov edx, 769
   xor r8d, r8d
   xor r9d, r9d
   call SendMessageW #NO_ALL
   jmp .Lt_4CA7
   .Lt_4CBA:
   .Lt_4CB9:
   cmp QWORD PTR 32[rbp], 24
   jne .Lt_4CBC
   mov rcx, 16[rbp]
   mov edx, 768
   xor r8d, r8d
   xor r9d, r9d
   call SendMessageW #NO_ALL
   jmp .Lt_4CA7
   .Lt_4CBC:
   .Lt_4CBB:
   cmp QWORD PTR 32[rbp], 8
   jne .Lt_4CBE
   mov r11, QWORD PTR 56[rbp]
   mov -184[rbp], r11
   cmp QWORD PTR -184[rbp], 0
   jne .Lt_4CC0
   jmp .Lt_4CA7
   .Lt_4CC0:
   mov r11, -184[rbp]
#O5lea r10, 8[r11]
   #O5mov rcx, r10
   lea rcx, 8[r11] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov r11, -184[rbp]
#O5lea r8, 32[r11]
   #O5mov rcx, r8
   lea rcx, 32[r11] #Optim 5
   mov QWORD PTR -144[rbp], r10
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -144[rbp]
   and r11, r10
   je .Lt_4CC2
   jmp .Lt_4CA7
   .Lt_4CC2:
   .Lt_4CBE:
   .Lt_4CBD:
   cmp QWORD PTR 32[rbp], 127
   jne .Lt_4CC4
   mov r11, QWORD PTR 56[rbp]
   mov -192[rbp], r11
   cmp QWORD PTR -192[rbp], 0
   jne .Lt_4CC6
   jmp .Lt_4CA7
   .Lt_4CC6:
   mov r11, -192[rbp]
#O5lea r10, 8[r11]
   #O5mov rcx, r10
   lea rcx, 8[r11] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, -192[rbp]
#O5lea r8, 32[r11]
   #O5mov rcx, r8
   lea rcx, 32[r11] #Optim 5
   mov QWORD PTR -144[rbp], r10
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -144[rbp]
   or r11, r10
   je .Lt_4CC8
   jmp .Lt_4CA7
   .Lt_4CC8:
   .Lt_4CC4:
   .Lt_4CC3:
   cmp QWORD PTR 32[rbp], 26
   jne .Lt_4CCA
   mov r11, QWORD PTR 56[rbp]
   mov -200[rbp], r11
   cmp QWORD PTR -200[rbp], 0
   jne .Lt_4CCC
   jmp .Lt_4CA7
   .Lt_4CCC:
   mov rcx, -200[rbp]
   call _ZN3AFX11CMASKEDEDIT7HWINDOWEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call EDIT_GETSELSTART #NO_ALL
   mov r11w, ax
   movzx r10d, r11w
   mov -204[rbp], r10d
   mov r11, -200[rbp]
#O5lea r10, 120[r11]
   #O5mov rcx, r10
   lea rcx, 120[r11] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   je .Lt_4CCE
   mov r11, -200[rbp]
   lea r10, 120[r11]
   mov rcx, -200[rbp]
   mov rdx, r10
   call _ZN3AFX11CMASKEDEDIT7SETTEXTERNS_5CWSTRE #NO_ALL
   .Lt_4CCE:
   movsxd r11, DWORD PTR -204[rbp]
   movsxd r10, DWORD PTR -204[rbp]
   mov rcx, -200[rbp]
   mov QWORD PTR -144[rbp], r10
   mov QWORD PTR -212[rbp], r11
   call _ZN3AFX11CMASKEDEDIT7HWINDOWEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov edx, 177
#O6mov r11, QWORD PTR -144[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -144[rbp] #Optim 6
#O6mov r11, QWORD PTR -212[rbp]
   #O6mov r9, r11
   mov r9, QWORD PTR -212[rbp] #Optim 6
   call SendMessageW #NO_ALL
   jmp .Lt_4CA7
   .Lt_4CCA:
   .Lt_4CC9:
   mov r11, QWORD PTR 56[rbp]
   mov -152[rbp], r11
   cmp QWORD PTR -152[rbp], 0
   jne .Lt_4CD0
   jmp .Lt_4CA7
   .Lt_4CD0:
#O5lea r11, -176[rbp]
   #O5mov rcx, r11
   lea rcx, -176[rbp] #Optim 5
   mov rdx, -152[rbp]
   xor r8d, r8d
   call _ZN3AFX11CMASKEDEDIT7GETTEXTEb #NO_ALL
   mov r11, rax
   mov r10, -152[rbp]
#O5lea r8, 120[r10]
   #O5mov rcx, r8
   lea rcx, 120[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -176[rbp]
   #O5mov rcx, r11
   lea rcx, -176[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, -152[rbp]
#O5lea r10, 8[r11]
   #O5mov rcx, r10
   lea rcx, 8[r11] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov r11, -152[rbp]
#O5lea r8, 32[r11]
   #O5mov rcx, r8
   lea rcx, 32[r11] #Optim 5
   mov QWORD PTR -144[rbp], r10
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -144[rbp]
   and r11, r10
   je .Lt_4CD3
   mov r11w, WORD PTR 32[rbp]
   mov cx, r11w
   call iswprint #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov ecx, 17
   mov QWORD PTR -144[rbp], r10
   call GetKeyState #NO_ALL
   mov r11w, ax
   movsx r10, r11w
   and r10, 128
   cmp r10, 128
   setne al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -144[rbp]
   and r11, r10
   je .Lt_4CD5
   mov r11, QWORD PTR 40[rbp]
   and r11, 65535
   mov r10d, r11d
   mov r11, QWORD PTR 40[rbp]
   mov eax, 4294901760
   and r11, rax
   shr r11, 16
   mov r8d, r11d
   mov r11d, DWORD PTR 32[rbp]
   mov rcx, -152[rbp]
   mov edx, r11d
   mov r8d, r8d
   mov r9d, r10d
   mov QWORD PTR -144[rbp], r8
   call _ZN3AFX11CMASKEDEDIT15ONCHARPRINTCHAREjjj #NO_ALL
   .Lt_4CD5:
   .Lt_4CD4:
   jmp .Lt_4CA7
   .Lt_4CD3:
   .Lt_4CD2:
   jmp .Lt_4CA8
   .Lt_4CB5:
   mov eax, DWORD PTR 24[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   cmp r11, 768
   je .Lt_4CD7
   .Lt_4CD8:
   mov eax, DWORD PTR 24[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   cmp r11, 771
   jne .Lt_4CD6
   .Lt_4CD7:
   mov r11, QWORD PTR 56[rbp]
   mov -224[rbp], r11
   cmp QWORD PTR -224[rbp], 0
   jne .Lt_4CDA
   jmp .Lt_4CA7
   .Lt_4CDA:
#O5lea r11, -248[rbp]
   #O5mov rcx, r11
   lea rcx, -248[rbp] #Optim 5
   mov rdx, -224[rbp]
   xor r8d, r8d
   call _ZN3AFX11CMASKEDEDIT7GETTEXTEb #NO_ALL
   mov r11, rax
   mov r10, -224[rbp]
#O5lea r8, 120[r10]
   #O5mov rcx, r8
   lea rcx, 120[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -248[rbp]
   #O5mov rcx, r11
   lea rcx, -248[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov rcx, -224[rbp]
   call _ZN3AFX11CMASKEDEDIT7HWINDOWEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call EDIT_GETSELSTART #NO_ALL
   mov r11w, ax
   movzx r10d, r11w
   mov -252[rbp], r10d
   mov rcx, -224[rbp]
   call _ZN3AFX11CMASKEDEDIT7HWINDOWEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call EDIT_GETSELEND #NO_ALL
   mov r11w, ax
   movzx r10d, r11w
   mov -256[rbp], r10d
#O5lea r11, -304[rbp]
   #O5mov rcx, r11
   lea rcx, -304[rbp] #Optim 5
   mov rdx, -224[rbp]
   xor r8d, r8d
   call _ZN3AFX11CMASKEDEDIT7GETTEXTEb #NO_ALL
   mov r11, rax
#O5lea r10, -280[rbp]
   #O5mov rcx, r10
   lea rcx, -280[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRC1ERS0_ #NO_ALL
#O5lea r11, -304[rbp]
   #O5mov rcx, r11
   lea rcx, -304[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -280[rbp]
   #O5mov rcx, r11
   lea rcx, -280[rbp] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   jne .Lt_4CDE
#O5lea r11, -280[rbp]
   #O5mov rcx, r11
   lea rcx, -280[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_4CA7
   .Lt_4CDE:
   movsxd r11, DWORD PTR -256[rbp]
   movsxd r10, DWORD PTR -252[rbp]
   sub r11, r10
   movsxd r10, DWORD PTR -252[rbp]
   inc r10
#O5lea r8, -280[rbp]
   #O5mov rcx, r8
   lea rcx, -280[rbp] #Optim 5
   mov QWORD PTR -144[rbp], r10
   mov QWORD PTR -212[rbp], r11
   call _ZN3AFXdeERNS_5CWSTRE #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
#O6mov r11, QWORD PTR -144[rbp]
   #O6mov rdx, r11
   mov rdx, QWORD PTR -144[rbp] #Optim 6
#O6mov r11, QWORD PTR -212[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -212[rbp] #Optim 6
   call fb_WstrMid #NO_ALL
#O2mov r11, rax
   #O2mov -312[rbp], r11
   mov -312[rbp], rax #Optim 2
   mov rax, QWORD PTR -312[rbp]
   mov QWORD PTR -320[rbp], rax
   lea r11, -320[rbp]
#O5lea r10, -280[rbp]
   #O5mov rcx, r10
   lea rcx, -280[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERPw #NO_ALL
   mov rcx, -312[rbp]
   call fb_WstrDelete #NO_ALL
   mov eax, DWORD PTR 24[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   cmp r11, 768
   jne .Lt_4CE2
#O5lea r11, -280[rbp]
   #O5mov rcx, r11
   lea rcx, -280[rbp] #Optim 5
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call AFXSETCLIPBOARDTEXT #NO_ALL
   .Lt_4CE2:
   mov rcx, -224[rbp]
   mov edx, 32
   xor r8d, r8d
   xor r9d, r9d
   call _ZN3AFX11CMASKEDEDIT12ONCHARDELETEEjjj #NO_ALL
#O5lea r11, -344[rbp]
   #O5mov rcx, r11
   lea rcx, -344[rbp] #Optim 5
   mov rdx, -224[rbp]
   xor r8d, r8d
   call _ZN3AFX11CMASKEDEDIT7GETTEXTEb #NO_ALL
   mov r11, rax
#O5lea r10, -280[rbp]
   #O5mov rcx, r10
   lea rcx, -280[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -344[rbp]
   #O5mov rcx, r11
   lea rcx, -344[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, -224[rbp]
#O5lea r10, 32[r11]
   #O5mov rcx, r10
   lea rcx, 32[r11] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   jne .Lt_4CE5
#O5lea r11, -280[rbp]
   #O5mov rcx, r11
   lea rcx, -280[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_4CA7
   .Lt_4CE5:
   mov r11, -224[rbp]
   lea r10, 32[r11]
   mov rcx, -224[rbp]
   mov rdx, r10
   call _ZN3AFX11CMASKEDEDIT7SETTEXTERNS_5CWSTRE #NO_ALL
   mov DWORD PTR -348[rbp], 1
#O5lea r11, -280[rbp]
   #O5mov rcx, r11
   lea rcx, -280[rbp] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   mov -352[rbp], r11d
   jmp .Lt_4CE7
   .Lt_4CEA:
   movsxd r11, DWORD PTR -348[rbp]
   mov rax, -1
   add r11, rax
   movsxd r10, DWORD PTR -348[rbp]
   mov rax, -1
   add r10, rax
   mov r8, -224[rbp]
   mov rcx, 0[r8]
   mov edx, 177
   mov r8, r10
   mov r9, r11
   call SendMessageW #NO_ALL
   movsxd r11, DWORD PTR -348[rbp]
   lea r10, -416[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
   mov r10, -224[rbp]
#O5lea r8, 32[r10]
   #O5mov rcx, r8
   lea rcx, 32[r10] #Optim 5
   mov QWORD PTR -144[rbp], r11
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -416[rbp]
   #O5mov rcx, r10
   lea rcx, -416[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -416[rbp]
   #O5mov rcx, r10
   lea rcx, -416[rbp] #Optim 5
#O6mov r10, QWORD PTR -144[rbp]
   #O6mov rdx, r10
   mov rdx, QWORD PTR -144[rbp] #Optim 6
   mov r8d, 1
   mov QWORD PTR -144[rbp], r11
   call fb_StrMid #NO_ALL
   mov r11, rax
   movsxd r10, DWORD PTR -348[rbp]
   lea r8, -392[rbp]
   mov QWORD PTR 0[r8], 0 #NO_OPTIM
   mov QWORD PTR 8[r8], 0 #NO_OPTIM
   mov QWORD PTR 16[r8], 0 #NO_OPTIM
#O5lea r8, -280[rbp]
   #O5mov rcx, r8
   lea rcx, -280[rbp] #Optim 5
   mov QWORD PTR -212[rbp], r10
   mov QWORD PTR -432[rbp], r11
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -392[rbp]
   #O5mov rcx, r10
   lea rcx, -392[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -392[rbp]
   #O5mov rcx, r10
   lea rcx, -392[rbp] #Optim 5
#O6mov r10, QWORD PTR -212[rbp]
   #O6mov rdx, r10
   mov rdx, QWORD PTR -212[rbp] #Optim 6
   mov r8d, 1
   mov QWORD PTR -212[rbp], r11
   call fb_StrMid #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
#O6mov r11, QWORD PTR -432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -432[rbp] #Optim 6
   mov r9, -1
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov -424[rbp], r10
#O5lea r11, -416[rbp]
   #O5mov rcx, r11
   lea rcx, -416[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   cmp QWORD PTR -424[rbp], 0
   je .Lt_4CEE
   movsxd r11, DWORD PTR -348[rbp]
   lea r10, -456[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -280[rbp]
   #O5mov rcx, r10
   lea rcx, -280[rbp] #Optim 5
   mov QWORD PTR -144[rbp], r11
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -456[rbp]
   #O5mov rcx, r10
   lea rcx, -456[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -456[rbp]
   #O5mov rcx, r10
   lea rcx, -456[rbp] #Optim 5
#O6mov r10, QWORD PTR -144[rbp]
   #O6mov rdx, r10
   mov rdx, QWORD PTR -144[rbp] #Optim 6
   mov r8d, 1
   mov QWORD PTR -144[rbp], r11
   call fb_StrMid #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov edx, 1
   call fb_ASC #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov r11, -224[rbp]
   movzx r8, WORD PTR 80[r11]
   cmp r10, r8
   setne al
   movzx r10, al
   neg r10
   mov -464[rbp], r10
#O5lea r11, -456[rbp]
   #O5mov rcx, r11
   lea rcx, -456[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   cmp QWORD PTR -464[rbp], 0
   je .Lt_4CF2
   movsxd r11, DWORD PTR -348[rbp]
#O5lea r10, -280[rbp]
   #O5mov rcx, r10
   lea rcx, -280[rbp] #Optim 5
   mov QWORD PTR -144[rbp], r11
   call _ZN3AFXdeERNS_5CWSTRE #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
#O6mov r11, QWORD PTR -144[rbp]
   #O6mov rdx, r11
   mov rdx, QWORD PTR -144[rbp] #Optim 6
   mov r8d, 1
   call fb_WstrMid #NO_ALL
#O2mov r11, rax
   #O2mov -472[rbp], r11
   mov -472[rbp], rax #Optim 2
   mov rcx, -472[rbp]
   mov edx, 1
   call fb_WstrAsc #NO_ALL
   mov r11d, eax
   mov rcx, -224[rbp]
   mov edx, r11d
   xor r8d, r8d
   xor r9d, r9d
   call _ZN3AFX11CMASKEDEDIT15ONCHARPRINTCHAREjjj #NO_ALL
   mov rcx, -472[rbp]
   call fb_WstrDelete #NO_ALL
   .Lt_4CF2:
   .Lt_4CF1:
   .Lt_4CEE:
   .Lt_4CED:
   .Lt_4CE8:
   movsxd r11, DWORD PTR -348[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -348[rbp], r10d
   mov -348[rbp], r11d #Optim 2
   .Lt_4CE7:
   movsxd r11, DWORD PTR -348[rbp]
   movsxd r10, DWORD PTR -352[rbp]
   cmp r11, r10
   jle .Lt_4CEA
   .Lt_4CE9:
   movsxd r11, DWORD PTR -252[rbp]
   movsxd r10, DWORD PTR -252[rbp]
   mov rcx, -224[rbp]
   mov QWORD PTR -144[rbp], r10
   mov QWORD PTR -212[rbp], r11
   call _ZN3AFX11CMASKEDEDIT7HWINDOWEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov edx, 177
#O6mov r11, QWORD PTR -144[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -144[rbp] #Optim 6
#O6mov r11, QWORD PTR -212[rbp]
   #O6mov r9, r11
   mov r9, QWORD PTR -212[rbp] #Optim 6
   call SendMessageW #NO_ALL
   mov rcx, -224[rbp]
   mov edx, -1
   call _ZN3AFX11CMASKEDEDIT6SETPOSEi #NO_ALL
#O5lea r11, -280[rbp]
   #O5mov rcx, r11
   lea rcx, -280[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_4CA7
   lea r11, -280[rbp]
   mov rcx, r11
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_4CA8
   .Lt_4CD6:
   mov eax, DWORD PTR 24[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   cmp r11, 770
   jne .Lt_4CF5
   .Lt_4CF6:
   mov r11, QWORD PTR 56[rbp]
   mov -480[rbp], r11
   cmp QWORD PTR -480[rbp], 0
   jne .Lt_4CF8
   jmp .Lt_4CA7
   .Lt_4CF8:
#O5lea r11, -504[rbp]
   #O5mov rcx, r11
   lea rcx, -504[rbp] #Optim 5
   mov rdx, -480[rbp]
   xor r8d, r8d
   call _ZN3AFX11CMASKEDEDIT7GETTEXTEb #NO_ALL
   mov r11, rax
   mov r10, -480[rbp]
#O5lea r8, 120[r10]
   #O5mov rcx, r8
   lea rcx, 120[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -504[rbp]
   #O5mov rcx, r11
   lea rcx, -504[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -552[rbp]
   #O5mov rcx, r11
   lea rcx, -552[rbp] #Optim 5
   call AFXGETCLIPBOARDTEXT #NO_ALL
   mov r11, rax
#O5lea r10, -528[rbp]
   #O5mov rcx, r10
   lea rcx, -528[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRC1ERS0_ #NO_ALL
#O5lea r11, -552[rbp]
   #O5mov rcx, r11
   lea rcx, -552[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -528[rbp]
   #O5mov rcx, r11
   lea rcx, -528[rbp] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   jne .Lt_4CFC
#O5lea r11, -528[rbp]
   #O5mov rcx, r11
   lea rcx, -528[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_4CA7
   .Lt_4CFC:
   mov DWORD PTR -556[rbp], 1
#O5lea r11, -528[rbp]
   #O5mov rcx, r11
   lea rcx, -528[rbp] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   mov -560[rbp], r11d
   jmp .Lt_4CFE
   .Lt_4D01:
   movsxd r11, DWORD PTR -556[rbp]
#O5lea r10, -528[rbp]
   #O5mov rcx, r10
   lea rcx, -528[rbp] #Optim 5
   mov QWORD PTR -144[rbp], r11
   call _ZN3AFXdeERNS_5CWSTRE #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
#O6mov r11, QWORD PTR -144[rbp]
   #O6mov rdx, r11
   mov rdx, QWORD PTR -144[rbp] #Optim 6
   mov r8d, 1
   call fb_WstrMid #NO_ALL
#O2mov r11, rax
   #O2mov -568[rbp], r11
   mov -568[rbp], rax #Optim 2
   mov rcx, -568[rbp]
   mov edx, 1
   call fb_WstrAsc #NO_ALL
   mov r11d, eax
   mov rcx, -480[rbp]
   mov edx, r11d
   xor r8d, r8d
   xor r9d, r9d
   call _ZN3AFX11CMASKEDEDIT15ONCHARPRINTCHAREjjj #NO_ALL
   mov rcx, -568[rbp]
   call fb_WstrDelete #NO_ALL
   .Lt_4CFF:
   movsxd r11, DWORD PTR -556[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -556[rbp], r10d
   mov -556[rbp], r11d #Optim 2
   .Lt_4CFE:
   movsxd r11, DWORD PTR -556[rbp]
   movsxd r10, DWORD PTR -560[rbp]
   cmp r11, r10
   jle .Lt_4D01
   .Lt_4D00:
#O5lea r11, -528[rbp]
   #O5mov rcx, r11
   lea rcx, -528[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_4CA7
   lea r11, -528[rbp]
   mov rcx, r11
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_4CA8
   .Lt_4CF5:
   mov eax, DWORD PTR 24[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   cmp r11, 2
   jne .Lt_4D03
   .Lt_4D04:
   mov rcx, 16[rbp]
   lea rdx, _ZN3AFX11CMASKEDEDIT15CMASKEDEDITPROCEP6HWND__jyxyy[rip+0]
   mov r8, 48[rbp]
   call RemoveWindowSubclass #NO_ALL
   .Lt_4D03:
   .Lt_4CA8:
   mov rcx, 16[rbp]
   mov edx, 24[rbp]
   mov r8, 32[rbp]
   mov r9, 40[rbp]
   call DefSubclassProc #NO_ALL
#O2mov r11, rax
   #O2mov -120[rbp], r11
   mov -120[rbp], rax #Optim 2
   .Lt_4CA7:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCHC1Ev
_ZN3AFX17CAXHOST_IDISPATCHC1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX17CAXHOST_IDISPATCHE[rip+16]
   mov [r11], rax
   .Lt_5136:
   .Lt_5137:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCHC1EPNS_7CAXHOSTE
_ZN3AFX17CAXHOST_IDISPATCHC1EPNS_7CAXHOSTE:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   .Lt_5138:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX17CAXHOST_IDISPATCHE[rip+16]
   mov [r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 16[r11], rax
   .Lt_5139:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCHD1Ev
_ZN3AFX17CAXHOST_IDISPATCHD1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX17CAXHOST_IDISPATCHE[rip+16]
   mov [r11], rax
   .Lt_513A:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov QWORD PTR 1696[r10], 0
   .Lt_513B:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCH14QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX17CAXHOST_IDISPATCH14QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_513C:
   mov r11, 16[rbp]
   cmp QWORD PTR 16[r11], 0
   jne .Lt_513F
   mov DWORD PTR -116[rbp], -2147467261
   jmp .Lt_513D
   .Lt_513F:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_5141
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_513D
   .Lt_5141:
   mov r11, 16[rbp]
   mov rcx, 16[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   call _ZN3AFX7CAXHOST14QUERYINTERFACEEPK5_GUIDPPv #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
#O9jmp .Lt_513D
   .Lt_513D:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCH6ADDREFEv
_ZN3AFX17CAXHOST_IDISPATCH6ADDREFEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5142:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
#O9jmp .Lt_5143
   .Lt_5143:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCH7RELEASEEv
_ZN3AFX17CAXHOST_IDISPATCH7RELEASEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5144:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov rax, -1
   add r10, rax
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   jne .Lt_5147
   cmp QWORD PTR 16[rbp], 0
   je .Lt_5148
   mov rcx, 16[rbp]
   call _ZN3AFX17CAXHOST_IDISPATCHD1Ev #NO_ALL
   mov rcx, 16[rbp]
   call free #NO_ALL
   .Lt_5148:
   .Lt_5147:
   .Lt_5145:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCH16GETTYPEINFOCOUNTEPj
_ZN3AFX17CAXHOST_IDISPATCH16GETTYPEINFOCOUNTEPj:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5149:
   mov r11, 24[rbp]
   mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_514A
   .Lt_514A:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCH11GETTYPEINFOEjjPP10ITypeInfo_
_ZN3AFX17CAXHOST_IDISPATCH11GETTYPEINFOEjjPP10ITypeInfo_:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov DWORD PTR 32[rbp], r8d
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_514B:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_514C
   .Lt_514C:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCH13GETIDSOFNAMESEPK5_GUIDPPwjjPi
_ZN3AFX17CAXHOST_IDISPATCH13GETIDSOFNAMESEPK5_GUIDPPwjjPi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_514D:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_514E
   .Lt_514E:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CAXHOST_IDISPATCH6INVOKEEiPK5_GUIDjtP13tagDISPPARAMSP10tagVARIANTP12tagEXCEPINFOPj
_ZN3AFX17CAXHOST_IDISPATCH6INVOKEEiPK5_GUIDjtP13tagDISPPARAMSP10tagVARIANTP12tagEXCEPINFOPj:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_514F:
   mov rcx, 32[rbp]
   lea rdx, GUID_NULL[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   je .Lt_5152
   mov DWORD PTR -116[rbp], -2147352575
   jmp .Lt_5150
   .Lt_5152:
   movzx r11, WORD PTR 48[rbp]
   and r11, 2
   cmp r11, 2
   je .Lt_5154
   mov DWORD PTR -116[rbp], -2147352573
   jmp .Lt_5150
   .Lt_5154:
   cmp QWORD PTR 64[rbp], 0
   jne .Lt_5156
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_5150
   .Lt_5156:
   mov DWORD PTR -116[rbp], -2147352573
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -701
   cmp r11, rax
   jne .Lt_5158
   .Lt_5159:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 19
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   mov eax, DWORD PTR 1664[r10]
   mov DWORD PTR 8[r11], eax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_5158:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -703
   cmp r11, rax
   jne .Lt_515A
   .Lt_515B:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   cmp QWORD PTR 1656[r10], 0
   je .Lt_515D
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov rcx, 1656[r10]
   call _ZN3AFX13AFXSAFEADDREFEPv #NO_ALL
   mov r11, 64[rbp]
   mov WORD PTR [r11], 9
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   mov rax, QWORD PTR 1656[r10]
   mov QWORD PTR 8[r11], rax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   .Lt_515D:
   .Lt_515C:
   jmp .Lt_5157
   .Lt_515A:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -704
   cmp r11, rax
   jne .Lt_515E
   .Lt_515F:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 19
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   mov eax, DWORD PTR 1668[r10]
   mov DWORD PTR 8[r11], eax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_515E:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -705
   cmp r11, rax
   jne .Lt_5160
   .Lt_5161:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 3
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   mov eax, DWORD PTR 1672[r10]
   mov DWORD PTR 8[r11], eax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_5160:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -706
   cmp r11, rax
   jne .Lt_5162
   .Lt_5163:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   mov r11, 64[rbp]
   mov WORD PTR 8[r11], 0
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_5162:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -709
   cmp r11, rax
   jne .Lt_5164
   .Lt_5165:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   mov r11, 64[rbp]
   mov WORD PTR 8[r11], -1
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_5164:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -710
   cmp r11, rax
   jne .Lt_5166
   .Lt_5167:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   movzx eax, WORD PTR 1678[r10]
   mov WORD PTR 8[r11], ax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_5166:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -711
   cmp r11, rax
   jne .Lt_5168
   .Lt_5169:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   mov r11, 64[rbp]
   mov WORD PTR 8[r11], 0
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_5168:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -712
   cmp r11, rax
   jne .Lt_516A
   .Lt_516B:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   mov r11, 64[rbp]
   mov WORD PTR 8[r11], 0
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_516A:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -713
   cmp r11, rax
   jne .Lt_516C
   .Lt_516D:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   movzx eax, WORD PTR 1680[r10]
   mov WORD PTR 8[r11], ax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_516C:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -714
   cmp r11, rax
   jne .Lt_516E
   .Lt_516F:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   movzx eax, WORD PTR 1682[r10]
   mov WORD PTR 8[r11], ax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_516E:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -5501
   cmp r11, rax
   jne .Lt_5170
   .Lt_5171:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   movzx eax, WORD PTR 1684[r10]
   mov WORD PTR 8[r11], ax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_5170:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -5502
   cmp r11, rax
   jne .Lt_5172
   .Lt_5173:
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   movzx eax, WORD PTR 1676[r10]
   mov WORD PTR 8[r11], ax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   jmp .Lt_5157
   .Lt_5172:
   movsxd r11, DWORD PTR 24[rbp]
   mov rax, -5512
   cmp r11, rax
   jne .Lt_5174
   .Lt_5175:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   movsxd r11, DWORD PTR 1688[r10]
   cmp r11, 0
   je .Lt_5177
   mov r11, 64[rbp]
   mov WORD PTR [r11], 3
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 64[rbp]
   mov eax, DWORD PTR 1688[r10]
   mov DWORD PTR 8[r11], eax
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_5150
   .Lt_5177:
   .Lt_5176:
   .Lt_5174:
   .Lt_5157:
   .Lt_5150:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITEC1Ev
_ZN3AFX22CAXHOST_IOLECLIENTSITEC1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX22CAXHOST_IOLECLIENTSITEE[rip+16]
   mov [r11], rax
   .Lt_5184:
   .Lt_5185:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITEC1EPNS_7CAXHOSTE
_ZN3AFX22CAXHOST_IOLECLIENTSITEC1EPNS_7CAXHOSTE:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   .Lt_5186:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX22CAXHOST_IOLECLIENTSITEE[rip+16]
   mov [r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 16[r11], rax
   .Lt_5187:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITED1Ev
_ZN3AFX22CAXHOST_IOLECLIENTSITED1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX22CAXHOST_IOLECLIENTSITEE[rip+16]
   mov [r11], rax
   .Lt_5188:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov QWORD PTR 1704[r10], 0
   .Lt_5189:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITE14QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX22CAXHOST_IOLECLIENTSITE14QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_518A:
   mov r11, 16[rbp]
   cmp QWORD PTR 16[r11], 0
   jne .Lt_518D
   mov DWORD PTR -116[rbp], -2147467261
   jmp .Lt_518B
   .Lt_518D:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_518F
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_518B
   .Lt_518F:
   mov r11, 16[rbp]
   mov rcx, 16[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   call _ZN3AFX7CAXHOST14QUERYINTERFACEEPK5_GUIDPPv #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
#O9jmp .Lt_518B
   .Lt_518B:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITE6ADDREFEv
_ZN3AFX22CAXHOST_IOLECLIENTSITE6ADDREFEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5190:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
#O9jmp .Lt_5191
   .Lt_5191:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITE7RELEASEEv
_ZN3AFX22CAXHOST_IOLECLIENTSITE7RELEASEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5192:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov rax, -1
   add r10, rax
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   jne .Lt_5195
   cmp QWORD PTR 16[rbp], 0
   je .Lt_5196
   mov rcx, 16[rbp]
   call _ZN3AFX22CAXHOST_IOLECLIENTSITED1Ev #NO_ALL
   mov rcx, 16[rbp]
   call free #NO_ALL
   .Lt_5196:
   .Lt_5195:
   .Lt_5193:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITE10SAVEOBJECTEv
_ZN3AFX22CAXHOST_IOLECLIENTSITE10SAVEOBJECTEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5197:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_5198
   .Lt_5198:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITE10GETMONIKEREjjPP9IMoniker_
_ZN3AFX22CAXHOST_IOLECLIENTSITE10GETMONIKEREjjPP9IMoniker_:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov DWORD PTR 32[rbp], r8d
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5199:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_519A
   .Lt_519A:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITE12GETCONTAINEREPP14IOleContainer_
_ZN3AFX22CAXHOST_IOLECLIENTSITE12GETCONTAINEREPP14IOleContainer_:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_519B:
   cmp QWORD PTR 24[rbp], 0
   jne .Lt_519E
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_519C
   .Lt_519E:
   mov r11, 24[rbp]
   mov QWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], -2147467262
#O9jmp .Lt_519C
   .Lt_519C:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITE10SHOWOBJECTEv
_ZN3AFX22CAXHOST_IOLECLIENTSITE10SHOWOBJECTEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_519F:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_51A0
   .Lt_51A0:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITE12ONSHOWWINDOWEi
_ZN3AFX22CAXHOST_IOLECLIENTSITE12ONSHOWWINDOWEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51A1:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_51A2
   .Lt_51A2:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX22CAXHOST_IOLECLIENTSITE22REQUESTNEWOBJECTLAYOUTEv
_ZN3AFX22CAXHOST_IOLECLIENTSITE22REQUESTNEWOBJECTLAYOUTEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51A3:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_51A4
   .Lt_51A4:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITEC1Ev
_ZN3AFX23CAXHOST_IOLECONTROLSITEC1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX23CAXHOST_IOLECONTROLSITEE[rip+16]
   mov [r11], rax
   .Lt_51B2:
   .Lt_51B3:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITEC1EPNS_7CAXHOSTE
_ZN3AFX23CAXHOST_IOLECONTROLSITEC1EPNS_7CAXHOSTE:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   .Lt_51B4:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX23CAXHOST_IOLECONTROLSITEE[rip+16]
   mov [r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 16[r11], rax
   .Lt_51B5:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITED1Ev
_ZN3AFX23CAXHOST_IOLECONTROLSITED1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX23CAXHOST_IOLECONTROLSITEE[rip+16]
   mov [r11], rax
   .Lt_51B6:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov QWORD PTR 1712[r10], 0
   .Lt_51B7:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE14QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX23CAXHOST_IOLECONTROLSITE14QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51B8:
   mov r11, 16[rbp]
   cmp QWORD PTR 16[r11], 0
   jne .Lt_51BB
   mov DWORD PTR -116[rbp], -2147467261
   jmp .Lt_51B9
   .Lt_51BB:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_51BD
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_51B9
   .Lt_51BD:
   mov r11, 16[rbp]
   mov rcx, 16[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   call _ZN3AFX7CAXHOST14QUERYINTERFACEEPK5_GUIDPPv #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
#O9jmp .Lt_51B9
   .Lt_51B9:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE6ADDREFEv
_ZN3AFX23CAXHOST_IOLECONTROLSITE6ADDREFEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51BE:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
#O9jmp .Lt_51BF
   .Lt_51BF:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE7RELEASEEv
_ZN3AFX23CAXHOST_IOLECONTROLSITE7RELEASEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51C0:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov rax, -1
   add r10, rax
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   jne .Lt_51C3
   cmp QWORD PTR 16[rbp], 0
   je .Lt_51C4
   mov rcx, 16[rbp]
   call _ZN3AFX23CAXHOST_IOLECONTROLSITED1Ev #NO_ALL
   mov rcx, 16[rbp]
   call free #NO_ALL
   .Lt_51C4:
   .Lt_51C3:
   .Lt_51C1:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE20ONCONTROLINFOCHANGEDEv
_ZN3AFX23CAXHOST_IOLECONTROLSITE20ONCONTROLINFOCHANGEDEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51C5:
   mov DWORD PTR -116[rbp], 0
   .Lt_51C6:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE17LOCKINPLACEACTIVEEi
_ZN3AFX23CAXHOST_IOLECONTROLSITE17LOCKINPLACEACTIVEEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51C7:
   mov DWORD PTR -116[rbp], 0
   .Lt_51C8:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE18GETEXTENDEDCONTROLEPP10IDispatch_
_ZN3AFX23CAXHOST_IOLECONTROLSITE18GETEXTENDEDCONTROLEPP10IDispatch_:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51C9:
   cmp QWORD PTR 24[rbp], 0
   jne .Lt_51CC
   mov DWORD PTR -116[rbp], -2147467261
   jmp .Lt_51CA
   .Lt_51CC:
   mov r11, 24[rbp]
   mov QWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_51CA
   .Lt_51CA:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE15TRANSFORMCOORDSEP7_POINTLP9tagPOINTFj
_ZN3AFX23CAXHOST_IOLECONTROLSITE15TRANSFORMCOORDSEP7_POINTLP9tagPOINTFj:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51CD:
   xor ecx, ecx
   call GetDC #NO_ALL
#O2mov r11, rax
   #O2mov -128[rbp], r11
   mov -128[rbp], rax #Optim 2
   cmp QWORD PTR -128[rbp], 0
   jne .Lt_51D0
   mov DWORD PTR -116[rbp], -2147467263
   jmp .Lt_51CE
   .Lt_51D0:
   mov eax, DWORD PTR 40[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   and r11, 4
   je .Lt_51D2
   mov rcx, -128[rbp]
   mov edx, 88
   call GetDeviceCaps #NO_ALL
   mov r11d, eax
   mov r10, 24[rbp]
   mov ecx, 0[r10]
   mov edx, r11d
   mov r8d, 2540
   call MulDiv #NO_ALL
   mov r11d, eax
   pxor xmm0,xmm0
   cvtsi2ss xmm0, r11d
   movd r10d, xmm0
   mov r11, 32[rbp]
   mov [r11], r10d
   mov rcx, -128[rbp]
   mov edx, 90
   call GetDeviceCaps #NO_ALL
   mov r11d, eax
   mov r10, 24[rbp]
   mov ecx, 4[r10]
   mov edx, r11d
   mov r8d, 2540
   call MulDiv #NO_ALL
   mov r11d, eax
   pxor xmm0,xmm0
   cvtsi2ss xmm0, r11d
   movd r10d, xmm0
   mov r11, 32[rbp]
   mov 4[r11], r10d
   jmp .Lt_51D1
   .Lt_51D2:
   mov eax, DWORD PTR 40[rbp]
   mov eax, eax #NO_OPTIM
   mov r11, rax
   and r11, 8
   je .Lt_51D3
   mov rcx, -128[rbp]
   mov edx, 88
   call GetDeviceCaps #NO_ALL
   mov r11d, eax
   mov r10, 32[rbp]
   movss xmm0, 0[r10]
   roundss xmm0,xmm0,4
   cvttss2si rax, xmm0
#O6mov r8d, eax
   #O6mov ecx, r8d
   mov ecx, eax #Optim 6
   mov edx, 2540
   mov r8d, r11d
   call MulDiv #NO_ALL
   mov r11d, eax
   mov r10, 24[rbp]
   mov [r10], r11d
   mov rcx, -128[rbp]
   mov edx, 90
   call GetDeviceCaps #NO_ALL
   mov r11d, eax
   mov r10, 32[rbp]
   movss xmm0, 4[r10]
   roundss xmm0,xmm0,4
   cvttss2si rax, xmm0
#O6mov r8d, eax
   #O6mov ecx, r8d
   mov ecx, eax #Optim 6
   mov edx, 2540
   mov r8d, r11d
   call MulDiv #NO_ALL
   mov r11d, eax
   mov r10, 24[rbp]
   mov 4[r10], r11d
   .Lt_51D3:
   .Lt_51D1:
   xor ecx, ecx
   mov rdx, -128[rbp]
   call ReleaseDC #NO_ALL
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_51CE
   .Lt_51CE:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE20TRANSLATEACCELERATOREP6tagMSGj
_ZN3AFX23CAXHOST_IOLECONTROLSITE20TRANSLATEACCELERATOREP6tagMSGj:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov DWORD PTR 32[rbp], r8d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51D4:
   mov DWORD PTR -116[rbp], 1
   .Lt_51D5:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE7ONFOCUSEi
_ZN3AFX23CAXHOST_IOLECONTROLSITE7ONFOCUSEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51D6:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_51D7
   .Lt_51D7:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLECONTROLSITE17SHOWPROPERTYFRAMEEv
_ZN3AFX23CAXHOST_IOLECONTROLSITE17SHOWPROPERTYFRAMEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51D8:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_51D9
   .Lt_51D9:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAMEC1Ev
_ZN3AFX24CAXHOST_IOLEINPLACEFRAMEC1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX24CAXHOST_IOLEINPLACEFRAMEE[rip+16]
   mov [r11], rax
   .Lt_51EC:
   .Lt_51ED:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAMEC1EPNS_7CAXHOSTE
_ZN3AFX24CAXHOST_IOLEINPLACEFRAMEC1EPNS_7CAXHOSTE:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   .Lt_51EE:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX24CAXHOST_IOLEINPLACEFRAMEE[rip+16]
   mov [r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 16[r11], rax
   .Lt_51EF:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAMED1Ev
_ZN3AFX24CAXHOST_IOLEINPLACEFRAMED1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX24CAXHOST_IOLEINPLACEFRAMEE[rip+16]
   mov [r11], rax
   .Lt_51F0:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov QWORD PTR 1720[r10], 0
   .Lt_51F1:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME14QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME14QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51F2:
   mov r11, 16[rbp]
   cmp QWORD PTR 16[r11], 0
   jne .Lt_51F5
   mov DWORD PTR -116[rbp], -2147467261
   jmp .Lt_51F3
   .Lt_51F5:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_51F7
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_51F3
   .Lt_51F7:
   mov r11, 16[rbp]
   mov rcx, 16[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   call _ZN3AFX7CAXHOST14QUERYINTERFACEEPK5_GUIDPPv #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
#O9jmp .Lt_51F3
   .Lt_51F3:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME6ADDREFEv
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME6ADDREFEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51F8:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
#O9jmp .Lt_51F9
   .Lt_51F9:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME7RELEASEEv
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME7RELEASEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51FA:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov rax, -1
   add r10, rax
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   jne .Lt_51FD
   cmp QWORD PTR 16[rbp], 0
   je .Lt_51FE
   mov rcx, 16[rbp]
   call _ZN3AFX24CAXHOST_IOLEINPLACEFRAMED1Ev #NO_ALL
   mov rcx, 16[rbp]
   call free #NO_ALL
   .Lt_51FE:
   .Lt_51FD:
   .Lt_51FB:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME9GETWINDOWEPP6HWND__
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME9GETWINDOWEPP6HWND__:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_51FF:
   cmp QWORD PTR 24[rbp], 0
   jne .Lt_5202
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_5200
   .Lt_5202:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 24[rbp]
   mov rax, QWORD PTR 8[r10]
   mov QWORD PTR [r11], rax
   mov DWORD PTR -116[rbp], 0
   .Lt_5200:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME20CONTEXTSENSITIVEHELPEi
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME20CONTEXTSENSITIVEHELPEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5203:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5204
   .Lt_5204:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME9GETBORDEREP7tagRECT
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME9GETBORDEREP7tagRECT:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5205:
   cmp QWORD PTR 24[rbp], 0
   jne .Lt_5208
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_5206
   .Lt_5208:
   mov DWORD PTR -116[rbp], -2147221087
#O9jmp .Lt_5206
   .Lt_5206:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME18REQUESTBORDERSPACEEPK7tagRECT
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME18REQUESTBORDERSPACEEPK7tagRECT:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5209:
   cmp QWORD PTR 24[rbp], 0
   jne .Lt_520C
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_520A
   .Lt_520C:
   mov DWORD PTR -116[rbp], -2147221087
#O9jmp .Lt_520A
   .Lt_520A:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME14SETBORDERSPACEEPK7tagRECT
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME14SETBORDERSPACEEPK7tagRECT:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_520D:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_520E
   .Lt_520E:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME15SETACTIVEOBJECTEP24IOleInPlaceActiveObject_PKw
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME15SETACTIVEOBJECTEP24IOleInPlaceActiveObject_PKw:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_520F:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   cmp QWORD PTR 1760[r10], 0
   je .Lt_5212
   mov r11, 16[rbp]
   mov r10, 16[r11]
#O5lea r11, 1760[r10]
   #O5mov rcx, r11
   lea rcx, 1760[r10] #Optim 5
   call _ZN3AFX14AFXSAFERELEASEERPv #NO_ALL
   .Lt_5212:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 1760[r10], rax
   mov r11, 16[rbp]
   mov r10, 16[r11]
   cmp QWORD PTR 1760[r10], 0
   je .Lt_5214
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 16[rbp]
   mov r8, 16[r11]
   mov r11, 1760[r8]
   mov r8, 0[r11]
   mov rcx, 1760[r10]
   call 8[r8] #NO_ALL
   .Lt_5214:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5210
   .Lt_5210:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME11INSERTMENUSEP7HMENU__P21tagOleMenuGroupWidths
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME11INSERTMENUSEP7HMENU__P21tagOleMenuGroupWidths:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5216:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5217
   .Lt_5217:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME7SETMENUEP7HMENU__PvP6HWND__
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME7SETMENUEP7HMENU__PvP6HWND__:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5218:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5219
   .Lt_5219:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME11REMOVEMENUSEP7HMENU__
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME11REMOVEMENUSEP7HMENU__:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_521A:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_521B
   .Lt_521B:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME13SETSTATUSTEXTEPKw
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME13SETSTATUSTEXTEPKw:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_521C:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_521D
   .Lt_521D:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME14ENABLEMODELESSEi
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME14ENABLEMODELESSEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_521E:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_521F
   .Lt_521F:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_IOLEINPLACEFRAME20TRANSLATEACCELERATOREP6tagMSGt
_ZN3AFX24CAXHOST_IOLEINPLACEFRAME20TRANSLATEACCELERATOREP6tagMSGt:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov WORD PTR 32[rbp], r8w
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5220:
   mov DWORD PTR -116[rbp], 1
#O9jmp .Lt_5221
   .Lt_5221:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITEC1Ev
_ZN3AFX23CAXHOST_IOLEINPLACESITEC1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX23CAXHOST_IOLEINPLACESITEE[rip+16]
   mov [r11], rax
   .Lt_5230:
   .Lt_5231:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITEC1EPNS_7CAXHOSTE
_ZN3AFX23CAXHOST_IOLEINPLACESITEC1EPNS_7CAXHOSTE:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   .Lt_5232:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX23CAXHOST_IOLEINPLACESITEE[rip+16]
   mov [r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 16[r11], rax
   .Lt_5233:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITED1Ev
_ZN3AFX23CAXHOST_IOLEINPLACESITED1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX23CAXHOST_IOLEINPLACESITEE[rip+16]
   mov [r11], rax
   .Lt_5234:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov QWORD PTR 1728[r10], 0
   .Lt_5235:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE14QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX23CAXHOST_IOLEINPLACESITE14QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5236:
   mov r11, 16[rbp]
   cmp QWORD PTR 16[r11], 0
   jne .Lt_5239
   mov DWORD PTR -116[rbp], -2147467261
   jmp .Lt_5237
   .Lt_5239:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_523B
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_5237
   .Lt_523B:
   mov r11, 16[rbp]
   mov rcx, 16[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   call _ZN3AFX7CAXHOST14QUERYINTERFACEEPK5_GUIDPPv #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
#O9jmp .Lt_5237
   .Lt_5237:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE6ADDREFEv
_ZN3AFX23CAXHOST_IOLEINPLACESITE6ADDREFEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_523C:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
#O9jmp .Lt_523D
   .Lt_523D:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE7RELEASEEv
_ZN3AFX23CAXHOST_IOLEINPLACESITE7RELEASEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_523E:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov rax, -1
   add r10, rax
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   jne .Lt_5241
   cmp QWORD PTR 16[rbp], 0
   je .Lt_5242
   mov rcx, 16[rbp]
   call _ZN3AFX23CAXHOST_IOLEINPLACESITED1Ev #NO_ALL
   mov rcx, 16[rbp]
   call free #NO_ALL
   .Lt_5242:
   .Lt_5241:
   .Lt_523F:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE9GETWINDOWEPP6HWND__
_ZN3AFX23CAXHOST_IOLEINPLACESITE9GETWINDOWEPP6HWND__:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5243:
   cmp QWORD PTR 24[rbp], 0
   jne .Lt_5246
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_5244
   .Lt_5246:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 24[rbp]
   mov rax, QWORD PTR 8[r10]
   mov QWORD PTR [r11], rax
   mov DWORD PTR -116[rbp], 0
   .Lt_5244:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE20CONTEXTSENSITIVEHELPEi
_ZN3AFX23CAXHOST_IOLEINPLACESITE20CONTEXTSENSITIVEHELPEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5247:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5248
   .Lt_5248:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE18CANINPLACEACTIVATEEv
_ZN3AFX23CAXHOST_IOLEINPLACESITE18CANINPLACEACTIVATEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5249:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_524A
   .Lt_524A:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE17ONINPLACEACTIVATEEv
_ZN3AFX23CAXHOST_IOLEINPLACESITE17ONINPLACEACTIVATEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_524B:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov BYTE PTR 37[r10], 1
   mov r11, 16[rbp]
   mov r10, 16[r11]
   cmp QWORD PTR 1744[r10], 0
   je .Lt_524E
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov rcx, 1744[r10]
   mov edx, -1
   xor r8d, r8d
   call OleLockRunning #NO_ALL
   .Lt_524E:
   .Lt_524D:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_524C
   .Lt_524C:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE12ONUIACTIVATEEv
_ZN3AFX23CAXHOST_IOLEINPLACESITE12ONUIACTIVATEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_524F:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov BYTE PTR 38[r10], 1
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5250
   .Lt_5250:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE16GETWINDOWCONTEXTEPP17IOleInPlaceFrame_PP20IOleInPlaceUIWindow_P7tagRECTS8_P7tagOIFI
_ZN3AFX23CAXHOST_IOLEINPLACESITE16GETWINDOWCONTEXTEPP17IOleInPlaceFrame_PP20IOleInPlaceUIWindow_P7tagRECTS8_P7tagOIFI:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5251:
   mov r11, QWORD PTR 24[rbp]
   cmp r11, 0
   sete al
   movzx r11, al
   neg r11
   mov r10, QWORD PTR 32[rbp]
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   or r11, r10
   je .Lt_5254
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_5252
   .Lt_5254:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   cmp QWORD PTR 1720[r10], 0
   je .Lt_5256
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 24[rbp]
   mov rax, QWORD PTR 1720[r10]
   mov QWORD PTR [r11], rax
   jmp .Lt_5255
   .Lt_5256:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   lea r11, 1720[r10]
   mov r10, 16[rbp]
   mov rcx, 16[r10]
   lea rdx, IID_IOleInPlaceFrame[rip+0]
   mov r8, r11
   call _ZN3AFX7CAXHOST14QUERYINTERFACEEPK5_GUIDPPv #NO_ALL
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 24[rbp]
   mov rax, QWORD PTR 1720[r10]
   mov QWORD PTR [r11], rax
   .Lt_5255:
   mov r11, 32[rbp]
   mov QWORD PTR [r11], 0
   cmp QWORD PTR 40[rbp], 0
   je .Lt_5258
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov rcx, 8[r10]
   mov rdx, 40[rbp]
   call GetClientRect #NO_ALL
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov rcx, 8[r10]
   mov rdx, 48[rbp]
   call GetClientRect #NO_ALL
   .Lt_5258:
   .Lt_5257:
   cmp QWORD PTR 56[rbp], 0
   je .Lt_525A
   mov r11, 56[rbp]
   mov DWORD PTR [r11], 32
   mov r11, 56[rbp]
   mov DWORD PTR 4[r11], 0
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 56[rbp]
   mov rax, QWORD PTR 8[r10]
   mov QWORD PTR 8[r11], rax
   mov r11, 56[rbp]
   mov QWORD PTR 16[r11], 0
   mov r11, 56[rbp]
   mov DWORD PTR 24[r11], 0
   .Lt_525A:
   .Lt_5259:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5252
   .Lt_5252:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE6SCROLLE7tagSIZE
_ZN3AFX23CAXHOST_IOLEINPLACESITE6SCROLLE7tagSIZE:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_525B:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_525C
   .Lt_525C:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE14ONUIDEACTIVATEEi
_ZN3AFX23CAXHOST_IOLEINPLACESITE14ONUIDEACTIVATEEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_525D:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov BYTE PTR 38[r10], 0
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_525E
   .Lt_525E:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE19ONINPLACEDEACTIVATEEv
_ZN3AFX23CAXHOST_IOLEINPLACESITE19ONINPLACEDEACTIVATEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_525F:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov BYTE PTR 37[r10], 0
   mov r11, 16[rbp]
   mov r10, 16[r11]
   cmp QWORD PTR 1744[r10], 0
   je .Lt_5262
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov rcx, 1744[r10]
   xor edx, edx
   xor r8d, r8d
   call OleLockRunning #NO_ALL
   .Lt_5262:
   .Lt_5261:
   mov r11, 16[rbp]
   mov r10, 16[r11]
#O5lea r11, 1752[r10]
   #O5mov rcx, r11
   lea rcx, 1752[r10] #Optim 5
   call _ZN3AFX14AFXSAFERELEASEERPv #NO_ALL
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5260
   .Lt_5260:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE16DISCARDUNDOSTATEEv
_ZN3AFX23CAXHOST_IOLEINPLACESITE16DISCARDUNDOSTATEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5263:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5264
   .Lt_5264:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE17DEACTIVATEANDUNDOEv
_ZN3AFX23CAXHOST_IOLEINPLACESITE17DEACTIVATEANDUNDOEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5265:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5266
   .Lt_5266:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX23CAXHOST_IOLEINPLACESITE15ONPOSRECTCHANGEEPK7tagRECT
_ZN3AFX23CAXHOST_IOLEINPLACESITE15ONPOSRECTCHANGEEPK7tagRECT:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5267:
   cmp QWORD PTR 24[rbp], 0
   jne .Lt_526A
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_5268
   .Lt_526A:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   cmp QWORD PTR 1752[r10], 0
   je .Lt_526C
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov r11, 16[rbp]
   mov r8, 16[r11]
   mov r11, 1752[r8]
   mov r8, 0[r11]
   mov rcx, 1752[r10]
   mov rdx, 24[rbp]
   mov r11, r8 #NO_OPTIM
   mov r8, 24[rbp]
   mov QWORD PTR -124[rbp], r11
   call 56[r8] #NO_ALL
   .Lt_526C:
   .Lt_526B:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_5268
   .Lt_5268:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_ISERVICEPROVIDERC1Ev
_ZN3AFX24CAXHOST_ISERVICEPROVIDERC1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX24CAXHOST_ISERVICEPROVIDERE[rip+16]
   mov [r11], rax
   .Lt_527E:
   .Lt_527F:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_ISERVICEPROVIDERC1EPNS_7CAXHOSTE
_ZN3AFX24CAXHOST_ISERVICEPROVIDERC1EPNS_7CAXHOSTE:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   .Lt_5280:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX24CAXHOST_ISERVICEPROVIDERE[rip+16]
   mov [r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 16[r11], rax
   .Lt_5281:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_ISERVICEPROVIDERD1Ev
_ZN3AFX24CAXHOST_ISERVICEPROVIDERD1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX24CAXHOST_ISERVICEPROVIDERE[rip+16]
   mov [r11], rax
   .Lt_5282:
   mov r11, 16[rbp]
   mov r10, 16[r11]
   mov QWORD PTR 1736[r10], 0
   .Lt_5283:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_ISERVICEPROVIDER14QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX24CAXHOST_ISERVICEPROVIDER14QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5284:
   mov r11, 16[rbp]
   cmp QWORD PTR 16[r11], 0
   jne .Lt_5287
   mov DWORD PTR -116[rbp], -2147467261
   jmp .Lt_5285
   .Lt_5287:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_5289
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_5285
   .Lt_5289:
   mov r11, 16[rbp]
   mov rcx, 16[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   call _ZN3AFX7CAXHOST14QUERYINTERFACEEPK5_GUIDPPv #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
#O9jmp .Lt_5285
   .Lt_5285:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_ISERVICEPROVIDER6ADDREFEv
_ZN3AFX24CAXHOST_ISERVICEPROVIDER6ADDREFEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_528A:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
#O9jmp .Lt_528B
   .Lt_528B:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_ISERVICEPROVIDER7RELEASEEv
_ZN3AFX24CAXHOST_ISERVICEPROVIDER7RELEASEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_528C:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov rax, -1
   add r10, rax
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 8[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 8[r11]
   mov DWORD PTR -116[rbp], eax
   .Lt_528D:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX24CAXHOST_ISERVICEPROVIDER12QUERYSERVICEEPK5_GUIDS4_PPv
_ZN3AFX24CAXHOST_ISERVICEPROVIDER12QUERYSERVICEEPK5_GUIDS4_PPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_528E:
#O4lea r11, -128[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -128[rbp], 0 #Optim 4
   lea r11, -128[rbp]
   mov rcx, 24[rbp]
   mov rdx, r11
   call StringFromIID #NO_ALL
   lea r11, -168[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   cmp QWORD PTR -128[rbp], 0
   je .Lt_5291
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, -128[rbp]
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -128[rbp]
   call CoTaskMemFree #NO_ALL
   .Lt_5291:
   lea r11, -128[rbp]
   mov rcx, 32[rbp]
   mov rdx, r11
   call StringFromIID #NO_ALL
   lea r11, -192[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   cmp QWORD PTR -128[rbp], 0
   je .Lt_5293
#O5lea r11, -192[rbp]
   #O5mov rcx, r11
   lea rcx, -192[rbp] #Optim 5
   mov rdx, -1
   mov r8, -128[rbp]
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -128[rbp]
   call CoTaskMemFree #NO_ALL
   .Lt_5293:
#O5lea r11, 24[rbp]
   #O5mov rcx, r11
   lea rcx, 24[rbp] #Optim 5
   lea rdx, SID_SInPlaceBrowser[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_5295
   lea r11, 40[rbp]
   mov r10, 16[rbp]
   mov r8, 16[r10]
   mov rcx, 16[r8]
   lea rdx, IID_IShellBrowser[rip+0]
   mov r8, 32[rbp]
   mov r9, r11
   call _ZN3AFX21AFXAXHOSTQUERYSERVICEEP9IUnknown_PK5_GUIDS5_PPv #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
#O5lea r11, -192[rbp]
   #O5mov rcx, r11
   lea rcx, -192[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_528F
   .Lt_5295:
   .Lt_5294:
   mov DWORD PTR -116[rbp], -2147467262
#O5lea r11, -192[rbp]
   #O5mov rcx, r11
   lea rcx, -192[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_528F
   lea r11, -192[rbp]
   mov rcx, r11
   call fb_StrDelete #NO_ALL
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   .Lt_528F:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX7CAXHOST14QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX7CAXHOST14QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_53C3:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_53C6
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_53C4
   .Lt_53C6:
   mov rcx, 24[rbp]
   lea rdx, IID_IUnknown[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov rcx, 24[rbp]
   lea rdx, IID_IDispatch[rip+0]
   mov r8d, 16
   mov QWORD PTR -124[rbp], r10
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -124[rbp]
   or r11, r10
   je .Lt_53C8
   mov r11, 16[rbp]
   cmp QWORD PTR 1696[r11], 0
   je .Lt_53CA
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1696[r10]
   mov r10, 0[r8]
   mov rcx, 1696[r11]
   call 8[r10] #NO_ALL
   mov r11, 16[rbp]
   mov r10, 32[rbp]
   mov rax, QWORD PTR 1696[r11]
   mov QWORD PTR [r10], rax
   jmp .Lt_53C9
   .Lt_53CA:
   mov ecx, 24
   call malloc #NO_ALL
#O2mov r11, rax
   #O2mov -144[rbp], r11
   mov -144[rbp], rax #Optim 2
   cmp QWORD PTR -144[rbp], 0
   je .Lt_53CE
   mov rcx, -144[rbp]
   mov rdx, 16[rbp]
   call _ZN3AFX17CAXHOST_IDISPATCHC1EPNS_7CAXHOSTE #NO_ALL
   .Lt_53CE:
   mov rax, QWORD PTR -144[rbp]
   mov QWORD PTR -136[rbp], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR -136[rbp]
   mov QWORD PTR 1696[r11], rax
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1696[r10]
   mov r10, 0[r8]
   mov rcx, 1696[r11]
   call 8[r10] #NO_ALL
   mov r11, 32[rbp]
   mov rax, QWORD PTR -136[rbp]
   mov QWORD PTR [r11], rax
   .Lt_53C9:
   jmp .Lt_53C7
   .Lt_53C8:
   mov rcx, 24[rbp]
   lea rdx, IID_IOleClientSite[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_53D0
   mov r11, 16[rbp]
   cmp QWORD PTR 1704[r11], 0
   je .Lt_53D2
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1704[r10]
   mov r10, 0[r8]
   mov rcx, 1704[r11]
   call 8[r10] #NO_ALL
   mov r11, 16[rbp]
   mov r10, 32[rbp]
   mov rax, QWORD PTR 1704[r11]
   mov QWORD PTR [r10], rax
   jmp .Lt_53D1
   .Lt_53D2:
   mov ecx, 24
   call malloc #NO_ALL
#O2mov r11, rax
   #O2mov -160[rbp], r11
   mov -160[rbp], rax #Optim 2
   cmp QWORD PTR -160[rbp], 0
   je .Lt_53D6
   mov rcx, -160[rbp]
   mov rdx, 16[rbp]
   call _ZN3AFX22CAXHOST_IOLECLIENTSITEC1EPNS_7CAXHOSTE #NO_ALL
   .Lt_53D6:
   mov rax, QWORD PTR -160[rbp]
   mov QWORD PTR -152[rbp], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR -152[rbp]
   mov QWORD PTR 1704[r11], rax
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1704[r10]
   mov r10, 0[r8]
   mov rcx, 1704[r11]
   call 8[r10] #NO_ALL
   mov r11, 32[rbp]
   mov rax, QWORD PTR -152[rbp]
   mov QWORD PTR [r11], rax
   .Lt_53D1:
   jmp .Lt_53C7
   .Lt_53D0:
   mov rcx, 24[rbp]
   lea rdx, IID_IOleControlSite[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_53D8
   mov r11, 16[rbp]
   cmp QWORD PTR 1712[r11], 0
   je .Lt_53DA
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1712[r10]
   mov r10, 0[r8]
   mov rcx, 1712[r11]
   call 8[r10] #NO_ALL
   mov r11, 16[rbp]
   mov r10, 32[rbp]
   mov rax, QWORD PTR 1712[r11]
   mov QWORD PTR [r10], rax
   jmp .Lt_53D9
   .Lt_53DA:
   mov ecx, 24
   call malloc #NO_ALL
#O2mov r11, rax
   #O2mov -176[rbp], r11
   mov -176[rbp], rax #Optim 2
   cmp QWORD PTR -176[rbp], 0
   je .Lt_53DE
   mov rcx, -176[rbp]
   mov rdx, 16[rbp]
   call _ZN3AFX23CAXHOST_IOLECONTROLSITEC1EPNS_7CAXHOSTE #NO_ALL
   .Lt_53DE:
   mov rax, QWORD PTR -176[rbp]
   mov QWORD PTR -168[rbp], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR -168[rbp]
   mov QWORD PTR 1712[r11], rax
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1712[r10]
   mov r10, 0[r8]
   mov rcx, 1712[r11]
   call 8[r10] #NO_ALL
   mov r11, 32[rbp]
   mov rax, QWORD PTR -168[rbp]
   mov QWORD PTR [r11], rax
   .Lt_53D9:
   jmp .Lt_53C7
   .Lt_53D8:
   mov rcx, 24[rbp]
   lea rdx, IID_IOleInPlaceFrame[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov rcx, 24[rbp]
   lea rdx, IID_IOleWindow[rip+0]
   mov r8d, 16
   mov QWORD PTR -124[rbp], r10
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -124[rbp]
   or r11, r10
   mov rcx, 24[rbp]
   lea rdx, IID_IOleInPlaceUIWindow[rip+0]
   mov r8d, 16
   mov QWORD PTR -124[rbp], r11
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -124[rbp]
   or r11, r10
   je .Lt_53E0
   mov r11, 16[rbp]
   cmp QWORD PTR 1720[r11], 0
   je .Lt_53E2
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1720[r10]
   mov r10, 0[r8]
   mov rcx, 1720[r11]
   call 8[r10] #NO_ALL
   mov r11, 16[rbp]
   mov r10, 32[rbp]
   mov rax, QWORD PTR 1720[r11]
   mov QWORD PTR [r10], rax
   jmp .Lt_53E1
   .Lt_53E2:
   mov ecx, 24
   call malloc #NO_ALL
#O2mov r11, rax
   #O2mov -192[rbp], r11
   mov -192[rbp], rax #Optim 2
   cmp QWORD PTR -192[rbp], 0
   je .Lt_53E6
   mov rcx, -192[rbp]
   mov rdx, 16[rbp]
   call _ZN3AFX24CAXHOST_IOLEINPLACEFRAMEC1EPNS_7CAXHOSTE #NO_ALL
   .Lt_53E6:
   mov rax, QWORD PTR -192[rbp]
   mov QWORD PTR -184[rbp], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR -184[rbp]
   mov QWORD PTR 1720[r11], rax
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1720[r10]
   mov r10, 0[r8]
   mov rcx, 1720[r11]
   call 8[r10] #NO_ALL
   mov r11, 32[rbp]
   mov rax, QWORD PTR -184[rbp]
   mov QWORD PTR [r11], rax
   .Lt_53E1:
   jmp .Lt_53C7
   .Lt_53E0:
   mov rcx, 24[rbp]
   lea rdx, IID_IOleInPlaceSite[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_53E8
   mov r11, 16[rbp]
   cmp QWORD PTR 1728[r11], 0
   je .Lt_53EA
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1728[r10]
   mov r10, 0[r8]
   mov rcx, 1728[r11]
   call 8[r10] #NO_ALL
   mov r11, 16[rbp]
   mov r10, 32[rbp]
   mov rax, QWORD PTR 1728[r11]
   mov QWORD PTR [r10], rax
   jmp .Lt_53E9
   .Lt_53EA:
   mov ecx, 24
   call malloc #NO_ALL
#O2mov r11, rax
   #O2mov -208[rbp], r11
   mov -208[rbp], rax #Optim 2
   cmp QWORD PTR -208[rbp], 0
   je .Lt_53EE
   mov rcx, -208[rbp]
   mov rdx, 16[rbp]
   call _ZN3AFX23CAXHOST_IOLEINPLACESITEC1EPNS_7CAXHOSTE #NO_ALL
   .Lt_53EE:
   mov rax, QWORD PTR -208[rbp]
   mov QWORD PTR -200[rbp], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR -200[rbp]
   mov QWORD PTR 1728[r11], rax
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1728[r10]
   mov r10, 0[r8]
   mov rcx, 1728[r11]
   call 8[r10] #NO_ALL
   mov r11, 32[rbp]
   mov rax, QWORD PTR -200[rbp]
   mov QWORD PTR [r11], rax
   .Lt_53E9:
   jmp .Lt_53C7
   .Lt_53E8:
   mov rcx, 24[rbp]
   lea rdx, IID_IServiceProvider[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_53F0
   mov r11, 16[rbp]
   cmp QWORD PTR 1736[r11], 0
   je .Lt_53F2
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1736[r10]
   mov r10, 0[r8]
   mov rcx, 1736[r11]
   call 8[r10] #NO_ALL
   mov r11, 16[rbp]
   mov r10, 32[rbp]
   mov rax, QWORD PTR 1736[r11]
   mov QWORD PTR [r10], rax
   jmp .Lt_53F1
   .Lt_53F2:
   mov ecx, 24
   call malloc #NO_ALL
#O2mov r11, rax
   #O2mov -224[rbp], r11
   mov -224[rbp], rax #Optim 2
   cmp QWORD PTR -224[rbp], 0
   je .Lt_53F6
   mov rcx, -224[rbp]
   mov rdx, 16[rbp]
   call _ZN3AFX24CAXHOST_ISERVICEPROVIDERC1EPNS_7CAXHOSTE #NO_ALL
   .Lt_53F6:
   mov rax, QWORD PTR -224[rbp]
   mov QWORD PTR -216[rbp], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR -216[rbp]
   mov QWORD PTR 1736[r11], rax
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 1736[r10]
   mov r10, 0[r8]
   mov rcx, 1736[r11]
   call 8[r10] #NO_ALL
   mov r11, 32[rbp]
   mov rax, QWORD PTR -216[rbp]
   mov QWORD PTR [r11], rax
   .Lt_53F1:
   .Lt_53F0:
   .Lt_53C7:
   mov r11, 32[rbp]
   cmp QWORD PTR 0[r11], 0
   jne .Lt_53F9
   mov DWORD PTR -116[rbp], -2147467262
   jmp .Lt_53C4
   .Lt_53F9:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_53C4
   .Lt_53C4:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER2C1EPNS_7CWEBCTXEPNS_17AFX_IWEBBROWSER2_E
_ZN3AFX18CDOCHOSTUIHANDLER2C1EPNS_7CWEBCTXEPNS_17AFX_IWEBBROWSER2_E:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   .Lt_544A:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 24
#O4lea r10, 0[r11]
   #O4mov DWORD PTR [r10], 0
   mov DWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 32
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 40
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 48
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 56
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 64
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 72
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 80
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 88
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 96
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 104
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 112
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 120
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 128
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 136
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 144
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 152
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX18CDOCHOSTUIHANDLER2E[rip+16]
   mov [r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 8[r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 32[rbp]
   mov QWORD PTR 16[r11], rax
   .Lt_544B:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER2D1Ev
_ZN3AFX18CDOCHOSTUIHANDLER2D1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX18CDOCHOSTUIHANDLER2E[rip+16]
   mov [r11], rax
   .Lt_544C:
   .Lt_544D:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER214QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX18CDOCHOSTUIHANDLER214QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_544E:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_5451
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_544F
   .Lt_5451:
   mov rcx, 24[rbp]
   lea rdx, IID_IDocHostUIHandler[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov rcx, 24[rbp]
   lea rdx, IID_IUnknown[rip+0]
   mov r8d, 16
   mov QWORD PTR -124[rbp], r10
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -124[rbp]
   or r11, r10
   mov rcx, 24[rbp]
   lea rdx, IID_IDispatch[rip+0]
   mov r8d, 16
   mov QWORD PTR -124[rbp], r11
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -124[rbp]
   or r11, r10
   je .Lt_5453
   mov r11, 32[rbp]
   mov rax, QWORD PTR 16[rbp]
   mov QWORD PTR [r11], rax
   mov r11, 32[rbp]
   mov r10, 32[rbp]
   mov r8, 0[r10]
   mov r10, 0[r8]
   mov rcx, 0[r11]
   call 8[r10] #NO_ALL
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_544F
   .Lt_5453:
   .Lt_5452:
   mov DWORD PTR -116[rbp], -2147467262
#O9jmp .Lt_544F
   .Lt_544F:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER26ADDREFEv
_ZN3AFX18CDOCHOSTUIHANDLER26ADDREFEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5455:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 24[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 24[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 24[r11]
   mov DWORD PTR -116[rbp], eax
#O9jmp .Lt_5456
   .Lt_5456:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER27RELEASEEv
_ZN3AFX18CDOCHOSTUIHANDLER27RELEASEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5457:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 24[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov rax, -1
   add r10, rax
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 24[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 24[r11]
   mov DWORD PTR -116[rbp], eax
   .Lt_5458:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER215SHOWCONTEXTMENUEjP8tagPOINTP9IUnknown_P10IDispatch_
_ZN3AFX18CDOCHOSTUIHANDLER215SHOWCONTEXTMENUEjP8tagPOINTP9IUnknown_P10IDispatch_:
   push rbp
   mov  rbp,rsp
   sub rsp, 720
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov QWORD PTR 32[rbp], r8
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5459:
   mov r11, 16[rbp]
   cmp QWORD PTR 32[r11], 0
   je .Lt_545C
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 24[rbp]
   mov r8, 32[rbp]
   mov r9, 40[rbp]
   mov rax, 48[rbp]
   mov QWORD PTR 32[rsp], rax
   call 32[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_545A
   .Lt_545C:
   mov DWORD PTR -116[rbp], 1
#O9jmp .Lt_545A
   .Lt_545A:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER211GETHOSTINFOEP14_DOCHOSTUIINFO
_ZN3AFX18CDOCHOSTUIHANDLER211GETHOSTINFOEP14_DOCHOSTUIINFO:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_545D:
   mov r11, 16[rbp]
   cmp QWORD PTR 40[r11], 0
   je .Lt_5460
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 24[rbp]
   call 40[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_545E
   .Lt_5460:
   cmp QWORD PTR 24[rbp], 0
   je .Lt_5462
   mov r11, 24[rbp]
   mov DWORD PTR [r11], 32
   mov r11, 24[rbp]
   mov DWORD PTR 4[r11], 1074003972
   mov r11, 24[rbp]
   mov DWORD PTR 8[r11], 0
   mov r11, 24[rbp]
   mov QWORD PTR 16[r11], 0
   mov r11, 24[rbp]
   mov QWORD PTR 24[r11], 0
   .Lt_5462:
   .Lt_5461:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_545E
   .Lt_545E:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER26SHOWUIEjP24IOleInPlaceActiveObject_P18IOleCommandTarget_P17IOleInPlaceFrame_P20IOleInPlaceUIWindow_
_ZN3AFX18CDOCHOSTUIHANDLER26SHOWUIEjP24IOleInPlaceActiveObject_P18IOleCommandTarget_P17IOleInPlaceFrame_P20IOleInPlaceUIWindow_:
   push rbp
   mov  rbp,rsp
   sub rsp, 720
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov QWORD PTR 32[rbp], r8
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5463:
   mov r11, 16[rbp]
   cmp QWORD PTR 48[r11], 0
   je .Lt_5466
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 24[rbp]
   mov r8, 32[rbp]
   mov r9, 40[rbp]
   mov rax, 48[rbp]
   mov QWORD PTR 32[rsp], rax
   mov rax, 56[rbp]
   mov QWORD PTR 40[rsp], rax
   call 48[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5464
   .Lt_5466:
   mov DWORD PTR -116[rbp], 1
#O9jmp .Lt_5464
   .Lt_5464:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER26HIDEUIEv
_ZN3AFX18CDOCHOSTUIHANDLER26HIDEUIEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5467:
   mov r11, 16[rbp]
   cmp QWORD PTR 56[r11], 0
   je .Lt_546A
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   call 56[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5468
   .Lt_546A:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_5468
   .Lt_5468:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER28UPDATEUIEv
_ZN3AFX18CDOCHOSTUIHANDLER28UPDATEUIEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_546B:
   mov r11, 16[rbp]
   cmp QWORD PTR 64[r11], 0
   je .Lt_546E
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   call 64[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_546C
   .Lt_546E:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_546C
   .Lt_546C:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER214ENABLEMODELESSEi
_ZN3AFX18CDOCHOSTUIHANDLER214ENABLEMODELESSEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_546F:
   mov r11, 16[rbp]
   cmp QWORD PTR 72[r11], 0
   je .Lt_5472
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 24[rbp]
   call 72[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5470
   .Lt_5472:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_5470
   .Lt_5470:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER219ONDOCWINDOWACTIVATEEi
_ZN3AFX18CDOCHOSTUIHANDLER219ONDOCWINDOWACTIVATEEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5473:
   mov r11, 16[rbp]
   cmp QWORD PTR 80[r11], 0
   je .Lt_5476
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 24[rbp]
   call 80[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5474
   .Lt_5476:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_5474
   .Lt_5474:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER221ONFRAMEWINDOWACTIVATEEi
_ZN3AFX18CDOCHOSTUIHANDLER221ONFRAMEWINDOWACTIVATEEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5477:
   mov r11, 16[rbp]
   cmp QWORD PTR 88[r11], 0
   je .Lt_547A
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 24[rbp]
   call 88[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5478
   .Lt_547A:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_5478
   .Lt_5478:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER212RESIZEBORDEREPK7tagRECTP20IOleInPlaceUIWindow_i
_ZN3AFX18CDOCHOSTUIHANDLER212RESIZEBORDEREPK7tagRECTP20IOleInPlaceUIWindow_i:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_547B:
   mov r11, 16[rbp]
   cmp QWORD PTR 96[r11], 0
   je .Lt_547E
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   mov r9d, 40[rbp]
   call 96[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_547C
   .Lt_547E:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_547C
   .Lt_547C:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER220TRANSLATEACCELERATOREP6tagMSGPK5_GUIDj
_ZN3AFX18CDOCHOSTUIHANDLER220TRANSLATEACCELERATOREP6tagMSGPK5_GUIDj:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_547F:
   mov r11, 16[rbp]
   cmp QWORD PTR 104[r11], 0
   je .Lt_5482
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   mov r9d, 40[rbp]
   call 104[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5480
   .Lt_5482:
   mov DWORD PTR -116[rbp], 1
#O9jmp .Lt_5480
   .Lt_5480:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER216GETOPTIONKEYPATHEPPwj
_ZN3AFX18CDOCHOSTUIHANDLER216GETOPTIONKEYPATHEPPwj:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov DWORD PTR 32[rbp], r8d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5483:
   mov r11, 16[rbp]
   cmp QWORD PTR 112[r11], 0
   je .Lt_5486
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 24[rbp]
   mov r8d, 32[rbp]
   call 112[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5484
   .Lt_5486:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_5484
   .Lt_5484:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER213GETDROPTARGETEP12IDropTarget_PS2_
_ZN3AFX18CDOCHOSTUIHANDLER213GETDROPTARGETEP12IDropTarget_PS2_:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5487:
   mov r11, 16[rbp]
   cmp QWORD PTR 120[r11], 0
   je .Lt_548A
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   call 120[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5488
   .Lt_548A:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_5488
   .Lt_5488:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER211GETEXTERNALEPP10IDispatch_
_ZN3AFX18CDOCHOSTUIHANDLER211GETEXTERNALEPP10IDispatch_:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_548B:
   mov r11, 16[rbp]
   cmp QWORD PTR 128[r11], 0
   je .Lt_548E
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 24[rbp]
   call 128[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_548C
   .Lt_548E:
   mov r11, 24[rbp]
   mov QWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 1
#O9jmp .Lt_548C
   .Lt_548C:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER212TRANSLATEURLEjPwPS1_
_ZN3AFX18CDOCHOSTUIHANDLER212TRANSLATEURLEjPwPS1_:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov QWORD PTR 32[rbp], r8
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_548F:
   mov r11, 16[rbp]
   cmp QWORD PTR 136[r11], 0
   je .Lt_5492
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 24[rbp]
   mov r8, 32[rbp]
   mov r9, 40[rbp]
   call 136[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5490
   .Lt_5492:
   mov DWORD PTR -116[rbp], 1
#O9jmp .Lt_5490
   .Lt_5490:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER216FILTERDATAOBJECTEP12IDataObject_PS2_
_ZN3AFX18CDOCHOSTUIHANDLER216FILTERDATAOBJECTEP12IDataObject_PS2_:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5493:
   mov r11, 16[rbp]
   cmp QWORD PTR 144[r11], 0
   je .Lt_5496
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   call 144[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5494
   .Lt_5496:
   mov r11, 32[rbp]
   mov QWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 1
#O9jmp .Lt_5494
   .Lt_5494:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX18CDOCHOSTUIHANDLER218GETOVERRIDEKEYPATHEPPwj
_ZN3AFX18CDOCHOSTUIHANDLER218GETOVERRIDEKEYPATHEPPwj:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov DWORD PTR 32[rbp], r8d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5497:
   mov r11, 16[rbp]
   cmp QWORD PTR 152[r11], 0
   je .Lt_549A
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 24[rbp]
   mov r8d, 32[rbp]
   call 152[r10] #NO_ALL
   mov r11d, eax
   mov -116[rbp], r11d
   jmp .Lt_5498
   .Lt_549A:
   mov r11, 24[rbp]
   mov QWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_5498
   .Lt_5498:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX20CHTMLDOCUMENTEVENTS2C1EPNS_7CWEBCTXEPNS_17AFX_IWEBBROWSER2_E
_ZN3AFX20CHTMLDOCUMENTEVENTS2C1EPNS_7CWEBCTXEPNS_17AFX_IWEBBROWSER2_E:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   .Lt_54A8:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 24
#O4lea r10, 0[r11]
   #O4mov DWORD PTR [r10], 0
   mov DWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 32
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX20CHTMLDOCUMENTEVENTS2E[rip+16]
   mov [r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 8[r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 32[rbp]
   mov QWORD PTR 16[r11], rax
   .Lt_54A9:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX20CHTMLDOCUMENTEVENTS2D1Ev
_ZN3AFX20CHTMLDOCUMENTEVENTS2D1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX20CHTMLDOCUMENTEVENTS2E[rip+16]
   mov [r11], rax
   .Lt_54AA:
   .Lt_54AB:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX20CHTMLDOCUMENTEVENTS214QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX20CHTMLDOCUMENTEVENTS214QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54AC:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_54AF
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_54AD
   .Lt_54AF:
   mov DWORD PTR -132[rbp], 810612243
   mov WORD PTR -128[rbp], 39093
   mov WORD PTR -126[rbp], 4559
   mov BYTE PTR -124[rbp], 187
   mov BYTE PTR -123[rbp], 130
   mov BYTE PTR -122[rbp], 0
   mov BYTE PTR -121[rbp], 170
   mov BYTE PTR -120[rbp], 0
   mov BYTE PTR -119[rbp], 189
   mov BYTE PTR -118[rbp], 206
   mov BYTE PTR -117[rbp], 11
   lea r11, -132[rbp]
   mov rcx, 24[rbp]
   mov rdx, r11
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov rcx, 24[rbp]
   lea rdx, IID_IUnknown[rip+0]
   mov r8d, 16
   mov QWORD PTR -140[rbp], r10
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -140[rbp]
   or r11, r10
   mov rcx, 24[rbp]
   lea rdx, IID_IDispatch[rip+0]
   mov r8d, 16
   mov QWORD PTR -140[rbp], r11
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -140[rbp]
   or r11, r10
   je .Lt_54B1
   mov r11, 32[rbp]
   mov rax, QWORD PTR 16[rbp]
   mov QWORD PTR [r11], rax
   mov r11, 32[rbp]
   mov r10, 32[rbp]
   mov r8, 0[r10]
   mov r10, 0[r8]
   mov rcx, 0[r11]
   call 8[r10] #NO_ALL
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_54AD
   .Lt_54B1:
   .Lt_54B0:
   mov DWORD PTR -116[rbp], -2147467262
#O9jmp .Lt_54AD
   .Lt_54AD:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX20CHTMLDOCUMENTEVENTS26ADDREFEv
_ZN3AFX20CHTMLDOCUMENTEVENTS26ADDREFEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54B3:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 24[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 24[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 24[r11]
   mov DWORD PTR -116[rbp], eax
#O9jmp .Lt_54B4
   .Lt_54B4:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX20CHTMLDOCUMENTEVENTS27RELEASEEv
_ZN3AFX20CHTMLDOCUMENTEVENTS27RELEASEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54B5:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 24[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov rax, -1
   add r10, rax
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 24[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 24[r11]
   mov DWORD PTR -116[rbp], eax
   .Lt_54B6:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX20CHTMLDOCUMENTEVENTS216GETTYPEINFOCOUNTEPj
_ZN3AFX20CHTMLDOCUMENTEVENTS216GETTYPEINFOCOUNTEPj:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54B7:
   mov r11, 24[rbp]
   mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_54B8
   .Lt_54B8:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX20CHTMLDOCUMENTEVENTS211GETTYPEINFOEjjPP10ITypeInfo_
_ZN3AFX20CHTMLDOCUMENTEVENTS211GETTYPEINFOEjjPP10ITypeInfo_:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov DWORD PTR 32[rbp], r8d
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54B9:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_54BA
   .Lt_54BA:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX20CHTMLDOCUMENTEVENTS213GETIDSOFNAMESEPK5_GUIDPPwjjPi
_ZN3AFX20CHTMLDOCUMENTEVENTS213GETIDSOFNAMESEPK5_GUIDPPwjjPi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54BB:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_54BC
   .Lt_54BC:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX20CHTMLDOCUMENTEVENTS26INVOKEEiPK5_GUIDjtP13tagDISPPARAMSP10tagVARIANTP12tagEXCEPINFOPj
_ZN3AFX20CHTMLDOCUMENTEVENTS26INVOKEEiPK5_GUIDjtP13tagDISPPARAMSP10tagVARIANTP12tagEXCEPINFOPj:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54BD:
   mov r11, 16[rbp]
   cmp QWORD PTR 32[r11], 0
   je .Lt_54C0
#O4lea r11, -117[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -117[rbp], 0 #Optim 4
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 24[rbp]
   mov r11, r8 #NO_OPTIM
   mov r8, 8[r10]
   mov QWORD PTR -125[rbp], r11
   call 32[r8] #NO_ALL
   mov r11b, al
   mov -117[rbp], r11b
   cmp BYTE PTR -117[rbp], 0
   je .Lt_54C2
   mov r11, 64[rbp]
   mov WORD PTR [r11], 11
   cmp BYTE PTR -117[rbp], 0
   setne al
   neg al
   movsx r11w, al
   mov r10, 64[rbp]
   mov 8[r10], r11w
   .Lt_54C2:
   .Lt_54C1:
   .Lt_54C0:
   .Lt_54BF:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_54BE
   .Lt_54BE:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CWEBBROWSEREVENTSC1EPNS_7CWEBCTXE
_ZN3AFX17CWEBBROWSEREVENTSC1EPNS_7CWEBCTXE:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   .Lt_54DE:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN10fb_Object$C1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 24
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 32
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 40
#O4lea r10, 0[r11]
   #O4mov DWORD PTR [r10], 0
   mov DWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 44
#O4lea r10, 0[r11]
   #O4mov DWORD PTR [r10], 0
   mov DWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 48
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 56
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 64
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 72
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 80
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 88
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 96
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 104
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 112
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 120
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 128
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 136
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 144
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 152
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 160
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 168
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 176
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 184
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 192
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 200
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 208
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 216
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 224
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 232
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 240
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 248
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 256
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX17CWEBBROWSEREVENTSE[rip+16]
   mov [r11], rax
   mov r11, 16[rbp]
   mov rax, QWORD PTR 24[rbp]
   mov QWORD PTR 8[r11], rax
   mov ecx, 40
   call malloc #NO_ALL
#O2mov r11, rax
   #O2mov -120[rbp], r11
   mov -120[rbp], rax #Optim 2
   cmp QWORD PTR -120[rbp], 0
   je .Lt_54E2
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, -120[rbp]
   mov rdx, 8[r10]
   mov r8, 16[r11]
   call _ZN3AFX20CHTMLDOCUMENTEVENTS2C1EPNS_7CWEBCTXEPNS_17AFX_IWEBBROWSER2_E #NO_ALL
   .Lt_54E2:
   mov r11, 16[rbp]
   mov rax, QWORD PTR -120[rbp]
   mov QWORD PTR 32[r11], rax
   .Lt_54DF:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CWEBBROWSEREVENTSD1Ev
_ZN3AFX17CWEBBROWSEREVENTSD1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov r11, 16[rbp]
   lea rax, _ZTVN3AFX17CWEBBROWSEREVENTSE[rip+16]
   mov [r11], rax
   .Lt_54E3:
   mov r11, 16[rbp]
   cmp QWORD PTR 24[r11], 0
   je .Lt_54E6
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 24[r10]
   mov r10, 0[r8]
   mov rcx, 24[r11]
   call 16[r10] #NO_ALL
   .Lt_54E6:
   mov r11, 16[rbp]
   cmp QWORD PTR 32[r11], 0
   je .Lt_54E8
   mov r11, 16[rbp]
   cmp QWORD PTR 32[r11], 0
   je .Lt_54E9
   mov r11, 16[rbp]
   mov rcx, 32[r11]
   call _ZN3AFX20CHTMLDOCUMENTEVENTS2D1Ev #NO_ALL
   mov r11, 16[rbp]
   mov rcx, 32[r11]
   call free #NO_ALL
   .Lt_54E9:
   .Lt_54E8:
   .Lt_54E4:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CWEBBROWSEREVENTS14QUERYINTERFACEEPK5_GUIDPPv
_ZN3AFX17CWEBBROWSEREVENTS14QUERYINTERFACEEPK5_GUIDPPv:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54EA:
   cmp QWORD PTR 32[rbp], 0
   jne .Lt_54ED
   mov DWORD PTR -116[rbp], -2147024809
   jmp .Lt_54EB
   .Lt_54ED:
   mov rcx, 24[rbp]
   lea rdx, DIID_DWebBrowserEvents2[rip+0]
   mov r8d, 16
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov rcx, 24[rbp]
   lea rdx, IID_IUnknown[rip+0]
   mov r8d, 16
   mov QWORD PTR -124[rbp], r10
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -124[rbp]
   or r11, r10
   mov rcx, 24[rbp]
   lea rdx, IID_IDispatch[rip+0]
   mov r8d, 16
   mov QWORD PTR -124[rbp], r11
   call memcmp #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -124[rbp]
   or r11, r10
   je .Lt_54EF
   mov r11, 32[rbp]
   mov rax, QWORD PTR 16[rbp]
   mov QWORD PTR [r11], rax
   mov r11, 32[rbp]
   mov r10, 32[rbp]
   mov r8, 0[r10]
   mov r10, 0[r8]
   mov rcx, 0[r11]
   call 8[r10] #NO_ALL
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_54EB
   .Lt_54EF:
   .Lt_54EE:
   mov DWORD PTR -116[rbp], -2147467262
#O9jmp .Lt_54EB
   .Lt_54EB:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CWEBBROWSEREVENTS6ADDREFEv
_ZN3AFX17CWEBBROWSEREVENTS6ADDREFEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54F1:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 44[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 44[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 44[r11]
   mov DWORD PTR -116[rbp], eax
#O9jmp .Lt_54F2
   .Lt_54F2:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CWEBBROWSEREVENTS7RELEASEEv
_ZN3AFX17CWEBBROWSEREVENTS7RELEASEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54F3:
   mov r11, 16[rbp]
   mov eax, DWORD PTR 44[r11]
   mov eax, eax #NO_OPTIM
   mov r10, rax
   mov rax, -1
   add r10, rax
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 44[r10], r11d
   mov r11, 16[rbp]
   mov eax, DWORD PTR 44[r11]
   mov DWORD PTR -116[rbp], eax
   .Lt_54F4:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CWEBBROWSEREVENTS16GETTYPEINFOCOUNTEPj
_ZN3AFX17CWEBBROWSEREVENTS16GETTYPEINFOCOUNTEPj:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54F5:
   mov r11, 24[rbp]
   mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_54F6
   .Lt_54F6:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CWEBBROWSEREVENTS11GETTYPEINFOEjjPP10ITypeInfo_
_ZN3AFX17CWEBBROWSEREVENTS11GETTYPEINFOEjjPP10ITypeInfo_:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov DWORD PTR 32[rbp], r8d
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54F7:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_54F8
   .Lt_54F8:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CWEBBROWSEREVENTS13GETIDSOFNAMESEPK5_GUIDPPwjjPi
_ZN3AFX17CWEBBROWSEREVENTS13GETIDSOFNAMESEPK5_GUIDPPwjjPi:
   push rbp
   mov  rbp,rsp
   sub rsp, 672
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54F9:
   mov DWORD PTR -116[rbp], -2147467263
#O9jmp .Lt_54FA
   .Lt_54FA:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX17CWEBBROWSEREVENTS6INVOKEEiPK5_GUIDjtP13tagDISPPARAMSP10tagVARIANTP12tagEXCEPINFOPj
_ZN3AFX17CWEBBROWSEREVENTS6INVOKEEiPK5_GUIDjtP13tagDISPPARAMSP10tagVARIANTP12tagEXCEPINFOPj:
   push rbp
   mov  rbp,rsp
   sub rsp, 736
   mov QWORD PTR -88[rbp], r12
   mov QWORD PTR -96[rbp], r13
   mov QWORD PTR -104[rbp], r14
   mov QWORD PTR -112[rbp], r15
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_54FB:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 102
   jne .Lt_54FE
   .Lt_54FF:
   mov r11, 16[rbp]
   cmp QWORD PTR 48[r11], 0
   je .Lt_5501
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 8[r10]
   call 48[r8] #NO_ALL
   .Lt_5501:
   jmp .Lt_54FD
   .Lt_54FE:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 104
   jne .Lt_5502
   .Lt_5503:
   mov r11, 16[rbp]
   cmp QWORD PTR 56[r11], 0
   je .Lt_5505
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   call 56[r10] #NO_ALL
   .Lt_5505:
   jmp .Lt_54FD
   .Lt_5502:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 105
   jne .Lt_5506
   .Lt_5507:
   mov r11, 16[rbp]
   cmp QWORD PTR 64[r11], 0
   je .Lt_5509
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 56[rbp]
   mov r8, 0[r11]
   mov r11, 16[rbp]
   mov r9, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 32[r8]
   mov r8w, 8[r10]
   call 64[r9] #NO_ALL
   .Lt_5509:
   jmp .Lt_54FD
   .Lt_5506:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 106
   jne .Lt_550A
   .Lt_550B:
   mov r11, 16[rbp]
   cmp QWORD PTR 72[r11], 0
   je .Lt_550D
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov rcx, 8[r11]
   call 72[r10] #NO_ALL
   .Lt_550D:
   jmp .Lt_54FD
   .Lt_550A:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 108
   jne .Lt_550E
   .Lt_550F:
   mov r11, 16[rbp]
   cmp QWORD PTR 80[r11], 0
   je .Lt_5511
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 56[rbp]
   mov r8, 0[r11]
   mov r11, 16[rbp]
   mov r9, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 32[r8]
   mov r8d, 8[r10]
   call 80[r9] #NO_ALL
   .Lt_5511:
   jmp .Lt_54FD
   .Lt_550E:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 112
   jne .Lt_5512
   .Lt_5513:
   mov r11, 16[rbp]
   cmp QWORD PTR 88[r11], 0
   je .Lt_5515
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 8[r10]
   call 88[r8] #NO_ALL
   .Lt_5515:
   jmp .Lt_54FD
   .Lt_5512:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 113
   jne .Lt_5516
   .Lt_5517:
   mov r11, 16[rbp]
   cmp QWORD PTR 96[r11], 0
   je .Lt_5519
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 8[r10]
   call 96[r8] #NO_ALL
   .Lt_5519:
   jmp .Lt_54FD
   .Lt_5516:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 225
   jne .Lt_551A
   .Lt_551B:
   mov r11, 16[rbp]
   cmp QWORD PTR 104[r11], 0
   je .Lt_551D
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 8[r10]
   call 104[r8] #NO_ALL
   .Lt_551D:
   jmp .Lt_54FD
   .Lt_551A:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 226
   jne .Lt_551E
   .Lt_551F:
   mov r11, 16[rbp]
   cmp QWORD PTR 112[r11], 0
   je .Lt_5521
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 8[r10]
   call 112[r8] #NO_ALL
   .Lt_5521:
   jmp .Lt_54FD
   .Lt_551E:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 227
   jne .Lt_5522
   .Lt_5523:
   jmp .Lt_54FD
   .Lt_5522:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 250
   jne .Lt_5524
   .Lt_5525:
   mov r11, 16[rbp]
   cmp QWORD PTR 120[r11], 0
   je .Lt_5527
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 56[rbp]
   mov r8, 0[r11]
   mov r11, 56[rbp]
   mov r9, 0[r11]
   mov r11, 56[rbp]
   mov rdx, 0[r11]
   mov r11, 56[rbp]
   mov rcx, 0[r11]
   mov r11, 56[rbp]
   mov r12, 0[r11]
   mov r11, 56[rbp]
   mov r13, 0[r11]
   mov r11, 16[rbp]
   mov r14, 16[rbp]
   mov r15, rcx #NO_OPTIM
   mov rcx, 8[r11]
   mov r11, rdx #NO_OPTIM
   mov rdx, 152[r13]
   mov r13, r8 #NO_OPTIM
   mov r8, 128[r12]
   mov r12, r9 #NO_OPTIM
   mov r9, 104[r15]
   mov rax, 80[r11]
   mov QWORD PTR 32[rsp], rax
   mov rax, 56[r12]
   mov QWORD PTR 40[rsp], rax
   mov rax, 32[r13]
   mov QWORD PTR 48[rsp], rax
   mov rax, 8[r10]
   mov QWORD PTR 56[rsp], rax
   call 120[r14] #NO_ALL
   .Lt_5527:
   jmp .Lt_54FD
   .Lt_5524:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 252
   jne .Lt_5528
   .Lt_5529:
   mov r11, 16[rbp]
   cmp QWORD PTR 128[r11], 0
   je .Lt_552B
   mov r11, 56[rbp]
   mov r10, 56[rbp]
   mov r8, 0[r10]
   mov r10, 16[rbp]
   mov r9, 16[rbp]
   mov rcx, 8[r10]
   mov rdx, 32[r8]
   mov r8, 0[r11]
   call 128[r9] #NO_ALL
   .Lt_552B:
   jmp .Lt_54FD
   .Lt_5528:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 253
   jne .Lt_552C
   .Lt_552D:
   jmp .Lt_54FD
   .Lt_552C:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 254
   jne .Lt_552E
   .Lt_552F:
   mov r11, 16[rbp]
   cmp QWORD PTR 136[r11], 0
   je .Lt_5531
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov dx, 8[r10]
   call 136[r8] #NO_ALL
   .Lt_5531:
   jmp .Lt_54FD
   .Lt_552E:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 259
   jne .Lt_5532
   .Lt_5533:
   mov r11, 16[rbp]
   cmp QWORD PTR 144[r11], 0
   jne .Lt_5535
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_54FC
   .Lt_5535:
   mov r11, 16[rbp]
   cmp QWORD PTR 144[r11], 0
   je .Lt_5537
   mov r11, 56[rbp]
   mov r10, 56[rbp]
   mov r8, 0[r10]
   mov r10, 16[rbp]
   mov r9, 16[rbp]
   mov rcx, 8[r10]
   mov rdx, 32[r8]
   mov r8, 0[r11]
   call 144[r9] #NO_ALL
   .Lt_5537:
   mov r11, 16[rbp]
   cmp QWORD PTR 32[r11], 0
   je .Lt_5539
   mov r11, 16[rbp]
   mov r10, 32[r11]
   cmp QWORD PTR 32[r10], 0
   jne .Lt_553B
   mov DWORD PTR -116[rbp], 0
   jmp .Lt_54FC
   .Lt_553B:
   .Lt_5539:
   .Lt_5538:
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov rax, QWORD PTR 32[r10]
   mov QWORD PTR -128[rbp], rax
   cmp QWORD PTR -128[rbp], 0
   jne .Lt_553D
   jmp .Lt_54FC
   .Lt_553D:
   mov DWORD PTR -144[rbp], 810612243
   mov WORD PTR -140[rbp], 39093
   mov WORD PTR -138[rbp], 4559
   mov BYTE PTR -136[rbp], 187
   mov BYTE PTR -135[rbp], 130
   mov BYTE PTR -134[rbp], 0
   mov BYTE PTR -133[rbp], 170
   mov BYTE PTR -132[rbp], 0
   mov BYTE PTR -131[rbp], 189
   mov BYTE PTR -130[rbp], 206
   mov BYTE PTR -129[rbp], 11
   mov r11, 16[rbp]
   mov r10, QWORD PTR 24[r11]
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov r11, 16[rbp]
   mov eax, DWORD PTR 40[r11]
   mov eax, eax #NO_OPTIM
   mov r8, rax
   cmp r8, 0
   setne al
   movzx r8, al
   neg r8
   and r10, r8
   je .Lt_553F
   mov r11, 16[rbp]
   lea r10, -144[rbp]
   mov r8, 16[rbp]
   mov rcx, 24[r8]
   mov rdx, r10
   mov r8d, 40[r11]
   call _ZN3AFX11AFXUNADVISEEPvR5_GUIDj #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_5541
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 24[r10]
   mov r10, 0[r8]
   mov rcx, 24[r11]
   call 16[r10] #NO_ALL
   mov r11, 16[rbp]
   mov QWORD PTR 24[r11], 0
   mov r11, 16[rbp]
   mov DWORD PTR 40[r11], 0
   .Lt_5541:
   .Lt_5540:
   .Lt_553F:
   .Lt_553E:
   mov r11, 16[rbp]
   mov r10, QWORD PTR 32[r11]
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov r11, 16[rbp]
   mov eax, DWORD PTR 40[r11]
   mov eax, eax #NO_OPTIM
   mov r8, rax
   cmp r8, 0
   sete al
   movzx r8, al
   neg r8
   and r10, r8
   je .Lt_5543
   mov r11, 16[rbp]
   lea r10, 24[r11]
   mov r11, -128[rbp]
   mov r8, 0[r11]
   mov rcx, -128[rbp]
   mov rdx, r10
   call 144[r8] #NO_ALL
   mov r11, 16[rbp]
   cmp QWORD PTR 24[r11], 0
   jne .Lt_5546
   jmp .Lt_54FC
   .Lt_5546:
   mov r11, 16[rbp]
   lea r10, 40[r11]
   lea r11, -144[rbp]
   mov r8, 16[rbp]
   mov r9, 16[rbp]
   mov rcx, 24[r9]
   mov rdx, 32[r8]
   mov r8, r11
   mov r9, r10
   call _ZN3AFX9AFXADVISEEPvS0_R5_GUIDPj #NO_ALL
   .Lt_5543:
   .Lt_5542:
   jmp .Lt_54FD
   .Lt_5532:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 262
   jne .Lt_5547
   .Lt_5548:
   mov r11, 16[rbp]
   cmp QWORD PTR 152[r11], 0
   je .Lt_554A
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov dx, 8[r10]
   call 152[r8] #NO_ALL
   .Lt_554A:
   jmp .Lt_54FD
   .Lt_5547:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 263
   jne .Lt_554B
   .Lt_554C:
   mov r11, 16[rbp]
   cmp QWORD PTR 160[r11], 0
   je .Lt_554E
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 56[rbp]
   mov r8, 0[r11]
   mov r11, 16[rbp]
   mov r9, 16[rbp]
   mov rcx, 8[r11]
   mov dx, 32[r8]
   mov r8, 8[r10]
   call 160[r9] #NO_ALL
   .Lt_554E:
   jmp .Lt_54FD
   .Lt_554B:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 264
   jne .Lt_554F
   .Lt_5550:
   mov r11, 16[rbp]
   cmp QWORD PTR 168[r11], 0
   je .Lt_5552
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 8[r10]
   call 168[r8] #NO_ALL
   .Lt_5552:
   jmp .Lt_54FD
   .Lt_554F:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 265
   jne .Lt_5553
   .Lt_5554:
   mov r11, 16[rbp]
   cmp QWORD PTR 176[r11], 0
   je .Lt_5556
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 8[r10]
   call 176[r8] #NO_ALL
   .Lt_5556:
   jmp .Lt_54FD
   .Lt_5553:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 266
   jne .Lt_5557
   .Lt_5558:
   mov r11, 16[rbp]
   cmp QWORD PTR 184[r11], 0
   je .Lt_555A
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 8[r10]
   call 184[r8] #NO_ALL
   .Lt_555A:
   jmp .Lt_54FD
   .Lt_5557:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 267
   jne .Lt_555B
   .Lt_555C:
   mov r11, 16[rbp]
   cmp QWORD PTR 192[r11], 0
   je .Lt_555E
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 8[r10]
   call 192[r8] #NO_ALL
   .Lt_555E:
   jmp .Lt_54FD
   .Lt_555B:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 268
   jne .Lt_555F
   .Lt_5560:
   mov r11, 16[rbp]
   cmp QWORD PTR 200[r11], 0
   je .Lt_5562
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 56[rbp]
   mov r8, 0[r11]
   mov r11, 16[rbp]
   mov r9, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 32[r8]
   mov r8, 8[r10]
   call 200[r9] #NO_ALL
   .Lt_5562:
   jmp .Lt_54FD
   .Lt_555F:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 269
   jne .Lt_5563
   .Lt_5564:
   mov r11, 16[rbp]
   cmp QWORD PTR 208[r11], 0
   je .Lt_5566
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 8[r10]
   call 208[r8] #NO_ALL
   .Lt_5566:
   jmp .Lt_54FD
   .Lt_5563:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 270
   jne .Lt_5567
   .Lt_5568:
   mov r11, 16[rbp]
   cmp QWORD PTR 216[r11], 0
   je .Lt_556A
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 8[r10]
   call 216[r8] #NO_ALL
   .Lt_556A:
   jmp .Lt_54FD
   .Lt_5567:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 271
   jne .Lt_556B
   .Lt_556C:
   mov r11, 16[rbp]
   cmp QWORD PTR 224[r11], 0
   je .Lt_556E
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 56[rbp]
   mov r8, QWORD PTR 0[r11]
   add r8, 24
   mov r11, 56[rbp]
   mov r9, QWORD PTR 0[r11]
   add r9, 48
   mov r11, 56[rbp]
   mov rdx, QWORD PTR 0[r11]
   add rdx, 72
   mov r11, 56[rbp]
   mov rcx, 0[r11]
   mov r11, 16[rbp]
   mov r12, 16[rbp]
   mov r13, rcx #NO_OPTIM
   mov rcx, 8[r11]
   mov r11, rdx #NO_OPTIM
   mov rdx, 104[r13]
   mov r13, r8 #NO_OPTIM
   mov r8, r11
   #O0mov r9, r9
   mov 32[rsp], r13
   mov rax, 8[r10]
   mov QWORD PTR 40[rsp], rax
   call 224[r12] #NO_ALL
   .Lt_556E:
   jmp .Lt_54FD
   .Lt_556B:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 272
   jne .Lt_556F
   .Lt_5570:
   mov r11, 16[rbp]
   cmp QWORD PTR 232[r11], 0
   je .Lt_5572
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 16[rbp]
   mov r8, 16[rbp]
   mov rcx, 8[r11]
   mov dx, 8[r10]
   call 232[r8] #NO_ALL
   .Lt_5572:
   jmp .Lt_54FD
   .Lt_556F:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 251
   jne .Lt_5573
   .Lt_5574:
   mov r11, 16[rbp]
   cmp QWORD PTR 240[r11], 0
   je .Lt_5576
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 56[rbp]
   mov r8, 0[r11]
   mov r11, 16[rbp]
   mov r9, 16[rbp]
   mov rcx, 8[r11]
   mov rdx, 32[r8]
   mov r8, 8[r10]
   call 240[r9] #NO_ALL
   .Lt_5576:
   jmp .Lt_54FD
   .Lt_5573:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 273
   jne .Lt_5577
   .Lt_5578:
   mov r11, 16[rbp]
   cmp QWORD PTR 248[r11], 0
   je .Lt_557A
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 56[rbp]
   mov r8, 0[r11]
   mov r11, 56[rbp]
   mov r9, 0[r11]
   mov r11, 56[rbp]
   mov rdx, 0[r11]
   mov r11, 56[rbp]
   mov rcx, 0[r11]
   mov r11, 16[rbp]
   mov r12, 16[rbp]
   mov r13, rcx #NO_OPTIM
   mov rcx, 8[r11]
   mov r11, rdx #NO_OPTIM
   mov rdx, 104[r13]
   mov r13, r8 #NO_OPTIM
   mov r8, 80[r11]
   mov r11, r9 #NO_OPTIM
   mov r9d, 56[r9]
   mov rax, 32[r13]
   mov QWORD PTR 32[rsp], rax
   mov rax, 8[r10]
   mov QWORD PTR 40[rsp], rax
   mov QWORD PTR -152[rbp], r11
   call 248[r12] #NO_ALL
   .Lt_557A:
   jmp .Lt_54FD
   .Lt_5577:
   movsxd r11, DWORD PTR 24[rbp]
   cmp r11, 283
   jne .Lt_557B
   .Lt_557C:
   mov r11, 16[rbp]
   cmp QWORD PTR 256[r11], 0
   je .Lt_557E
   mov r11, 56[rbp]
   mov r10, 0[r11]
   mov r11, 56[rbp]
   mov r8, 0[r11]
   mov r11, 16[rbp]
   mov r9, 16[rbp]
   mov rcx, 8[r11]
   mov edx, 32[r8]
   mov r8d, 8[r10]
   call 256[r9] #NO_ALL
   .Lt_557E:
   .Lt_557B:
   .Lt_54FD:
   mov DWORD PTR -116[rbp], 0
#O9jmp .Lt_54FC
   .Lt_54FC:
   mov eax, DWORD PTR-116[rbp]
   mov  r12, QWORD PTR -88[rbp]
   mov  r13, QWORD PTR -96[rbp]
   mov  r14, QWORD PTR -104[rbp]
   mov  r15, QWORD PTR -112[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX7CWEBCTXC1EPNS_7CWINDOWExiiiijjPNS_19CAXHOST_AMBIENTDISPE
_ZN3AFX7CWEBCTXC1EPNS_7CWINDOWExiiiijjPNS_19CAXHOST_AMBIENTDISPE:
   push rbp
   mov  rbp,rsp
   sub rsp, 768
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
   mov DWORD PTR 40[rbp], r9d
   .Lt_557F:
   mov r11, 16[rbp]
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 24
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov ecx, 1768
   call malloc #NO_ALL
#O2mov r11, rax
   #O2mov -120[rbp], r11
   mov -120[rbp], rax #Optim 2
   cmp QWORD PTR -120[rbp], 0
   je .Lt_5584
   mov rcx, -120[rbp]
   mov rdx, 24[rbp]
   mov r8, 32[rbp]
   lea r9, Lt_5583[rip+0]
   mov rax, 40[rbp]
   mov QWORD PTR 32[rsp], rax
   mov rax, 48[rbp]
   mov QWORD PTR 40[rsp], rax
   mov rax, 56[rbp]
   mov QWORD PTR 48[rsp], rax
   mov rax, 64[rbp]
   mov QWORD PTR 56[rsp], rax
   mov rax, 72[rbp]
   mov QWORD PTR 64[rsp], rax
   mov rax, 80[rbp]
   mov QWORD PTR 72[rsp], rax
   mov rax, 88[rbp]
   mov QWORD PTR 80[rsp], rax
   call _ZN3AFX7CAXHOSTC1EPNS_7CWINDOWExRwiiiijjPNS_19CAXHOST_AMBIENTDISPE #NO_ALL
   .Lt_5584:
   mov r11, 16[rbp]
   mov rax, QWORD PTR -120[rbp]
   mov QWORD PTR [r11], rax
   mov r11, 16[rbp]
   cmp QWORD PTR 0[r11], 0
   je .Lt_5586
   mov r11, 16[rbp]
   mov rcx, 0[r11]
   call _ZN3AFX7CAXHOST10OCXDISPPTREv #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   mov 8[r10], r11
   .Lt_5586:
   mov r11, 16[rbp]
   cmp QWORD PTR 8[r11], 0
   je .Lt_5588
   lea r11, -144[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov WORD PTR -144[rbp], 8
   lea rcx, Lt_558A[rip+0]
   call SysAllocString #NO_ALL
#O2mov r11, rax
   #O2mov -136[rbp], r11
   mov -136[rbp], rax #Optim 2
   lea r11, -144[rbp]
   mov r10, 16[rbp]
   mov r8, 16[rbp]
   mov r9, 8[r8]
   mov r8, 0[r9]
   mov rcx, 8[r10]
   mov rdx, r11
   mov r11, r8 #NO_OPTIM
   xor r8d, r8d
   xor r9d, r9d
   mov QWORD PTR 32[rsp], 0
   mov QWORD PTR 40[rsp], 0
   mov QWORD PTR -152[rbp], r11
   call 416[r8] #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call VariantClear #NO_ALL
   mov rcx, 16[rbp]
   call _ZN3AFX7CWEBCTX12SETUIHANDLEREv #NO_ALL
   mov rcx, 16[rbp]
   call _ZN3AFX7CWEBCTX6ADVISEEv #NO_ALL
   .Lt_5588:
   .Lt_5587:
   .Lt_5580:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN3AFX7CWEBCTXD1Ev
_ZN3AFX7CWEBCTXD1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 704
   mov QWORD PTR 16[rbp], rcx
   .Lt_558C:
   mov r11, 16[rbp]
   cmp QWORD PTR 8[r11], 0
   je .Lt_558F
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov r8, 8[r10]
   mov r10, 0[r8]
   mov rcx, 8[r11]
   call 112[r10] #NO_ALL
   .Lt_558F:
   mov r11, 16[rbp]
   cmp QWORD PTR 0[r11], 0
   je .Lt_5592
   mov r11, 16[rbp]
   mov rcx, 0[r11]
   call _ZN3AFX7CAXHOST8UNADVISEEv #NO_ALL
   mov r11, 16[rbp]
   cmp QWORD PTR 0[r11], 0
   je .Lt_5593
   mov r11, 16[rbp]
   mov rcx, 0[r11]
   call _ZN3AFX7CAXHOSTD1Ev #NO_ALL
   mov r11, 16[rbp]
   mov rcx, 0[r11]
   call free #NO_ALL
   .Lt_5593:
   .Lt_5592:
   .Lt_5591:
   mov r11, 16[rbp]
   cmp QWORD PTR 16[r11], 0
   je .Lt_5595
   mov r11, 16[rbp]
   cmp QWORD PTR 16[r11], 0
   je .Lt_5596
   mov r11, 16[rbp]
   mov rcx, 16[r11]
   call _ZN3AFX17CWEBBROWSEREVENTSD1Ev #NO_ALL
   mov r11, 16[rbp]
   mov rcx, 16[r11]
   call free #NO_ALL
   .Lt_5596:
   .Lt_5595:
   mov r11, 16[rbp]
   cmp QWORD PTR 24[r11], 0
   je .Lt_5598
   mov r11, 16[rbp]
   cmp QWORD PTR 24[r11], 0
   je .Lt_5599
   mov r11, 16[rbp]
   mov rcx, 24[r11]
   call _ZN3AFX18CDOCHOSTUIHANDLER2D1Ev #NO_ALL
   mov r11, 16[rbp]
   mov rcx, 24[r11]
   call free #NO_ALL
   .Lt_5599:
   .Lt_5598:
   .Lt_558D:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB2C1Ev
_ZN6CLSDB2C1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 752
   mov QWORD PTR 16[rbp], rcx
   .Lt_5F04:
   mov r11, 16[rbp]
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 8
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 16
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 24
   mov QWORD PTR [r11], 1296
   mov r11, QWORD PTR 16[rbp]
   add r11, 32
   mov QWORD PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 40
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 64
#O4lea r10, 0[r11]
   #O4mov DWORD PTR [r10], 0
   mov DWORD PTR 0[r11], 0 #Optim 4
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov QWORD PTR 0[rsp], rcx #NO_OPTIM
   mov edx, 1296
   mov QWORD PTR 8[rsp], rdx #NO_OPTIM
   lea r8, _ZN8DB2_DATAC1Ev[rip+0]
   mov QWORD PTR 16[rsp], r8 #NO_OPTIM
   xor r9d, r9d
   mov QWORD PTR 24[rsp], r9 #NO_OPTIM
   mov QWORD PTR 32[rsp], 1
   mov QWORD PTR 40[rsp], 0
   mov QWORD PTR 48[rsp], 500
   call fb_ArrayRedimObj #NO_ALL
#O5lea r11, -464[rbp]
   #O5mov rcx, r11
   lea rcx, -464[rbp] #Optim 5
   call _ZN9CLSPARSERC1Ev #NO_ALL
   mov DWORD PTR -432[rbp], -1
   lea r11, -544[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -544[rbp]
   #O5mov rcx, r11
   lea rcx, -544[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -544[rbp]
#O5lea r8, -464[rbp]
   #O5mov rcx, r8
   lea rcx, -464[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -552[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -544[rbp]
   #O5mov rcx, r11
   lea rcx, -544[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   lea r11, -512[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -512[rbp]
   #O5mov rcx, r11
   lea rcx, -512[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5F0B[rip+0]
   mov r9d, 131
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -512[rbp]
#O5lea r8, -488[rbp]
   #O5mov rcx, r8
   lea rcx, -488[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -552[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
#O5lea r11, -512[rbp]
   #O5mov rcx, r11
   lea rcx, -512[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -488[rbp]
   #O5mov rcx, r11
   lea rcx, -488[rbp] #Optim 5
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   lea rdx, Lt_2D0E[rip+0]
   call AFXSTRPARSECOUNT #NO_ALL
   mov r11d, eax
   mov -516[rbp], r11d
   mov DWORD PTR -556[rbp], 1
   mov eax, DWORD PTR -516[rbp]
   mov DWORD PTR -560[rbp], eax
   jmp .Lt_5F0E
   .Lt_5F11:
#O5lea r11, -488[rbp]
   #O5mov rcx, r11
   lea rcx, -488[rbp] #Optim 5
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -584[rbp]
   #O5mov rcx, r10
   lea rcx, -584[rbp] #Optim 5
   mov rdx, r11
   mov r8d, -556[rbp]
   lea r9, Lt_2D0E[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -320[rbp]
   #O5mov rcx, r10
   lea rcx, -320[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
#O5lea r11, -584[rbp]
   #O5mov rcx, r11
   lea rcx, -584[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -464[rbp]
   mov rcx, 16[rbp]
   mov rdx, r11
   mov r8d, 7
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   .Lt_5F0F:
   movsxd r11, DWORD PTR -556[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -556[rbp], r10d
   mov -556[rbp], r11d #Optim 2
   .Lt_5F0E:
   movsxd r11, DWORD PTR -556[rbp]
   movsxd r10, DWORD PTR -560[rbp]
   cmp r11, r10
   jle .Lt_5F11
   .Lt_5F10:
   mov rcx, 16[rbp]
   call _ZN6CLSDB28DBREWINDEv #NO_ALL
#O5lea r11, -488[rbp]
   #O5mov rcx, r11
   lea rcx, -488[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -464[rbp]
   #O5mov rcx, r11
   lea rcx, -464[rbp] #Optim 5
   call _ZN9CLSPARSERD1Ev #NO_ALL
   .Lt_5F05:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB213DBGETFREESLOTEv
_ZN6CLSDB213DBGETFREESLOTEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 752
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5F13:
   mov DWORD PTR -120[rbp], -1
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayLBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -124[rbp], r10d
   mov -124[rbp], r11d #Optim 2
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayUBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -128[rbp], r10d
   mov -128[rbp], r11d #Optim 2
   jmp .Lt_5F16
   .Lt_5F19:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR -124[rbp]
   imul r10, 1296
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   cmp BYTE PTR 0[r8], 0
   je .Lt_5F1B
   mov eax, DWORD PTR -124[rbp]
   mov DWORD PTR -120[rbp], eax
   jmp .Lt_5F18
   .Lt_5F1B:
   .Lt_5F1A:
   .Lt_5F17:
   movsxd r11, DWORD PTR -124[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -124[rbp], r10d
   mov -124[rbp], r11d #Optim 2
   .Lt_5F16:
   movsxd r11, DWORD PTR -124[rbp]
   movsxd r10, DWORD PTR -128[rbp]
   cmp r11, r10
   jle .Lt_5F19
   .Lt_5F18:
   movsxd r11, DWORD PTR -120[rbp]
   mov rax, -1
   cmp r11, rax
   jne .Lt_5F1D
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayUBound #NO_ALL
   mov r11, rax
   inc r11
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -120[rbp]
   add r11, 10000
   mov r10, 16[rbp]
#O5lea r8, 0[r10]
   #O5mov rcx, r8
   lea rcx, 0[r10] #Optim 5
   mov QWORD PTR 0[rsp], rcx #NO_OPTIM
   mov edx, 1296
   mov QWORD PTR 8[rsp], rdx #NO_OPTIM
   lea r8, _ZN8DB2_DATAC1Ev[rip+0]
   mov QWORD PTR 16[rsp], r8 #NO_OPTIM
   xor r9d, r9d
   mov QWORD PTR 24[rsp], r9 #NO_OPTIM
   mov QWORD PTR 32[rsp], 1
   mov QWORD PTR 40[rsp], 0
   mov 48[rsp], r11
   call fb_ArrayRedimPresvObj #NO_ALL
   .Lt_5F1D:
   .Lt_5F1C:
   mov eax, DWORD PTR -120[rbp]
   mov DWORD PTR -116[rbp], eax
   .Lt_5F14:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB25DBADDEP9CLSPARSERi
_ZN6CLSDB25DBADDEP9CLSPARSERi:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov DWORD PTR 32[rbp], r8d
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_5F1F:
#O5lea r11, -1416[rbp]
   #O5mov rcx, r11
   lea rcx, -1416[rbp] #Optim 5
   call _ZN8DB2_DATAC1Ev #NO_ALL
   mov BYTE PTR -1416[rbp], 0
   mov eax, DWORD PTR 32[rbp]
   mov DWORD PTR -888[rbp], eax
   mov r11, 24[rbp]
   mov eax, DWORD PTR 32[r11]
   mov DWORD PTR -884[rbp], eax
   mov r11, 24[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -1408[rbp]
   #O5mov rcx, r10
   lea rcx, -1408[rbp] #Optim 5
   mov edx, 260
   mov r8, r11
   call fb_WstrAssign #NO_ALL
   mov r11, rax
   mov r11, 24[rbp]
   mov eax, DWORD PTR 24[r11]
   mov DWORD PTR -1412[rbp], eax
   movsxd r11, DWORD PTR 32[rbp]
   cmp r11, 7
   jne .Lt_5F22
   .Lt_5F23:
   mov r11, 24[rbp]
   lea r10, 144[r11]
#O5lea r11, -880[rbp]
   #O5mov rcx, r11
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 24[rbp]
   lea r10, 144[r11]
#O5lea r11, -285[rbp]
   #O5mov rcx, r11
   lea rcx, -285[rbp] #Optim 5
   mov edx, 75
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
#O5lea r11, -880[rbp]
   #O5mov rcx, r11
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_5F25
   jmp .Lt_5F20
   .Lt_5F25:
   jmp .Lt_5F21
   .Lt_5F22:
   movsxd r11, DWORD PTR 32[rbp]
   cmp r11, 5
   jne .Lt_5F26
   .Lt_5F27:
   mov r11, 24[rbp]
   lea r10, 144[r11]
   mov rcx, 16[rbp]
   mov rdx, r10
   call _ZN6CLSDB210DBFINDTYPEER8FBSTRING #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_5F29
   mov QWORD PTR -120[rbp], 0
   jmp .Lt_5F20
   .Lt_5F29:
   mov r11, 24[rbp]
   mov eax, DWORD PTR 136[r11]
   mov DWORD PTR -884[rbp], eax
   mov r11, 24[rbp]
   lea r10, 144[r11]
#O5lea r11, -880[rbp]
   #O5mov rcx, r11
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 24[rbp]
   lea r10, 168[r11]
#O5lea r11, -285[rbp]
   #O5mov rcx, r11
   lea rcx, -285[rbp] #Optim 5
   mov edx, 75
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 24[rbp]
   mov al, BYTE PTR 304[r11]
   mov BYTE PTR -133[rbp], al
   mov r11, 24[rbp]
   lea r10, 320[r11]
#O5lea r11, -210[rbp]
   #O5mov rcx, r11
   lea rcx, -210[rbp] #Optim 5
   mov edx, 75
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
#O5lea r11, -880[rbp]
   #O5mov rcx, r11
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_5F2B
   jmp .Lt_5F20
   .Lt_5F2B:
   jmp .Lt_5F21
   .Lt_5F26:
   movsxd r11, DWORD PTR 32[rbp]
   cmp r11, 6
   jne .Lt_5F2C
   .Lt_5F2D:
#O5lea r11, -880[rbp]
   #O5mov rcx, r11
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 24[rbp]
   lea r10, 248[r11]
#O5lea r11, -805[rbp]
   #O5mov rcx, r11
   lea rcx, -805[rbp] #Optim 5
   mov edx, 260
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 24[rbp]
   movsxd r10, DWORD PTR 32[r11]
   inc r10
#O2mov r11d, r10d
   #O2mov -884[rbp], r11d
   mov -884[rbp], r10d #Optim 2
   jmp .Lt_5F21
   .Lt_5F2C:
   movsxd r11, DWORD PTR 32[rbp]
   cmp r11, 2
   je .Lt_5F2F
   .Lt_5F30:
   movsxd r11, DWORD PTR 32[rbp]
   cmp r11, 3
   je .Lt_5F2F
   .Lt_5F31:
   movsxd r11, DWORD PTR 32[rbp]
   cmp r11, 4
   jne .Lt_5F2E
   .Lt_5F2F:
   mov r11, 24[rbp]
   mov eax, DWORD PTR 136[r11]
   mov DWORD PTR -884[rbp], eax
   mov r11, 24[rbp]
   lea r10, 88[r11]
#O5lea r11, -880[rbp]
   #O5mov rcx, r11
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 24[rbp]
   lea r10, 112[r11]
#O5lea r11, -545[rbp]
   #O5mov rcx, r11
   lea rcx, -545[rbp] #Optim 5
   mov edx, 260
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 24[rbp]
   mov rax, QWORD PTR 312[r11]
   mov QWORD PTR -128[rbp], rax
#O5lea r11, -880[rbp]
   #O5mov rcx, r11
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_5F33
   jmp .Lt_5F20
   .Lt_5F33:
   jmp .Lt_5F21
   .Lt_5F2E:
   movsxd r11, DWORD PTR 32[rbp]
   cmp r11, 1
   jne .Lt_5F34
   .Lt_5F35:
   lea rcx, Lt_2A16[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov r10, 24[rbp]
   lea r8, 88[r10]
   mov ecx, 1
   mov rdx, r8
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
   cmp r11, 0
   jne .Lt_5F37
   mov r11, 24[rbp]
   lea r10, 192[r11]
   mov r11, 24[rbp]
   lea r8, 88[r11]
   mov r11, 24[rbp]
   lea r9, 144[r11]
   lea r11, -1448[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1448[rbp]
   #O5mov rcx, r11
   lea rcx, -1448[rbp] #Optim 5
   mov rdx, r9
   mov r11, r8 #NO_OPTIM
   mov r8, -1
   lea r9, Lt_2A16[rip+0]
   mov QWORD PTR 32[rsp], 2
   mov QWORD PTR -1544[rbp], r10
   mov QWORD PTR -1552[rbp], r11
   call fb_StrConcat #NO_ALL
   mov r11, rax
   lea r10, -1472[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -1472[rbp]
   #O5mov rcx, r10
   lea rcx, -1472[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
#O6mov r11, QWORD PTR -1552[rbp]
   #O6mov r9, r11
   mov r9, QWORD PTR -1552[rbp] #Optim 6
   mov rax, -1
   mov QWORD PTR 32[rsp], rax
   call fb_StrConcat #NO_ALL
   mov r11, rax
   lea r10, -1512[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -1512[rbp]
   #O5mov rcx, r10
   lea rcx, -1512[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
   lea r9, Lt_2A16[rip+0]
   mov QWORD PTR 32[rsp], 2
   call fb_StrConcat #NO_ALL
   mov r11, rax
   lea r10, -1536[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -1536[rbp]
   #O5mov rcx, r10
   lea rcx, -1536[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
#O6mov r11, QWORD PTR -1544[rbp]
   #O6mov r9, r11
   mov r9, QWORD PTR -1544[rbp] #Optim 6
   mov rax, -1
   mov QWORD PTR 32[rsp], rax
   call fb_StrConcat #NO_ALL
   mov r11, rax
#O5lea r10, -880[rbp]
   #O5mov rcx, r10
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   jmp .Lt_5F36
   .Lt_5F37:
   mov r11, 24[rbp]
   lea r10, 192[r11]
   mov r11, 24[rbp]
   lea r8, 88[r11]
   lea r11, -1576[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1576[rbp]
   #O5mov rcx, r11
   lea rcx, -1576[rbp] #Optim 5
   mov rdx, r8
   mov r8, -1
   lea r9, Lt_2A16[rip+0]
   mov QWORD PTR 32[rsp], 2
   mov QWORD PTR -1544[rbp], r10
   call fb_StrConcat #NO_ALL
   mov r11, rax
   lea r10, -1600[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -1600[rbp]
   #O5mov rcx, r10
   lea rcx, -1600[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
#O6mov r11, QWORD PTR -1544[rbp]
   #O6mov r9, r11
   mov r9, QWORD PTR -1544[rbp] #Optim 6
   mov rax, -1
   mov QWORD PTR 32[rsp], rax
   call fb_StrConcat #NO_ALL
   mov r11, rax
#O5lea r10, -880[rbp]
   #O5mov rcx, r10
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   .Lt_5F36:
   mov r11, 24[rbp]
   lea r10, 112[r11]
#O5lea r11, -545[rbp]
   #O5mov rcx, r11
   lea rcx, -545[rbp] #Optim 5
   mov edx, 260
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 24[rbp]
   lea r10, 216[r11]
#O5lea r11, -285[rbp]
   #O5mov rcx, r11
   lea rcx, -285[rbp] #Optim 5
   mov edx, 75
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 24[rbp]
   mov al, BYTE PTR 272[r11]
   mov BYTE PTR -135[rbp], al
#O5lea r11, -880[rbp]
   #O5mov rcx, r11
   lea rcx, -880[rbp] #Optim 5
   mov edx, 75
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_5F3F
   jmp .Lt_5F20
   .Lt_5F3F:
   .Lt_5F34:
   .Lt_5F21:
   mov rcx, 16[rbp]
   call _ZN6CLSDB213DBGETFREESLOTEv #NO_ALL
   mov r11d, eax
   mov -1420[rbp], r11d
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR -1420[rbp]
   imul r10, 1296
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   lea r11, -1416[rbp]
   mov r10, 162
   .Lt_5F40:
   mov rax, [r11]
   mov [r8], rax
   add r11, 8
   add r8, 8
   dec r10
   jnz .Lt_5F40
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR -1420[rbp]
   imul r10, 1296
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   mov -120[rbp], r8
   .Lt_5F20:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB211DBADDDIRECTEP8DB2_DATA
_ZN6CLSDB211DBADDDIRECTEP8DB2_DATA:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5F41:
   cmp QWORD PTR 24[rbp], 0
   jne .Lt_5F44
   jmp .Lt_5F42
   .Lt_5F44:
   mov rcx, 16[rbp]
   call _ZN6CLSDB213DBGETFREESLOTEv #NO_ALL
   mov r11d, eax
   mov -120[rbp], r11d
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR -120[rbp]
   imul r10, 1296
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   mov r11, 24[rbp]
   mov r10, 162
   .Lt_5F45:
   mov rax, [r11]
   mov [r8], rax
   add r11, 8
   add r8, 8
   dec r10
   jnz .Lt_5F45
   mov DWORD PTR -116[rbp], 0
   .Lt_5F42:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB28DBDELETEERw
_ZN6CLSDB28DBDELETEERw:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5F46:
#O4lea r11, -120[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -120[rbp], 0 #Optim 4
   mov rcx, 24[rbp]
   xor edx, edx
   call fb_WstrUcase2 #NO_ALL
#O2mov r11, rax
   #O2mov -152[rbp], r11
   mov -152[rbp], rax #Optim 2
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   mov rdx, -152[rbp]
   call _ZN3AFX5CWSTRC1EPw #NO_ALL
   mov rcx, -152[rbp]
   call fb_WstrDelete #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayLBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -156[rbp], r10d
   mov -156[rbp], r11d #Optim 2
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayUBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -160[rbp], r10d
   mov -160[rbp], r11d #Optim 2
   jmp .Lt_5F4A
   .Lt_5F4D:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR -156[rbp]
   imul r10, 1296
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   cmp BYTE PTR 0[r8], 1
   jne .Lt_5F4F
   jmp .Lt_5F4B
   .Lt_5F4F:
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   movsxd r8, DWORD PTR -156[rbp]
   imul r8, 1296
   mov r9, QWORD PTR 0[r10]
   add r9, r8
#O5lea r10, 8[r9]
   #O5mov rcx, r10
   lea rcx, 8[r9] #Optim 5
   xor edx, edx
   mov QWORD PTR -184[rbp], r11
   call fb_WstrUcase2 #NO_ALL
#O2mov r11, rax
   #O2mov -168[rbp], r11
   mov -168[rbp], rax #Optim 2
   mov rcx, -168[rbp]
#O6mov r11, QWORD PTR -184[rbp]
   #O6mov rdx, r11
   mov rdx, QWORD PTR -184[rbp] #Optim 6
   call fb_WstrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov -176[rbp], r10
   mov rcx, -168[rbp]
   call fb_WstrDelete #NO_ALL
   cmp QWORD PTR -176[rbp], 0
   je .Lt_5F52
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR -156[rbp]
   imul r10, 1296
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   mov BYTE PTR [r8], 1
   movsxd r11, DWORD PTR -120[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   .Lt_5F52:
   .Lt_5F51:
   .Lt_5F4B:
   movsxd r11, DWORD PTR -156[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -156[rbp], r10d
   mov -156[rbp], r11d #Optim 2
   .Lt_5F4A:
   movsxd r11, DWORD PTR -156[rbp]
   movsxd r10, DWORD PTR -160[rbp]
   cmp r11, r10
   jle .Lt_5F4D
   .Lt_5F4C:
   mov eax, DWORD PTR -120[rbp]
   mov DWORD PTR -116[rbp], eax
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   .Lt_5F47:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB211DBDELETEALLEv
_ZN6CLSDB211DBDELETEALLEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_5F54:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayLBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayUBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -124[rbp], r10d
   mov -124[rbp], r11d #Optim 2
   jmp .Lt_5F57
   .Lt_5F5A:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR -120[rbp]
   imul r10, 1296
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   mov BYTE PTR [r8], 1
   mov BYTE PTR -113[rbp], 1
   .Lt_5F58:
   movsxd r11, DWORD PTR -120[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   .Lt_5F57:
   movsxd r11, DWORD PTR -120[rbp]
   movsxd r10, DWORD PTR -124[rbp]
   cmp r11, r10
   jle .Lt_5F5A
   .Lt_5F59:
   .Lt_5F55:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB218DBDELETEBYFILETYPEEi
_ZN6CLSDB218DBDELETEBYFILETYPEEi:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov DWORD PTR 24[rbp], edx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_5F5B:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayLBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayUBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -124[rbp], r10d
   mov -124[rbp], r11d #Optim 2
   jmp .Lt_5F5E
   .Lt_5F61:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR -120[rbp]
   imul r10, 1296
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   movsxd r11, DWORD PTR 4[r8]
   movsxd r10, DWORD PTR 24[rbp]
   cmp r11, r10
   jne .Lt_5F63
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR -120[rbp]
   imul r10, 1296
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   mov BYTE PTR [r8], 1
   .Lt_5F63:
   .Lt_5F62:
   mov BYTE PTR -113[rbp], 1
   .Lt_5F5F:
   movsxd r11, DWORD PTR -120[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   .Lt_5F5E:
   movsxd r11, DWORD PTR -120[rbp]
   movsxd r10, DWORD PTR -124[rbp]
   cmp r11, r10
   jle .Lt_5F61
   .Lt_5F60:
   .Lt_5F5C:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB28DBREWINDEv
_ZN6CLSDB28DBREWINDEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5F64:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayLBound #NO_ALL
   mov r11, rax
   mov rax, -1
   add r11, rax
   mov r10d, r11d
   mov r11, 16[rbp]
   mov 64[r11], r10d
   mov DWORD PTR -116[rbp], 0
   .Lt_5F65:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB29DBGETNEXTEv
_ZN6CLSDB29DBGETNEXTEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_5F66:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   mov edx, 1
   call fb_ArrayUBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -124[rbp], r10d
   mov -124[rbp], r11d #Optim 2
   .Lt_5F68:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 64[r11]
   inc r10
   mov r11d, r10d
   mov r10, 16[rbp]
   mov 64[r10], r11d
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 64[r11]
   movsxd r11, DWORD PTR -124[rbp]
   cmp r10, r11
   jle .Lt_5F6C
   mov QWORD PTR -120[rbp], 0
   jmp .Lt_5F67
   .Lt_5F6C:
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   movsxd r8, DWORD PTR 64[r10]
   imul r8, 1296
   mov r10, QWORD PTR 0[r11]
   add r10, r8
   cmp BYTE PTR 0[r10], 0
   je .Lt_5F6E
   jmp .Lt_5F6A
   jmp .Lt_5F6D
   .Lt_5F6E:
   jmp .Lt_5F69
   .Lt_5F6D:
   .Lt_5F6A:
   jmp .Lt_5F68
   .Lt_5F69:
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   movsxd r8, DWORD PTR 64[r10]
   imul r8, 1296
   mov r10, QWORD PTR 0[r11]
   add r10, r8
   mov -120[rbp], r10
   .Lt_5F67:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB26DBSEEKE8FBSTRINGiS0_
_ZN6CLSDB26DBSEEKE8FBSTRINGiS0_:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov DWORD PTR 32[rbp], r8d
   mov QWORD PTR 40[rbp], r9
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_5F6F:
#O4lea r11, -128[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -128[rbp], 0 #Optim 4
#O4lea r11, -132[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -132[rbp], 0 #Optim 4
#O4lea r11, -136[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -136[rbp], 0 #Optim 4
   lea rcx, Lt_5F71[rip+0]
   mov edx, 6
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov ecx, 1
   mov rdx, 24[rbp]
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -136[rbp], r10d
   mov -136[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -136[rbp]
   cmp r11, 0
   je .Lt_5F73
   mov DWORD PTR -132[rbp], 1
   jmp .Lt_5F72
   .Lt_5F73:
   lea rcx, Lt_5F74[rip+0]
   mov edx, 6
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov ecx, 1
   mov rdx, 24[rbp]
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -136[rbp], r10d
   mov -136[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -136[rbp]
   cmp r11, 0
   je .Lt_5F76
   mov DWORD PTR -132[rbp], 2
   jmp .Lt_5F75
   .Lt_5F76:
   lea rcx, Lt_5F77[rip+0]
   mov edx, 7
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov ecx, 1
   mov rdx, 24[rbp]
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -136[rbp], r10d
   mov -136[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -136[rbp]
   cmp r11, 0
   je .Lt_5F79
   mov DWORD PTR -132[rbp], 3
   jmp .Lt_5F78
   .Lt_5F79:
   lea rcx, Lt_5F7A[rip+0]
   mov edx, 7
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov ecx, 1
   mov rdx, 24[rbp]
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -136[rbp], r10d
   mov -136[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -136[rbp]
   cmp r11, 0
   je .Lt_5F7C
   mov DWORD PTR -132[rbp], 4
   .Lt_5F7C:
   .Lt_5F7B:
   .Lt_5F78:
   .Lt_5F75:
   .Lt_5F72:
   movsxd r11, DWORD PTR -136[rbp]
   cmp r11, 0
   je .Lt_5F7E
   movsxd r11, DWORD PTR -136[rbp]
   mov rax, -1
   add r11, rax
   mov rcx, 24[rbp]
   mov rdx, r11
   call fb_LEFT #NO_ALL
   mov r11, rax
   mov rcx, 24[rbp]
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_5F7E:
   mov rcx, 24[rbp]
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
   mov rcx, 24[rbp]
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov rcx, 16[rbp]
   call _ZN6CLSDB28DBREWINDEv #NO_ALL
   .Lt_5F7F:
   mov rcx, 16[rbp]
   call _ZN6CLSDB29DBGETNEXTEv #NO_ALL
#O2mov r11, rax
   #O2mov -128[rbp], r11
   mov -128[rbp], rax #Optim 2
   cmp QWORD PTR -128[rbp], 0
   jne .Lt_5F83
   jmp .Lt_5F80
   .Lt_5F83:
   mov r11, -128[rbp]
   movsxd r10, DWORD PTR 528[r11]
   movsxd r11, DWORD PTR 32[rbp]
   cmp r10, r11
   jne .Lt_5F85
   mov r11, -128[rbp]
#O5lea r10, 536[r11]
   #O5mov rcx, r10
   lea rcx, 536[r11] #Optim 5
   call fb_StrAllocTempDescZ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
   mov rcx, 24[rbp]
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_5F86
   movsxd r11, DWORD PTR -132[rbp]
   mov r10, -128[rbp]
   cmp r11, QWORD PTR 1288[r10]
   sete al
   movzx r11, al
   neg r11
   mov -144[rbp], r11
   jmp .Lt_5F92
   .Lt_5F86:
   mov QWORD PTR -144[rbp], 0
   .Lt_5F92:
   cmp QWORD PTR -144[rbp], 0
   je .Lt_5F89
   mov rcx, 40[rbp]
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_5F8B
   lea r11, -192[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov rcx, 40[rbp]
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
#O5lea r10, -192[rbp]
   #O5mov rcx, r10
   lea rcx, -192[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov rcx, -192[rbp]
   mov QWORD PTR -216[rbp], r11
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -200[rbp], r11
   mov -200[rbp], rax #Optim 2
   mov r11, -128[rbp]
#O5lea r10, 8[r11]
   #O5mov rcx, r10
   lea rcx, 8[r11] #Optim 5
   xor edx, edx
   call fb_WstrUcase2 #NO_ALL
#O2mov r11, rax
   #O2mov -152[rbp], r11
   mov -152[rbp], rax #Optim 2
   mov rcx, -152[rbp]
   mov rdx, -200[rbp]
   call fb_WstrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov -208[rbp], r10
   mov rcx, -200[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -192[rbp]
   #O5mov rcx, r11
   lea rcx, -192[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   mov rcx, -152[rbp]
   call fb_WstrDelete #NO_ALL
   cmp QWORD PTR -208[rbp], 0
   je .Lt_5F90
   mov rax, QWORD PTR -128[rbp]
   mov QWORD PTR -120[rbp], rax
   jmp .Lt_5F70
   .Lt_5F90:
   .Lt_5F8F:
   jmp .Lt_5F8A
   .Lt_5F8B:
   mov rax, QWORD PTR -128[rbp]
   mov QWORD PTR -120[rbp], rax
   jmp .Lt_5F70
   .Lt_5F8A:
   .Lt_5F89:
   .Lt_5F88:
   .Lt_5F85:
   .Lt_5F84:
   .Lt_5F81:
   jmp .Lt_5F7F
   .Lt_5F80:
   mov QWORD PTR -120[rbp], 0
   .Lt_5F70:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB214DBFINDFUNCTIONER8FBSTRINGS1_
_ZN6CLSDB214DBFINDFUNCTIONER8FBSTRINGS1_:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_5F93:
   lea r11, -200[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   mov rdx, -1
   mov r8, 32[rbp]
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -200[rbp]
   lea r8, -160[rbp]
   mov QWORD PTR 0[r8], 0 #NO_OPTIM
   mov QWORD PTR 8[r8], 0 #NO_OPTIM
   mov QWORD PTR 16[r8], 0 #NO_OPTIM
#O5lea r8, -160[rbp]
   #O5mov rcx, r8
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, 24[rbp]
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   mov QWORD PTR -208[rbp], r10
   mov QWORD PTR -216[rbp], r11
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -160[rbp]
   mov rcx, 16[rbp]
   mov rdx, r10
   mov r8d, 2
#O6mov r10, QWORD PTR -208[rbp]
   #O6mov r9, r10
   mov r9, QWORD PTR -208[rbp] #Optim 6
   mov QWORD PTR -208[rbp], r11
   call _ZN6CLSDB26DBSEEKE8FBSTRINGiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov -120[rbp], r11
   mov -120[rbp], rax #Optim 2
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O9jmp .Lt_5F94
   .Lt_5F94:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB29DBFINDSUBER8FBSTRINGS1_
_ZN6CLSDB29DBFINDSUBER8FBSTRINGS1_:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_5F97:
   lea r11, -200[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   mov rdx, -1
   mov r8, 32[rbp]
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -200[rbp]
   lea r8, -160[rbp]
   mov QWORD PTR 0[r8], 0 #NO_OPTIM
   mov QWORD PTR 8[r8], 0 #NO_OPTIM
   mov QWORD PTR 16[r8], 0 #NO_OPTIM
#O5lea r8, -160[rbp]
   #O5mov rcx, r8
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, 24[rbp]
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   mov QWORD PTR -208[rbp], r10
   mov QWORD PTR -216[rbp], r11
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -160[rbp]
   mov rcx, 16[rbp]
   mov rdx, r10
   mov r8d, 3
#O6mov r10, QWORD PTR -208[rbp]
   #O6mov r9, r10
   mov r9, QWORD PTR -208[rbp] #Optim 6
   mov QWORD PTR -208[rbp], r11
   call _ZN6CLSDB26DBSEEKE8FBSTRINGiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov -120[rbp], r11
   mov -120[rbp], rax #Optim 2
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O9jmp .Lt_5F98
   .Lt_5F98:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB214DBFINDPROPERTYER8FBSTRINGS1_
_ZN6CLSDB214DBFINDPROPERTYER8FBSTRINGS1_:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov QWORD PTR 32[rbp], r8
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_5F9B:
   lea r11, -200[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   mov rdx, -1
   mov r8, 32[rbp]
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -200[rbp]
   lea r8, -160[rbp]
   mov QWORD PTR 0[r8], 0 #NO_OPTIM
   mov QWORD PTR 8[r8], 0 #NO_OPTIM
   mov QWORD PTR 16[r8], 0 #NO_OPTIM
#O5lea r8, -160[rbp]
   #O5mov rcx, r8
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, 24[rbp]
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   mov QWORD PTR -208[rbp], r10
   mov QWORD PTR -216[rbp], r11
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -160[rbp]
   mov rcx, 16[rbp]
   mov rdx, r10
   mov r8d, 4
#O6mov r10, QWORD PTR -208[rbp]
   #O6mov r9, r10
   mov r9, QWORD PTR -208[rbp] #Optim 6
   mov QWORD PTR -208[rbp], r11
   call _ZN6CLSDB26DBSEEKE8FBSTRINGiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov -120[rbp], r11
   mov -120[rbp], rax #Optim 2
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O9jmp .Lt_5F9C
   .Lt_5F9C:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB214DBFINDVARIABLEER8FBSTRING
_ZN6CLSDB214DBFINDVARIABLEER8FBSTRING:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_5F9F:
   lea r11, -200[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -200[rbp]
   lea r8, -160[rbp]
   mov QWORD PTR 0[r8], 0 #NO_OPTIM
   mov QWORD PTR 8[r8], 0 #NO_OPTIM
   mov QWORD PTR 16[r8], 0 #NO_OPTIM
#O5lea r8, -160[rbp]
   #O5mov rcx, r8
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, 24[rbp]
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   mov QWORD PTR -208[rbp], r10
   mov QWORD PTR -216[rbp], r11
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -160[rbp]
   mov rcx, 16[rbp]
   mov rdx, r10
   mov r8d, 1
#O6mov r10, QWORD PTR -208[rbp]
   #O6mov r9, r10
   mov r9, QWORD PTR -208[rbp] #Optim 6
   mov QWORD PTR -208[rbp], r11
   call _ZN6CLSDB26DBSEEKE8FBSTRINGiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov -120[rbp], r11
   mov -120[rbp], rax #Optim 2
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O9jmp .Lt_5FA0
   .Lt_5FA0:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB210DBFINDTYPEER8FBSTRING
_ZN6CLSDB210DBFINDTYPEER8FBSTRING:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_5FA3:
#O4lea r11, -128[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -128[rbp], 0 #Optim 4
   lea r11, -192[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -192[rbp]
   #O5mov rcx, r11
   lea rcx, -192[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -192[rbp]
   lea r8, -168[rbp]
   mov QWORD PTR 0[r8], 0 #NO_OPTIM
   mov QWORD PTR 8[r8], 0 #NO_OPTIM
   mov QWORD PTR 16[r8], 0 #NO_OPTIM
#O5lea r8, -168[rbp]
   #O5mov rcx, r8
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, 24[rbp]
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   mov QWORD PTR -200[rbp], r10
   mov QWORD PTR -208[rbp], r11
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -168[rbp]
   mov rcx, 16[rbp]
   mov rdx, r10
   mov r8d, 5
#O6mov r10, QWORD PTR -200[rbp]
   #O6mov r9, r10
   mov r9, QWORD PTR -200[rbp] #Optim 6
   mov QWORD PTR -200[rbp], r11
   call _ZN6CLSDB26DBSEEKE8FBSTRINGiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov -128[rbp], r11
   mov -128[rbp], rax #Optim 2
#O5lea r11, -192[rbp]
   #O5mov rcx, r11
   lea rcx, -192[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   cmp QWORD PTR -128[rbp], 0
   jne .Lt_5FA8
   mov QWORD PTR -120[rbp], 0
   jmp .Lt_5FA4
   .Lt_5FA8:
   mov r11, -128[rbp]
#O5lea r10, 1131[r11]
   #O5mov rcx, r10
   lea rcx, 1131[r11] #Optim 5
   call fb_StrAllocTempDescZ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
   mov r10, -128[rbp]
#O5lea r8, 536[r10]
   #O5mov rcx, r8
   lea rcx, 536[r10] #Optim 5
   mov QWORD PTR -200[rbp], r11
   call fb_StrAllocTempDescZ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
#O6mov r11, QWORD PTR -200[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -200[rbp] #Optim 6
   mov r9, -1
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   je .Lt_5FAA
   lea r11, -256[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -256[rbp]
   #O5mov rcx, r11
   lea rcx, -256[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -256[rbp]
   lea r8, -232[rbp]
   mov QWORD PTR 0[r8], 0 #NO_OPTIM
   mov QWORD PTR 8[r8], 0 #NO_OPTIM
   mov QWORD PTR 16[r8], 0 #NO_OPTIM
   mov r8, -128[rbp]
   lea r9, 1131[r8]
#O5lea r8, -232[rbp]
   #O5mov rcx, r8
   lea rcx, -232[rbp] #Optim 5
   mov rdx, -1
   mov r8, r9
   mov r9d, 75
   mov QWORD PTR 32[rsp], 0
   mov QWORD PTR -200[rbp], r10
   mov QWORD PTR -208[rbp], r11
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -232[rbp]
   mov rcx, 16[rbp]
   mov rdx, r10
   mov r8d, 5
#O6mov r10, QWORD PTR -200[rbp]
   #O6mov r9, r10
   mov r9, QWORD PTR -200[rbp] #Optim 6
   mov QWORD PTR -200[rbp], r11
   call _ZN6CLSDB26DBSEEKE8FBSTRINGiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov -120[rbp], r11
   mov -120[rbp], rax #Optim 2
#O5lea r11, -256[rbp]
   #O5mov rcx, r11
   lea rcx, -256[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -232[rbp]
   #O5mov rcx, r11
   lea rcx, -232[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_5FA4
   .Lt_5FAA:
   .Lt_5FA9:
   mov rax, QWORD PTR -128[rbp]
   mov QWORD PTR -120[rbp], rax
#O9jmp .Lt_5FA4
   .Lt_5FA4:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN6CLSDB27DBDEBUGEv
_ZN6CLSDB27DBDEBUGEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_5FAD:
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMC1Ev #NO_ALL
   lea r11, -168[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FAF[rip+0]
   mov r9d, 11
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -168[rbp]
#O5lea r8, -176[rbp]
   #O5mov rcx, r8
   lea rcx, -176[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -176[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   mov r8d, 1
   xor r9d, r9d
   call _ZN3AFX11CTEXTSTREAM6CREATEERNS_5CBSTREbb #NO_ALL
#O5lea r11, -176[rbp]
   #O5mov rcx, r11
   lea rcx, -176[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
#O4lea r11, -204[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -204[rbp], 0 #Optim 4
#O4lea r11, -216[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -216[rbp], 0 #Optim 4
   mov DWORD PTR -276[rbp], 1
   .Lt_5FB5:
   movsxd r11, DWORD PTR -276[rbp]
   cmp r11, 1
   jne .Lt_5FB7
   .Lt_5FB8:
   lea r11, -424[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -424[rbp]
   #O5mov rcx, r11
   lea rcx, -424[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FB9[rip+0]
   mov r9d, 14
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -424[rbp]
#O5lea r8, -200[rbp]
   #O5mov rcx, r8
   lea rcx, -200[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -424[rbp]
   #O5mov rcx, r11
   lea rcx, -424[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   mov DWORD PTR -204[rbp], 5
   jmp .Lt_5FB6
   .Lt_5FB7:
   movsxd r11, DWORD PTR -276[rbp]
   cmp r11, 2
   jne .Lt_5FBB
   .Lt_5FBC:
   lea r11, -448[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -448[rbp]
   #O5mov rcx, r11
   lea rcx, -448[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FBD[rip+0]
   mov r9d, 10
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -448[rbp]
#O5lea r8, -200[rbp]
   #O5mov rcx, r8
   lea rcx, -200[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -448[rbp]
   #O5mov rcx, r11
   lea rcx, -448[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   mov DWORD PTR -204[rbp], 2
   jmp .Lt_5FB6
   .Lt_5FBB:
   movsxd r11, DWORD PTR -276[rbp]
   cmp r11, 3
   jne .Lt_5FBF
   .Lt_5FC0:
   lea r11, -488[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -488[rbp]
   #O5mov rcx, r11
   lea rcx, -488[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FC1[rip+0]
   mov r9d, 5
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -488[rbp]
#O5lea r8, -200[rbp]
   #O5mov rcx, r8
   lea rcx, -200[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -488[rbp]
   #O5mov rcx, r11
   lea rcx, -488[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   mov DWORD PTR -204[rbp], 3
   jmp .Lt_5FB6
   .Lt_5FBF:
   movsxd r11, DWORD PTR -276[rbp]
   cmp r11, 4
   jne .Lt_5FC3
   .Lt_5FC4:
   lea r11, -512[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -512[rbp]
   #O5mov rcx, r11
   lea rcx, -512[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FC5[rip+0]
   mov r9d, 9
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -512[rbp]
#O5lea r8, -200[rbp]
   #O5mov rcx, r8
   lea rcx, -200[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -512[rbp]
   #O5mov rcx, r11
   lea rcx, -512[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   mov DWORD PTR -204[rbp], 4
   jmp .Lt_5FB6
   .Lt_5FC3:
   movsxd r11, DWORD PTR -276[rbp]
   cmp r11, 5
   jne .Lt_5FC7
   .Lt_5FC8:
   lea r11, -552[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -552[rbp]
   #O5mov rcx, r11
   lea rcx, -552[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FC9[rip+0]
   mov r9d, 10
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -552[rbp]
#O5lea r8, -200[rbp]
   #O5mov rcx, r8
   lea rcx, -200[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -552[rbp]
   #O5mov rcx, r11
   lea rcx, -552[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   mov DWORD PTR -204[rbp], 1
   .Lt_5FC7:
   .Lt_5FB6:
   lea r11, -200[rbp]
#O5lea r10, -288[rbp]
   #O5mov rcx, r10
   lea rcx, -288[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CBSTRC1ERNS_5CWSTRE #NO_ALL
   lea r11, -288[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -288[rbp]
   #O5mov rcx, r11
   lea rcx, -288[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
   mov rcx, 16[rbp]
   call _ZN6CLSDB28DBREWINDEv #NO_ALL
   .Lt_5FCC:
   mov rcx, 16[rbp]
   call _ZN6CLSDB29DBGETNEXTEv #NO_ALL
#O2mov r11, rax
   #O2mov -216[rbp], r11
   mov -216[rbp], rax #Optim 2
   cmp QWORD PTR -216[rbp], 0
   jne .Lt_5FD0
   jmp .Lt_5FCD
   .Lt_5FD0:
   mov r11, -216[rbp]
   movsxd r10, DWORD PTR 528[r11]
   movsxd r11, DWORD PTR -204[rbp]
   cmp r10, r11
   je .Lt_5FD2
   jmp .Lt_5FCE
   .Lt_5FD2:
   lea r11, -200[rbp]
   lea r10, -616[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -616[rbp]
   #O5mov rcx, r10
   lea rcx, -616[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FD3[rip+0]
   mov r9d, 4
   mov QWORD PTR 32[rsp], 0
   mov QWORD PTR -272[rbp], r11
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -616[rbp]
#O5lea r8, -640[rbp]
   #O5mov rcx, r8
   lea rcx, -640[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1304[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -640[rbp]
#O5lea r10, -576[rbp]
   #O5mov rcx, r10
   lea rcx, -576[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -272[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -272[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
#O5lea r10, -648[rbp]
   #O5mov rcx, r10
   lea rcx, -648[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CBSTRC1ERNS_5CWSTRE #NO_ALL
   lea r11, -648[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -648[rbp]
   #O5mov rcx, r11
   lea rcx, -648[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -640[rbp]
   #O5mov rcx, r11
   lea rcx, -640[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -616[rbp]
   #O5mov rcx, r11
   lea rcx, -616[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -576[rbp]
   #O5mov rcx, r11
   lea rcx, -576[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -712[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, -216[rbp]
   mov cl, 0[r11]
   call fb_BoolToStr #NO_ALL
   mov r11, rax
   lea r10, -672[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -672[rbp]
   #O5mov rcx, r10
   lea rcx, -672[rbp] #Optim 5
   lea rdx, Lt_5FD8[rip+0]
   mov r8d, 13
   mov r9, r11
   mov rax, -1
   mov QWORD PTR 32[rsp], rax
   call fb_StrConcat #NO_ALL
   mov r11, rax
#O5lea r10, -712[rbp]
   #O5mov rcx, r10
   lea rcx, -712[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -712[rbp]
#O5lea r8, -720[rbp]
   #O5mov rcx, r8
   lea rcx, -720[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -720[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -720[rbp]
   #O5mov rcx, r11
   lea rcx, -720[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -712[rbp]
   #O5mov rcx, r11
   lea rcx, -712[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   mov r11, -216[rbp]
   lea r10, 8[r11]
   lea rcx, Lt_5FDC[rip+0]
   mov edx, 14
   mov r8, r10
   call fb_WstrConcatAW #NO_ALL
#O2mov r11, rax
   #O2mov -728[rbp], r11
   mov -728[rbp], rax #Optim 2
   mov rax, QWORD PTR -728[rbp]
   mov QWORD PTR -736[rbp], rax
   lea r11, -736[rbp]
#O5lea r10, -744[rbp]
   #O5mov rcx, r10
   lea rcx, -744[rbp] #Optim 5
   mov rdx, r11
   mov r8d, -1
   call _ZN3AFX5CBSTRC1ERPwi #NO_ALL
   lea r11, -744[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -744[rbp]
   #O5mov rcx, r11
   lea rcx, -744[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
   mov rcx, -728[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -768[rbp]
   #O5mov rcx, r11
   lea rcx, -768[rbp] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, -216[rbp]
   mov eax, DWORD PTR 4[r11]
   mov DWORD PTR -1308[rbp], eax
   movsxd r11, DWORD PTR -1308[rbp]
   cmp r11, 100
   jne .Lt_5FE2
   .Lt_5FE3:
   lea r11, -1352[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1352[rbp]
   #O5mov rcx, r11
   lea rcx, -1352[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FE4[rip+0]
   mov r9d, 16
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1352[rbp]
#O5lea r8, -768[rbp]
   #O5mov rcx, r8
   lea rcx, -768[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -1352[rbp]
   #O5mov rcx, r11
   lea rcx, -1352[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_5FE0
   .Lt_5FE2:
   movsxd r11, DWORD PTR -1308[rbp]
   cmp r11, 101
   jne .Lt_5FE6
   .Lt_5FE7:
   lea r11, -1376[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1376[rbp]
   #O5mov rcx, r11
   lea rcx, -1376[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FE8[rip+0]
   mov r9d, 20
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1376[rbp]
#O5lea r8, -768[rbp]
   #O5mov rcx, r8
   lea rcx, -768[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -1376[rbp]
   #O5mov rcx, r11
   lea rcx, -1376[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_5FE0
   .Lt_5FE6:
   movsxd r11, DWORD PTR -1308[rbp]
   cmp r11, 102
   jne .Lt_5FEA
   .Lt_5FEB:
   lea r11, -1416[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1416[rbp]
   #O5mov rcx, r11
   lea rcx, -1416[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FEC[rip+0]
   mov r9d, 23
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1416[rbp]
#O5lea r8, -768[rbp]
   #O5mov rcx, r8
   lea rcx, -768[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -1416[rbp]
   #O5mov rcx, r11
   lea rcx, -1416[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_5FE0
   .Lt_5FEA:
   movsxd r11, DWORD PTR -1308[rbp]
   cmp r11, 103
   jne .Lt_5FEE
   .Lt_5FEF:
   lea r11, -1440[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1440[rbp]
   #O5mov rcx, r11
   lea rcx, -1440[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FF0[rip+0]
   mov r9d, 20
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1440[rbp]
#O5lea r8, -768[rbp]
   #O5mov rcx, r8
   lea rcx, -768[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -1440[rbp]
   #O5mov rcx, r11
   lea rcx, -1440[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_5FE0
   .Lt_5FEE:
   movsxd r11, DWORD PTR -1308[rbp]
   cmp r11, 200
   jne .Lt_5FF2
   .Lt_5FF3:
   lea r11, -1480[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1480[rbp]
   #O5mov rcx, r11
   lea rcx, -1480[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FF4[rip+0]
   mov r9d, 22
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1480[rbp]
#O5lea r8, -768[rbp]
   #O5mov rcx, r8
   lea rcx, -768[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -1480[rbp]
   #O5mov rcx, r11
   lea rcx, -1480[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   .Lt_5FF2:
   .Lt_5FE0:
   lea r11, -768[rbp]
   lea r10, -832[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -832[rbp]
   #O5mov rcx, r10
   lea rcx, -832[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5FF6[rip+0]
   mov r9d, 15
   mov QWORD PTR 32[rsp], 0
   mov QWORD PTR -272[rbp], r11
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -832[rbp]
#O5lea r8, -856[rbp]
   #O5mov rcx, r8
   lea rcx, -856[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1304[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -856[rbp]
#O5lea r10, -792[rbp]
   #O5mov rcx, r10
   lea rcx, -792[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -272[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -272[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
#O5lea r10, -864[rbp]
   #O5mov rcx, r10
   lea rcx, -864[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CBSTRC1ERNS_5CWSTRE #NO_ALL
   lea r11, -864[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -864[rbp]
   #O5mov rcx, r11
   lea rcx, -864[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -856[rbp]
   #O5mov rcx, r11
   lea rcx, -856[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -832[rbp]
   #O5mov rcx, r11
   lea rcx, -832[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -792[rbp]
   #O5mov rcx, r11
   lea rcx, -792[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -928[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, -216[rbp]
   lea r10, 536[r11]
   lea r11, -904[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -904[rbp]
   #O5mov rcx, r11
   lea rcx, -904[rbp] #Optim 5
   lea rdx, Lt_5FFB[rip+0]
   mov r8d, 17
   mov r9, r10
   mov QWORD PTR 32[rsp], 75
   call fb_StrConcat #NO_ALL
   mov r11, rax
#O5lea r10, -928[rbp]
   #O5mov rcx, r10
   lea rcx, -928[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -928[rbp]
#O5lea r8, -936[rbp]
   #O5mov rcx, r8
   lea rcx, -936[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -936[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -936[rbp]
   #O5mov rcx, r11
   lea rcx, -936[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -928[rbp]
   #O5mov rcx, r11
   lea rcx, -928[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   lea r11, -1000[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, -216[rbp]
   lea r10, 1131[r11]
   lea r11, -960[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -960[rbp]
   #O5mov rcx, r11
   lea rcx, -960[rbp] #Optim 5
   lea rdx, Lt_5FFF[rip+0]
   mov r8d, 17
   mov r9, r10
   mov QWORD PTR 32[rsp], 75
   call fb_StrConcat #NO_ALL
   mov r11, rax
#O5lea r10, -1000[rbp]
   #O5mov rcx, r10
   lea rcx, -1000[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1000[rbp]
#O5lea r8, -1008[rbp]
   #O5mov rcx, r8
   lea rcx, -1008[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1008[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -1008[rbp]
   #O5mov rcx, r11
   lea rcx, -1008[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -1000[rbp]
   #O5mov rcx, r11
   lea rcx, -1000[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   lea r11, -1056[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, -216[rbp]
   lea r10, 871[r11]
   lea r11, -1032[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1032[rbp]
   #O5mov rcx, r11
   lea rcx, -1032[rbp] #Optim 5
   lea rdx, Lt_6003[rip+0]
   mov r8d, 13
   mov r9, r10
   mov QWORD PTR 32[rsp], 260
   call fb_StrConcat #NO_ALL
   mov r11, rax
#O5lea r10, -1056[rbp]
   #O5mov rcx, r10
   lea rcx, -1056[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1056[rbp]
#O5lea r8, -1064[rbp]
   #O5mov rcx, r8
   lea rcx, -1064[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1064[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -1064[rbp]
   #O5mov rcx, r11
   lea rcx, -1064[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -1056[rbp]
   #O5mov rcx, r11
   lea rcx, -1056[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   lea r11, -1128[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, -216[rbp]
   mov ecx, 532[r11]
   call fb_IntToStr #NO_ALL
   mov r11, rax
   lea r10, -1088[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -1088[rbp]
   #O5mov rcx, r10
   lea rcx, -1088[rbp] #Optim 5
   lea rdx, Lt_6007[rip+0]
   mov r8d, 13
   mov r9, r11
   mov rax, -1
   mov QWORD PTR 32[rsp], rax
   call fb_StrConcat #NO_ALL
   mov r11, rax
#O5lea r10, -1128[rbp]
   #O5mov rcx, r10
   lea rcx, -1128[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1128[rbp]
#O5lea r8, -1136[rbp]
   #O5mov rcx, r8
   lea rcx, -1136[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1136[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -1136[rbp]
   #O5mov rcx, r11
   lea rcx, -1136[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -1128[rbp]
   #O5mov rcx, r11
   lea rcx, -1128[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   lea r11, -1184[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, -216[rbp]
#O6mov r10, QWORD PTR 1288[r11]
   #O6mov rcx, r10
   mov rcx, QWORD PTR 1288[r11] #Optim 6
   call fb_LongintToStr #NO_ALL
   mov r11, rax
   lea r10, -1160[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -1160[rbp]
   #O5mov rcx, r10
   lea rcx, -1160[rbp] #Optim 5
   lea rdx, Lt_600B[rip+0]
   mov r8d, 23
   mov r9, r11
   mov rax, -1
   mov QWORD PTR 32[rsp], rax
   call fb_StrConcat #NO_ALL
   mov r11, rax
#O5lea r10, -1184[rbp]
   #O5mov rcx, r10
   lea rcx, -1184[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1184[rbp]
#O5lea r8, -1192[rbp]
   #O5mov rcx, r8
   lea rcx, -1192[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1192[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -1192[rbp]
   #O5mov rcx, r11
   lea rcx, -1192[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -1184[rbp]
   #O5mov rcx, r11
   lea rcx, -1184[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   lea r11, -1256[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, -216[rbp]
   mov cl, 1281[r11]
   call fb_BoolToStr #NO_ALL
   mov r11, rax
   lea r10, -1216[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -1216[rbp]
   #O5mov rcx, r10
   lea rcx, -1216[rbp] #Optim 5
   lea rdx, Lt_600F[rip+0]
   mov r8d, 30
   mov r9, r11
   mov rax, -1
   mov QWORD PTR 32[rsp], rax
   call fb_StrConcat #NO_ALL
   mov r11, rax
#O5lea r10, -1256[rbp]
   #O5mov rcx, r10
   lea rcx, -1256[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1256[rbp]
#O5lea r8, -1264[rbp]
   #O5mov rcx, r8
   lea rcx, -1264[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1264[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -1264[rbp]
   #O5mov rcx, r11
   lea rcx, -1264[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -1256[rbp]
   #O5mov rcx, r11
   lea rcx, -1256[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   lea r11, -1288[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1288[rbp]
   #O5mov rcx, r11
   lea rcx, -1288[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1288[rbp]
#O5lea r8, -1296[rbp]
   #O5mov rcx, r8
   lea rcx, -1296[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1296[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -1296[rbp]
   #O5mov rcx, r11
   lea rcx, -1296[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -1288[rbp]
   #O5mov rcx, r11
   lea rcx, -1288[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -768[rbp]
   #O5mov rcx, r11
   lea rcx, -768[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   .Lt_5FCE:
   jmp .Lt_5FCC
   .Lt_5FCD:
   lea r11, -328[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -328[rbp]
   #O5mov rcx, r11
   lea rcx, -328[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -328[rbp]
#O5lea r8, -336[rbp]
   #O5mov rcx, r8
   lea rcx, -336[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -336[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -336[rbp]
   #O5mov rcx, r11
   lea rcx, -336[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -328[rbp]
   #O5mov rcx, r11
   lea rcx, -328[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   lea r11, -360[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -360[rbp]
   #O5mov rcx, r11
   lea rcx, -360[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -360[rbp]
#O5lea r8, -368[rbp]
   #O5mov rcx, r8
   lea rcx, -368[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -368[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -368[rbp]
   #O5mov rcx, r11
   lea rcx, -368[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -360[rbp]
   #O5mov rcx, r11
   lea rcx, -360[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   lea r11, -392[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -392[rbp]
#O5lea r8, -400[rbp]
   #O5mov rcx, r8
   lea rcx, -400[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -400[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -400[rbp]
   #O5mov rcx, r11
   lea rcx, -400[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   .Lt_5FB3:
   movsxd r11, DWORD PTR -276[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -276[rbp], r10d
   mov -276[rbp], r11d #Optim 2
   .Lt_5FB2:
   movsxd r11, DWORD PTR -276[rbp]
   cmp r11, 5
   jle .Lt_5FB5
   .Lt_5FB4:
   lea r11, -256[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -256[rbp]
   #O5mov rcx, r11
   lea rcx, -256[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -256[rbp]
#O5lea r8, -264[rbp]
   #O5mov rcx, r8
   lea rcx, -264[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -272[rbp], r11
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -264[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -264[rbp]
   #O5mov rcx, r11
   lea rcx, -264[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -256[rbp]
   #O5mov rcx, r11
   lea rcx, -256[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAM5CLOSEEv #NO_ALL
   mov DWORD PTR -116[rbp], 0
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMD1Ev #NO_ALL
   .Lt_5FAE:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSPARSER13PARSETODOITEME8FBSTRING
_ZN9CLSPARSER13PARSETODOITEME8FBSTRING:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_6031:
#O4lea r11, -120[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -120[rbp], 0 #Optim 4
   lea rcx, Lt_6033[rip+0]
   mov edx, 7
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov rcx, 24[rbp]
   xor edx, edx
   mov QWORD PTR -128[rbp], r11
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
   mov ecx, 1
   mov rdx, r11
#O6mov r11, QWORD PTR -128[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -128[rbp] #Optim 6
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -120[rbp]
   cmp r11, 0
   jne .Lt_6035
   lea rcx, Lt_6036[rip+0]
   mov edx, 6
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov rcx, 24[rbp]
   xor edx, edx
   mov QWORD PTR -128[rbp], r11
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
   mov ecx, 1
   mov rdx, r11
#O6mov r11, QWORD PTR -128[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -128[rbp] #Optim 6
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   .Lt_6035:
   movsxd r11, DWORD PTR -120[rbp]
   cmp r11, 0
   jne .Lt_6038
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_6032
   .Lt_6038:
   mov DWORD PTR -132[rbp], 0
   movsxd r11, DWORD PTR -120[rbp]
   mov rax, -2
   add r11, rax
#O2mov r10d, r11d
   #O2mov -136[rbp], r10d
   mov -136[rbp], r11d #Optim 2
   jmp .Lt_603A
   .Lt_603D:
   mov r11, 24[rbp]
   movsxd r10, DWORD PTR -132[rbp]
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   movzx r11, BYTE PTR 0[r8]
   cmp r11, 32
   je .Lt_603F
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_6032
   .Lt_603F:
   .Lt_603B:
   movsxd r11, DWORD PTR -132[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -132[rbp], r10d
   mov -132[rbp], r11d #Optim 2
   .Lt_603A:
   movsxd r11, DWORD PTR -132[rbp]
   movsxd r10, DWORD PTR -136[rbp]
   cmp r11, r10
   jle .Lt_603D
   .Lt_603C:
   movsxd r11, DWORD PTR -120[rbp]
   add r11, 7
   mov rcx, 24[rbp]
   mov rdx, r11
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 248[r10]
   #O5mov rcx, r8
   lea rcx, 248[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 6
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   mov BYTE PTR -113[rbp], 1
#O9jmp .Lt_6032
   .Lt_6032:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSPARSER18ISMULTILINECOMMENTE8FBSTRING
_ZN9CLSPARSER18ISMULTILINECOMMENTE8FBSTRING:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_6040:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 6
   jne .Lt_6043
   mov rcx, 24[rbp]
   mov edx, 2
   call fb_RIGHT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6044[rip+0]
   mov r9d, 3
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6046
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 0
   .Lt_6046:
   .Lt_6045:
   jmp .Lt_6042
   .Lt_6043:
   mov rcx, 24[rbp]
   mov edx, 2
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6047[rip+0]
   mov r9d, 3
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6048
   mov rcx, 24[rbp]
   mov edx, 2
   call fb_RIGHT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6044[rip+0]
   mov r9d, 3
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov -128[rbp], r10
   jmp .Lt_604C
   .Lt_6048:
   mov QWORD PTR -128[rbp], 0
   .Lt_604C:
   cmp QWORD PTR -128[rbp], 0
   je .Lt_604B
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 6
   jmp .Lt_604A
   .Lt_604B:
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_6041
   .Lt_604A:
   .Lt_6042:
   mov BYTE PTR -113[rbp], 1
#O9jmp .Lt_6041
   .Lt_6041:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSPARSER13NORMALIZELINEEv
_ZN9CLSPARSER13NORMALIZELINEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_604D:
   mov r11, 16[rbp]
   mov rcx, 40[r11]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -152[rbp], r11
   mov -152[rbp], rax #Optim 2
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   mov rdx, -152[rbp]
   lea r8, Lt_6052[rip+0]
   call AFXSTRSHRINK #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 40[r10]
   #O5mov rcx, r8
   lea rcx, 40[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -152[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 64[r10]
   #O5mov rcx, r8
   lea rcx, 64[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   jne .Lt_6054
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_604E
   .Lt_6054:
   .Lt_604E:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSPARSER11INSPECTLINEEv
_ZN9CLSPARSER11INSPECTLINEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_6055:
#O4lea r11, -120[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -120[rbp], 0 #Optim 4
#O4lea r11, -124[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -124[rbp], 0 #Optim 4
   lea r11, -168[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   movsxd r11, DWORD PTR GCONFIG[rip+924]
   cmp r11, 0
   je .Lt_6058
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 5
   jle .Lt_605A
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 5
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_605B[rip+0]
   mov r9d, 6
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_605D
   lea rcx, Lt_605E[rip+0]
   mov edx, 4
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   lea r8, 64[r10]
   mov ecx, 1
   mov rdx, r8
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -120[rbp]
   cmp r11, 0
   je .Lt_6060
   movsxd r11, DWORD PTR -120[rbp]
   mov rax, -6
   add r11, rax
   mov r10, 16[rbp]
#O5lea r8, 40[r10]
   #O5mov rcx, r8
   lea rcx, 40[r10] #Optim 5
   mov edx, 6
   mov r8, r11
   call fb_StrMid #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call fb_TRIM #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 144[r10]
   #O5mov rcx, r8
   lea rcx, 144[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r11, -224[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, 16[rbp]
   mov rcx, 40[r11]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -200[rbp], r11
   mov -200[rbp], rax #Optim 2
#O5lea r11, -192[rbp]
   #O5mov rcx, r11
   lea rcx, -192[rbp] #Optim 5
   mov rdx, -200[rbp]
   lea r8, Lt_6063[rip+0]
   mov r9d, 1
   call AFXSTRREMAINI #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov QWORD PTR -232[rbp], r11
   call fb_TRIM #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 168[r10]
   #O5mov rcx, r8
   lea rcx, 168[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov QWORD PTR -240[rbp], r11
   call fb_StrDelete #NO_ALL
   mov rcx, -200[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -192[rbp]
   #O5mov rcx, r11
   lea rcx, -192[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 168[r11]
   #O5mov rcx, r10
   lea rcx, 168[r11] #Optim 5
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov edx, 8
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6065[rip+0]
   mov r9d, 9
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6067
   mov r11, 16[rbp]
   lea r10, 144[r11]
   mov r11, 16[rbp]
#O5lea r8, 168[r11]
   #O5mov rcx, r8
   lea rcx, 168[r11] #Optim 5
   mov rdx, -1
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_6067:
   .Lt_6066:
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 5
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 144[r11]
   #O5mov rcx, r10
   lea rcx, 144[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 168[r11]
   #O5mov rcx, r10
   lea rcx, 168[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov eax, DWORD PTR 32[r11]
   mov DWORD PTR 136[r10], eax
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_6056
   jmp .Lt_605F
   .Lt_6060:
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 4
   mov r11, 16[rbp]
   mov rcx, 40[r11]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -272[rbp], r11
   mov -272[rbp], rax #Optim 2
#O5lea r11, -264[rbp]
   #O5mov rcx, r11
   lea rcx, -264[rbp] #Optim 5
   mov rdx, -272[rbp]
   mov r8d, 2
   lea r9, Lt_2D3A[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 144[r10]
   #O5mov rcx, r8
   lea rcx, 144[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -272[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -264[rbp]
   #O5mov rcx, r11
   lea rcx, -264[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, 16[rbp]
   lea r10, 144[r11]
   mov r11, 16[rbp]
#O5lea r8, 168[r11]
   #O5mov rcx, r8
   lea rcx, 168[r11] #Optim 5
   mov rdx, -1
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea rcx, Lt_606A[rip+0]
   mov edx, 8
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   lea r8, 64[r10]
   mov ecx, 1
   mov rdx, r8
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -120[rbp]
   cmp r11, 0
   je .Lt_606C
   mov r11, 16[rbp]
   mov rcx, 40[r11]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -304[rbp], r11
   mov -304[rbp], rax #Optim 2
#O5lea r11, -296[rbp]
   #O5mov rcx, r11
   lea rcx, -296[rbp] #Optim 5
   mov rdx, -304[rbp]
   mov r8d, 4
   lea r9, Lt_2D3A[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -304[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -296[rbp]
   #O5mov rcx, r11
   lea rcx, -296[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_606F[rip+0]
   mov r9d, 7
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   je .Lt_6071
   lea r11, -168[rbp]
   mov r10, 16[rbp]
#O5lea r8, 320[r10]
   #O5mov rcx, r8
   lea rcx, 320[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_6071:
   .Lt_6070:
   .Lt_606C:
   .Lt_606B:
   mov r11, 16[rbp]
   mov BYTE PTR 272[r11], 1
   mov r11, 16[rbp]
   mov BYTE PTR 304[r11], 0
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov eax, DWORD PTR 32[r11]
   mov DWORD PTR 136[r10], eax
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_6056
   .Lt_605F:
   jmp .Lt_605C
   .Lt_605D:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 8
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6073[rip+0]
   mov r9d, 9
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   movsxd r11, DWORD PTR GCONFIG[rip+924]
   and r10, r11
   je .Lt_6072
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 5
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 0
   mov r11, 16[rbp]
#O5lea r10, 144[r11]
   #O5mov rcx, r10
   lea rcx, 144[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 168[r11]
   #O5mov rcx, r10
   lea rcx, 168[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_6056
   .Lt_6072:
   .Lt_605C:
   .Lt_605A:
   .Lt_6059:
   .Lt_6058:
   .Lt_6057:
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 4
   jle .Lt_6075
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 7
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6076[rip+0]
   mov r9d, 8
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6078
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 8
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 40[r10]
   #O5mov rcx, r8
   lea rcx, 40[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 40[r10]
   #O5mov rcx, r8
   lea rcx, 40[r10] #Optim 5
   xor edx, edx
   mov QWORD PTR -232[rbp], r11
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 64[r10]
   #O5mov rcx, r8
   lea rcx, 64[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_6078:
   .Lt_6077:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 4
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6079[rip+0]
   mov r9d, 5
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_607B
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 5
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   mov DWORD PTR 28[r10], 2
   jmp .Lt_607A
   .Lt_607B:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 9
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_607D[rip+0]
   mov r9d, 10
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_607C
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 9
   mov r8, -1
   call fb_StrMid #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call fb_LTRIM #NO_ALL
   mov r11, rax
#O5lea r10, -328[rbp]
   #O5mov rcx, r10
   lea rcx, -328[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrInit #NO_ALL
   mov r11, rax
#O5lea r11, -328[rbp]
   #O5mov rcx, r11
   lea rcx, -328[rbp] #Optim 5
   mov edx, 1
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_2B8A[rip+0]
   mov r9d, 2
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   je .Lt_607F
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 10
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 1
   .Lt_607F:
   .Lt_607E:
#O5lea r11, -328[rbp]
   #O5mov rcx, r11
   lea rcx, -328[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_607A
   .Lt_607C:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 16
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6081[rip+0]
   mov r9d, 17
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6080
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 17
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   mov DWORD PTR 28[r10], 1
   jmp .Lt_607A
   .Lt_6080:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 17
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6083[rip+0]
   mov r9d, 18
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6082
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 18
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   mov DWORD PTR 28[r10], 1
   jmp .Lt_607A
   .Lt_6082:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 11
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6085[rip+0]
   mov r9d, 12
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6084
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 12
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   mov DWORD PTR 28[r10], 2
   jmp .Lt_607A
   .Lt_6084:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 12
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6087[rip+0]
   mov r9d, 13
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6086
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 13
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   mov DWORD PTR 28[r10], 2
   jmp .Lt_607A
   .Lt_6086:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 9
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6089[rip+0]
   mov r9d, 10
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6088
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 9
   mov r8, -1
   call fb_StrMid #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call fb_LTRIM #NO_ALL
   mov r11, rax
#O5lea r10, -352[rbp]
   #O5mov rcx, r10
   lea rcx, -352[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrInit #NO_ALL
   mov r11, rax
#O5lea r11, -352[rbp]
   #O5mov rcx, r11
   lea rcx, -352[rbp] #Optim 5
   mov edx, 1
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_2B8A[rip+0]
   mov r9d, 2
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   je .Lt_608B
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 10
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 3
   .Lt_608B:
   .Lt_608A:
#O5lea r11, -352[rbp]
   #O5mov rcx, r11
   lea rcx, -352[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_607A
   .Lt_6088:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 17
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_608D[rip+0]
   mov r9d, 18
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_608C
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 18
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   mov DWORD PTR 28[r10], 3
   jmp .Lt_607A
   .Lt_608C:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 12
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_608F[rip+0]
   mov r9d, 13
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_608E
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 13
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   mov DWORD PTR 28[r10], 8
   jmp .Lt_607A
   .Lt_608E:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 11
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6091[rip+0]
   mov r9d, 12
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6090
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 12
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   mov DWORD PTR 28[r10], 9
   .Lt_6090:
   .Lt_607A:
   .Lt_6075:
   .Lt_6074:
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_6093
   mov r11, -168[rbp]
   movzx r10, BYTE PTR 0[r11]
   cmp r10, 61
   jne .Lt_6095
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_6056
   .Lt_6095:
   lea r11, -392[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   lea r11, -416[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   lea r11, -168[rbp]
   mov r10, 16[rbp]
#O5lea r8, 88[r10]
   #O5mov rcx, r8
   lea rcx, 88[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea rcx, Lt_6096[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -168[rbp]
   mov ecx, 1
   mov rdx, r10
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -120[rbp]
   cmp r11, 0
   je .Lt_6098
   movsxd r11, DWORD PTR -120[rbp]
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -392[rbp]
   #O5mov rcx, r10
   lea rcx, -392[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_6098:
   movsxd r11, DWORD PTR -120[rbp]
   cmp r11, 0
   je .Lt_609A
   movsxd r11, DWORD PTR -120[rbp]
   mov rax, -1
   add r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, r11
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call fb_RTRIM #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 88[r10]
   #O5mov rcx, r8
   lea rcx, 88[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_609A:
   lea rcx, Lt_29E8[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   lea r8, 88[r10]
   mov ecx, 1
   mov rdx, r8
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -420[rbp], r10d
   mov -420[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -420[rbp]
   cmp r11, 0
   je .Lt_609C
   movsxd r11, DWORD PTR -420[rbp]
   mov rax, -1
   add r11, rax
   mov r10, 16[rbp]
#O5lea r8, 88[r10]
   #O5mov rcx, r8
   lea rcx, 88[r10] #Optim 5
   mov rdx, r11
   call fb_LEFT #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 88[r10]
   #O5mov rcx, r8
   lea rcx, 88[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_609C:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 3
   jne .Lt_609E
#O4lea r11, -424[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -424[rbp], 0 #Optim 4
#O4lea r11, -428[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -428[rbp], 0 #Optim 4
   lea rcx, Lt_6096[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -392[rbp]
   mov ecx, 1
   mov rdx, r10
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -424[rbp], r10d
   mov -424[rbp], r11d #Optim 2
   lea rcx, Lt_609F[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
#O5lea r10, -392[rbp]
   #O5mov rcx, r10
   lea rcx, -392[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
   call fb_StrInstrRev #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -428[rbp], r10d
   mov -428[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -424[rbp]
   cmp r11, 0
   je .Lt_60A0
   movsxd r11, DWORD PTR -428[rbp]
   cmp r11, 0
   sete al
   movzx r11, al
   neg r11
   mov -440[rbp], r11
   jmp .Lt_60DE
   .Lt_60A0:
   mov rax, -1
   mov QWORD PTR -440[rbp], rax
   .Lt_60DE:
   cmp QWORD PTR -440[rbp], 0
   je .Lt_60A3
#O5lea r11, -416[rbp]
   #O5mov rcx, r11
   lea rcx, -416[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   jmp .Lt_60A2
   .Lt_60A3:
   movsxd r11, DWORD PTR -428[rbp]
   movsxd r10, DWORD PTR -424[rbp]
   cmp r11, r10
   jle .Lt_60A4
   movsxd r11, DWORD PTR -428[rbp]
   movsxd r10, DWORD PTR -424[rbp]
   sub r11, r10
   movsxd r10, DWORD PTR -424[rbp]
#O5lea r8, -392[rbp]
   #O5mov rcx, r8
   lea rcx, -392[rbp] #Optim 5
   mov rdx, r10
   mov r8, r11
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -416[rbp]
   #O5mov rcx, r10
   lea rcx, -416[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_60A4:
   .Lt_60A2:
   lea rcx, Lt_60A5[rip+0]
   mov edx, 3
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
#O5lea r10, -416[rbp]
   #O5mov rcx, r10
   lea rcx, -416[rbp] #Optim 5
   mov rdx, r11
   call fb_TrimAny #NO_ALL
   mov r11, rax
#O5lea r10, -416[rbp]
   #O5mov rcx, r10
   lea rcx, -416[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r11, -416[rbp]
   #O5mov rcx, r11
   lea rcx, -416[rbp] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_60A7
   mov r11, 16[rbp]
   mov QWORD PTR 312[r11], 2
   jmp .Lt_60A6
   .Lt_60A7:
   mov r11, 16[rbp]
   mov QWORD PTR 312[r11], 1
   .Lt_60A6:
   jmp .Lt_609D
   .Lt_609E:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 8
   jne .Lt_60A8
   mov r11, 16[rbp]
   mov QWORD PTR 312[r11], 3
   jmp .Lt_609D
   .Lt_60A8:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 9
   jne .Lt_60A9
   mov r11, 16[rbp]
   mov QWORD PTR 312[r11], 4
   jmp .Lt_609D
   .Lt_60A9:
   mov r11, 16[rbp]
   mov QWORD PTR 312[r11], 0
   .Lt_609D:
   movsxd r11, DWORD PTR -120[rbp]
   cmp r11, 0
   je .Lt_60AB
   lea r11, -392[rbp]
   mov r10, 16[rbp]
   lea r8, 88[r10]
   lea r10, -480[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -480[rbp]
   #O5mov rcx, r10
   lea rcx, -480[rbp] #Optim 5
   mov rdx, r8
   mov r8, -1
   mov r9, r11
   mov rax, -1
   mov QWORD PTR 32[rsp], rax
   call fb_StrConcat #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 112[r10]
   #O5mov rcx, r8
   lea rcx, 112[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_60AB:
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov eax, DWORD PTR 32[r11]
   mov DWORD PTR 136[r10], eax
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -416[rbp]
   #O5mov rcx, r11
   lea rcx, -416[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_6056
   lea r11, -416[rbp]
   mov rcx, r11
   call fb_StrDelete #NO_ALL
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   .Lt_6093:
   .Lt_6092:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 7
   jl .Lt_60AE
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 7
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_60AF[rip+0]
   mov r9d, 8
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   je .Lt_60B1
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 12
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_60B0[rip+0]
   mov r9d, 13
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov -488[rbp], r10
   jmp .Lt_60DF
   .Lt_60B1:
   mov rax, -1
   mov QWORD PTR -488[rbp], rax
   .Lt_60DF:
   cmp QWORD PTR -488[rbp], 0
   jne .Lt_60B4
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 12
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_60B3[rip+0]
   mov r9d, 13
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov -496[rbp], r10
   jmp .Lt_60E0
   .Lt_60B4:
   mov rax, -1
   mov QWORD PTR -496[rbp], rax
   .Lt_60E0:
   cmp QWORD PTR -496[rbp], 0
   jne .Lt_60B7
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 15
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_60B6[rip+0]
   mov r9d, 16
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov -504[rbp], r10
   jmp .Lt_60E1
   .Lt_60B7:
   mov rax, -1
   mov QWORD PTR -504[rbp], rax
   .Lt_60E1:
   cmp QWORD PTR -504[rbp], 0
   jne .Lt_60BA
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 14
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_60B9[rip+0]
   mov r9d, 15
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov -512[rbp], r10
   jmp .Lt_60E2
   .Lt_60BA:
   mov rax, -1
   mov QWORD PTR -512[rbp], rax
   .Lt_60E2:
   cmp QWORD PTR -512[rbp], 0
   je .Lt_60BD
   mov r11, 16[rbp]
   cmp BYTE PTR 344[r11], 0
   jne .Lt_60BF
   mov r11, 16[rbp]
   mov eax, DWORD PTR 28[r11]
   mov DWORD PTR -516[rbp], eax
   movsxd r11, DWORD PTR -516[rbp]
   cmp r11, 1
   jne .Lt_60C2
   .Lt_60C3:
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 2
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   jmp .Lt_60C0
   .Lt_60C2:
   movsxd r11, DWORD PTR -516[rbp]
   cmp r11, 2
   jne .Lt_60C4
   .Lt_60C5:
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 3
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   jmp .Lt_60C0
   .Lt_60C4:
   movsxd r11, DWORD PTR -516[rbp]
   cmp r11, 3
   jne .Lt_60C6
   .Lt_60C7:
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 4
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   jmp .Lt_60C0
   .Lt_60C6:
   movsxd r11, DWORD PTR -516[rbp]
   cmp r11, 8
   jne .Lt_60C8
   .Lt_60C9:
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 4
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   jmp .Lt_60C0
   .Lt_60C8:
   movsxd r11, DWORD PTR -516[rbp]
   cmp r11, 9
   jne .Lt_60CA
   .Lt_60CB:
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 4
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   .Lt_60CA:
   .Lt_60C0:
   .Lt_60BF:
   .Lt_60BE:
   movsxd r11, DWORD PTR GCONFIG[rip+924]
   cmp r11, 0
   je .Lt_60CD
   lea r11, -576[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, 16[rbp]
   mov rcx, 112[r11]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -552[rbp], r11
   mov -552[rbp], rax #Optim 2
#O5lea r11, -544[rbp]
   #O5mov rcx, r11
   lea rcx, -544[rbp] #Optim 5
   mov rdx, -552[rbp]
   lea r8, Lt_60D0[rip+0]
   lea r9, Lt_60D1[rip+0]
   call _Z13AFXSTREXTRACTRKwS0_S0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -576[rbp]
   #O5mov rcx, r10
   lea rcx, -576[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -576[rbp]
   #O5mov rcx, r10
   lea rcx, -576[rbp] #Optim 5
   mov QWORD PTR -232[rbp], r11
   call fb_TRIM #NO_ALL
   mov r11, rax
#O5lea r10, -168[rbp]
   #O5mov rcx, r10
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r10, -576[rbp]
   #O5mov rcx, r10
   lea rcx, -576[rbp] #Optim 5
   mov QWORD PTR -240[rbp], r11
   call fb_StrDelete #NO_ALL
   mov rcx, -552[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -544[rbp]
   #O5mov rcx, r11
   lea rcx, -544[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_60D4
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 7
   mov rcx, -168[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -584[rbp], r11
   mov -584[rbp], rax #Optim 2
   mov rcx, -584[rbp]
   lea rdx, Lt_2D3E[rip+0]
   call AFXSTRPARSECOUNT #NO_ALL
   mov r11d, eax
   mov -124[rbp], r11d
   mov rcx, -584[rbp]
   call fb_WstrDelete #NO_ALL
   mov r11, 16[rbp]
   mov eax, DWORD PTR 32[r11]
   mov DWORD PTR -588[rbp], eax
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov eax, DWORD PTR 136[r11]
   mov DWORD PTR 32[r10], eax
   mov DWORD PTR -120[rbp], 1
   mov eax, DWORD PTR -124[rbp]
   mov DWORD PTR -592[rbp], eax
   jmp .Lt_60D7
   .Lt_60DA:
   lea r11, -648[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov rcx, -168[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -624[rbp], r11
   mov -624[rbp], rax #Optim 2
#O5lea r11, -616[rbp]
   #O5mov rcx, r11
   lea rcx, -616[rbp] #Optim 5
   mov rdx, -624[rbp]
   mov r8d, -120[rbp]
   lea r9, Lt_2D3E[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -648[rbp]
   #O5mov rcx, r10
   lea rcx, -648[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -648[rbp]
   #O5mov rcx, r10
   lea rcx, -648[rbp] #Optim 5
   mov QWORD PTR -232[rbp], r11
   call fb_TRIM #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 40[r10]
   #O5mov rcx, r8
   lea rcx, 40[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r10, -648[rbp]
   #O5mov rcx, r10
   lea rcx, -648[rbp] #Optim 5
   mov QWORD PTR -240[rbp], r11
   call fb_StrDelete #NO_ALL
   mov rcx, -624[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -616[rbp]
   #O5mov rcx, r11
   lea rcx, -616[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 64[r10]
   #O5mov rcx, r8
   lea rcx, 64[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov rcx, 16[rbp]
   call _ZN9CLSPARSER24PARSEVARIABLEDEFINITIONSEv #NO_ALL
   .Lt_60D8:
   movsxd r11, DWORD PTR -120[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -120[rbp], r10d
   mov -120[rbp], r11d #Optim 2
   .Lt_60D7:
   movsxd r11, DWORD PTR -120[rbp]
   movsxd r10, DWORD PTR -592[rbp]
   cmp r11, r10
   jle .Lt_60DA
   .Lt_60D9:
   mov r11, 16[rbp]
   mov eax, DWORD PTR -588[rbp]
   mov DWORD PTR 32[r11], eax
   .Lt_60D4:
   .Lt_60D3:
   .Lt_60CD:
   .Lt_60CC:
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 0
   mov r11, 16[rbp]
#O5lea r10, 88[r11]
   #O5mov rcx, r10
   lea rcx, 88[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 112[r11]
   #O5mov rcx, r10
   lea rcx, 112[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_6056
   .Lt_60BD:
   .Lt_60BC:
   .Lt_60AE:
   .Lt_60AD:
   mov BYTE PTR -113[rbp], 0
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_6056
   lea r11, -168[rbp]
   mov rcx, r11
   call fb_StrDelete #NO_ALL
   .Lt_6056:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSPARSER18ISSTANDARDDATATYPEER8FBSTRING
_ZN9CLSPARSER18ISSTANDARDDATATYPEER8FBSTRING:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_60E3:
   lea rcx, SLIST.0[rip+0]
   mov rdx, -1
   lea r8, Lt_60E7[rip+0]
   mov r9d, 107
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov rcx, 24[rbp]
   xor edx, edx
   call fb_StrLcase2 #NO_ALL
   mov r11, rax
   lea r10, -160[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   lea rdx, Lt_29E8[rip+0]
   mov r8d, 2
   mov r9, r11
   mov rax, -1
   mov QWORD PTR 32[rsp], rax
   call fb_StrConcat #NO_ALL
   mov r11, rax
   lea r10, -200[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -200[rbp]
   #O5mov rcx, r10
   lea rcx, -200[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
   lea r9, Lt_29E8[rip+0]
   mov QWORD PTR 32[rsp], 2
   call fb_StrConcat #NO_ALL
   mov r11, rax
   mov ecx, 1
   lea rdx, SLIST.0[rip+0]
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_60EB
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_60E4
   .Lt_60EB:
   mov BYTE PTR -113[rbp], 0
#O9jmp .Lt_60E4
   .Lt_60E4:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSPARSER24PARSEVARIABLEDEFINITIONSEv
_ZN9CLSPARSER24PARSEVARIABLEDEFINITIONSEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1760
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_60EC:
   movsxd r11, DWORD PTR GCONFIG[rip+924]
   cmp r11, 0
   jne .Lt_60EF
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_60ED
   .Lt_60EF:
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 6
   jge .Lt_60F1
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_60ED
   .Lt_60F1:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 5
   jne .Lt_60F3
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_60ED
   .Lt_60F3:
   lea r11, -160[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   lea r11, -200[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   lea r11, -224[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O4lea r11, -228[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -228[rbp], 0 #Optim 4
#O4lea r11, -232[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -232[rbp], 0 #Optim 4
#O4lea r11, -236[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -236[rbp], 0 #Optim 4
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 4
   jne .Lt_60F5
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 3
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_60F6[rip+0]
   mov r9d, 4
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_60F8
   mov r11, 16[rbp]
   lea r10, 40[r11]
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   jmp .Lt_60F7
   .Lt_60F8:
   lea rcx, Lt_605E[rip+0]
   mov edx, 4
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   lea r8, 64[r10]
   mov ecx, 1
   mov rdx, r8
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_60F9
   mov r11, 16[rbp]
   lea r10, 40[r11]
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_60F9:
   .Lt_60F7:
   jmp .Lt_60F4
   .Lt_60F5:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 7
   jne .Lt_60FA
   mov r11, 16[rbp]
   lea r10, 40[r11]
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -464[rbp], r11
   mov -464[rbp], rax #Optim 2
#O5lea r11, -456[rbp]
   #O5mov rcx, r11
   lea rcx, -456[rbp] #Optim 5
   mov rdx, -464[rbp]
   lea r8, Lt_60FE[rip+0]
   call AFXSTRREMOVEI #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -464[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -456[rbp]
   #O5mov rcx, r11
   lea rcx, -456[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -496[rbp], r11
   mov -496[rbp], rax #Optim 2
#O5lea r11, -488[rbp]
   #O5mov rcx, r11
   lea rcx, -488[rbp] #Optim 5
   mov rdx, -496[rbp]
   lea r8, Lt_6102[rip+0]
   call AFXSTRREMOVEI #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -496[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -488[rbp]
   #O5mov rcx, r11
   lea rcx, -488[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -528[rbp], r11
   mov -528[rbp], rax #Optim 2
#O5lea r11, -520[rbp]
   #O5mov rcx, r11
   lea rcx, -520[rbp] #Optim 5
   mov rdx, -528[rbp]
   lea r8, Lt_6106[rip+0]
   call AFXSTRREMOVEI #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -528[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -520[rbp]
   #O5mov rcx, r11
   lea rcx, -520[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_60F4
   .Lt_60FA:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 11
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6107[rip+0]
   mov r9d, 12
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6109
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 12
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   jmp .Lt_6108
   .Lt_6109:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 10
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_610B[rip+0]
   mov r9d, 11
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_610A
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 11
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   jmp .Lt_6108
   .Lt_610A:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 4
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_610D[rip+0]
   mov r9d, 5
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_610C
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 5
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   jmp .Lt_6108
   .Lt_610C:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 13
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_610F[rip+0]
   mov r9d, 14
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_610E
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 14
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   jmp .Lt_6108
   .Lt_610E:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 15
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6111[rip+0]
   mov r9d, 16
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6110
   mov BYTE PTR -113[rbp], 0
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_60ED
   jmp .Lt_6108
   .Lt_6110:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 6
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6113[rip+0]
   mov r9d, 7
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6112
   lea rcx, Lt_605E[rip+0]
   mov edx, 4
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
   lea r8, 64[r10]
   mov ecx, 1
   mov rdx, r8
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
   cmp r11, 0
   jne .Lt_6115
   mov BYTE PTR -113[rbp], 0
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_60ED
   .Lt_6115:
   mov r11, 16[rbp]
#O5lea r10, 40[r11]
   #O5mov rcx, r10
   lea rcx, 40[r11] #Optim 5
   mov edx, 7
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_6112:
   .Lt_6108:
   .Lt_60F4:
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   jne .Lt_6117
   mov BYTE PTR -113[rbp], 0
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_60ED
   .Lt_6117:
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -272[rbp], r11
   mov -272[rbp], rax #Optim 2
#O5lea r11, -264[rbp]
   #O5mov rcx, r11
   lea rcx, -264[rbp] #Optim 5
   mov rdx, -272[rbp]
   lea r8, Lt_611A[rip+0]
   lea r9, Lt_611A[rip+0]
   mov QWORD PTR 32[rsp], 1
   call _Z12AFXSTRREMOVERKwS0_S0_b #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -272[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -264[rbp]
   #O5mov rcx, r11
   lea rcx, -264[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -304[rbp], r11
   mov -304[rbp], rax #Optim 2
#O5lea r11, -296[rbp]
   #O5mov rcx, r11
   lea rcx, -296[rbp] #Optim 5
   mov rdx, -304[rbp]
   lea r8, Lt_60D0[rip+0]
   lea r9, Lt_60D1[rip+0]
   lea rax, Lt_2531[rip+0]
   mov QWORD PTR 32[rsp], rax
   mov QWORD PTR 40[rsp], 1
   mov QWORD PTR 48[rsp], 1
   call AFXSTRREMOVEWITHMARK #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -304[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -296[rbp]
   #O5mov rcx, r11
   lea rcx, -296[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -336[rbp], r11
   mov -336[rbp], rax #Optim 2
#O5lea r11, -328[rbp]
   #O5mov rcx, r11
   lea rcx, -328[rbp] #Optim 5
   mov rdx, -336[rbp]
   lea r8, Lt_459C[rip+0]
   lea r9, Lt_6120[rip+0]
   lea rax, Lt_2531[rip+0]
   mov QWORD PTR 32[rsp], rax
   mov QWORD PTR 40[rsp], 1
   mov QWORD PTR 48[rsp], 1
   call AFXSTRREMOVEWITHMARK #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -336[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -328[rbp]
   #O5mov rcx, r11
   lea rcx, -328[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -368[rbp], r11
   mov -368[rbp], rax #Optim 2
#O5lea r11, -360[rbp]
   #O5mov rcx, r11
   lea rcx, -360[rbp] #Optim 5
   mov rdx, -368[rbp]
   lea r8, Lt_6124[rip+0]
   lea r9, Lt_6126[rip+0]
   lea rax, Lt_2531[rip+0]
   mov QWORD PTR 32[rsp], rax
   mov QWORD PTR 40[rsp], 1
   mov QWORD PTR 48[rsp], 1
   call AFXSTRREMOVEWITHMARK #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -368[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -360[rbp]
   #O5mov rcx, r11
   lea rcx, -360[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea rcx, Lt_2B8A[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -160[rbp]
   mov ecx, 1
   mov rdx, r10
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -228[rbp], r10d
   mov -228[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -228[rbp]
   cmp r11, 0
   je .Lt_6128
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -560[rbp], r11
   mov -560[rbp], rax #Optim 2
#O5lea r11, -552[rbp]
   #O5mov rcx, r11
   lea rcx, -552[rbp] #Optim 5
   mov rdx, -560[rbp]
   lea r8, Lt_2B8C[rip+0]
   lea r9, Lt_2D3E[rip+0]
   lea rax, Lt_2D3E[rip+0]
   mov QWORD PTR 32[rsp], rax
   mov QWORD PTR 40[rsp], 1
   mov QWORD PTR 48[rsp], 0
   call AFXSTRREMOVEWITHMARK #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -560[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -552[rbp]
   #O5mov rcx, r11
   lea rcx, -552[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea rcx, Lt_2B8A[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -160[rbp]
   mov ecx, 1
   mov rdx, r10
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -228[rbp], r10d
   mov -228[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -228[rbp]
   cmp r11, 0
   je .Lt_612C
   movsxd r11, DWORD PTR -228[rbp]
   mov rax, -1
   add r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, r11
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call fb_RTRIM #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_612C:
   .Lt_612B:
   .Lt_6128:
   .Lt_6127:
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -400[rbp], r11
   mov -400[rbp], rax #Optim 2
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   mov rdx, -400[rbp]
   lea r8, Lt_6130[rip+0]
   call AFXSTRREMOVEI #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -400[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -432[rbp], r11
   mov -432[rbp], rax #Optim 2
#O5lea r11, -424[rbp]
   #O5mov rcx, r11
   lea rcx, -424[rbp] #Optim 5
   mov rdx, -432[rbp]
   lea r8, Lt_6134[rip+0]
   call AFXSTRREMOVEI #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -432[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -424[rbp]
   #O5mov rcx, r11
   lea rcx, -424[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   jne .Lt_6136
   mov BYTE PTR -113[rbp], 0
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_60ED
   .Lt_6136:
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   xor edx, edx
   call fb_StrUcase2 #NO_ALL
   mov r11, rax
#O5lea r10, -200[rbp]
   #O5mov rcx, r10
   lea rcx, -200[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r11, 16[rbp]
   mov BYTE PTR 240[r11], 0
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   mov edx, 3
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_60F6[rip+0]
   mov r9d, 4
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6138
   lea rcx, Lt_29E8[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -160[rbp]
   mov ecx, 4
   mov rdx, r10
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -228[rbp], r10d
   mov -228[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -228[rbp]
   mov rax, -4
   add r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov edx, 4
   mov r8, r11
   call fb_StrMid #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 216[r10]
   #O5mov rcx, r8
   lea rcx, 216[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   movsxd r11, DWORD PTR -228[rbp]
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea rcx, Lt_2AFA[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -224[rbp]
   mov ecx, 1
   mov rdx, r10
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -228[rbp], r10d
   mov -228[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -228[rbp]
   cmp r11, 0
   je .Lt_613A
   movsxd r11, DWORD PTR -228[rbp]
   lea rcx, Lt_29E8[rip+0]
   mov edx, 1
   mov QWORD PTR -576[rbp], r11
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -576[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -576[rbp] #Optim 6
   call fb_StrInstrRev #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -228[rbp], r10d
   mov -228[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -228[rbp]
   cmp r11, 0
   je .Lt_613C
   movsxd r11, DWORD PTR -228[rbp]
   inc r11
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_613C:
   jmp .Lt_6139
   .Lt_613A:
   lea rcx, Lt_29E8[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
   call fb_StrInstrRev #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -228[rbp], r10d
   mov -228[rbp], r11d #Optim 2
   movsxd r11, DWORD PTR -228[rbp]
   cmp r11, 0
   je .Lt_613E
   movsxd r11, DWORD PTR -228[rbp]
   inc r11
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov rdx, r11
   mov r8, -1
   call fb_StrMid #NO_ALL
   mov r11, rax
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   .Lt_613E:
   .Lt_6139:
   mov rcx, -224[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -568[rbp], r11
   mov -568[rbp], rax #Optim 2
   mov rcx, -568[rbp]
   lea rdx, Lt_2D3E[rip+0]
   call AFXSTRPARSECOUNT #NO_ALL
   mov r11d, eax
   mov -236[rbp], r11d
   mov rcx, -568[rbp]
   call fb_WstrDelete #NO_ALL
   mov DWORD PTR -580[rbp], 1
   mov eax, DWORD PTR -236[rbp]
   mov DWORD PTR -584[rbp], eax
   jmp .Lt_6141
   .Lt_6144:
   lea rcx, Lt_6147[rip+0]
   mov edx, 2
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -640[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
   mov rcx, -224[rbp]
   mov QWORD PTR -576[rbp], r11
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -616[rbp], r11
   mov -616[rbp], rax #Optim 2
#O5lea r11, -608[rbp]
   #O5mov rcx, r11
   lea rcx, -608[rbp] #Optim 5
   mov rdx, -616[rbp]
   mov r8d, -580[rbp]
   lea r9, Lt_2D3E[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -640[rbp]
   #O5mov rcx, r10
   lea rcx, -640[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -640[rbp]
   #O5mov rcx, r10
   lea rcx, -640[rbp] #Optim 5
#O6mov r10, QWORD PTR -576[rbp]
   #O6mov rdx, r10
   mov rdx, QWORD PTR -576[rbp] #Optim 6
   mov QWORD PTR -576[rbp], r11
   call fb_TrimAny #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 192[r10]
   #O5mov rcx, r8
   lea rcx, 192[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r10, -640[rbp]
   #O5mov rcx, r10
   lea rcx, -640[rbp] #Optim 5
   mov QWORD PTR -648[rbp], r11
   call fb_StrDelete #NO_ALL
   mov rcx, -616[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -608[rbp]
   #O5mov rcx, r11
   lea rcx, -608[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 4
   jne .Lt_614A
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 1
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   jmp .Lt_6149
   .Lt_614A:
   mov r11, 16[rbp]
   lea r10, 216[r11]
   mov rcx, 16[rbp]
   mov rdx, r10
   call _ZN9CLSPARSER18ISSTANDARDDATATYPEER8FBSTRING #NO_ALL
   mov r11b, al
   cmp r11b, 0
   jne .Lt_614C
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 1
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_60ED
   .Lt_614C:
   .Lt_614B:
   .Lt_6149:
   .Lt_6142:
   movsxd r11, DWORD PTR -580[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -580[rbp], r10d
   mov -580[rbp], r11d #Optim 2
   .Lt_6141:
   movsxd r11, DWORD PTR -580[rbp]
   movsxd r10, DWORD PTR -584[rbp]
   cmp r11, r10
   jle .Lt_6144
   .Lt_6143:
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_60ED
   jmp .Lt_6137
   .Lt_6138:
   lea rcx, Lt_2AFA[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -160[rbp]
   mov ecx, 1
   mov rdx, r10
   mov r8, r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_614D
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -656[rbp], r11
   mov -656[rbp], rax #Optim 2
   mov rcx, -656[rbp]
   lea rdx, Lt_2D3E[rip+0]
   call AFXSTRPARSECOUNT #NO_ALL
   mov r11d, eax
   mov -236[rbp], r11d
   mov rcx, -656[rbp]
   call fb_WstrDelete #NO_ALL
   mov DWORD PTR -660[rbp], 1
   mov eax, DWORD PTR -236[rbp]
   mov DWORD PTR -664[rbp], eax
   jmp .Lt_6150
   .Lt_6153:
   lea rcx, Lt_6147[rip+0]
   mov edx, 2
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -736[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
   mov rcx, -160[rbp]
   mov QWORD PTR -576[rbp], r11
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -696[rbp], r11
   mov -696[rbp], rax #Optim 2
#O5lea r11, -688[rbp]
   #O5mov rcx, r11
   lea rcx, -688[rbp] #Optim 5
   mov rdx, -696[rbp]
   mov r8d, -660[rbp]
   lea r9, Lt_2D3E[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -736[rbp]
   #O5mov rcx, r10
   lea rcx, -736[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -736[rbp]
   #O5mov rcx, r10
   lea rcx, -736[rbp] #Optim 5
#O6mov r10, QWORD PTR -576[rbp]
   #O6mov rdx, r10
   mov rdx, QWORD PTR -576[rbp] #Optim 6
   mov QWORD PTR -576[rbp], r11
   call fb_TrimAny #NO_ALL
   mov r11, rax
#O5lea r10, -224[rbp]
   #O5mov rcx, r10
   lea rcx, -224[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r10, -736[rbp]
   #O5mov rcx, r10
   lea rcx, -736[rbp] #Optim 5
   mov QWORD PTR -648[rbp], r11
   call fb_StrDelete #NO_ALL
   mov rcx, -696[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -688[rbp]
   #O5mov rcx, r11
   lea rcx, -688[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov rcx, -224[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -768[rbp], r11
   mov -768[rbp], rax #Optim 2
#O5lea r11, -760[rbp]
   #O5mov rcx, r11
   lea rcx, -760[rbp] #Optim 5
   mov rdx, -768[rbp]
   mov r8d, 1
   lea r9, Lt_2D3A[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 192[r10]
   #O5mov rcx, r8
   lea rcx, 192[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -768[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -760[rbp]
   #O5mov rcx, r11
   lea rcx, -760[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea rcx, Lt_6147[rip+0]
   mov edx, 2
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -840[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
   mov rcx, -224[rbp]
   mov QWORD PTR -576[rbp], r11
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -800[rbp], r11
   mov -800[rbp], rax #Optim 2
#O5lea r11, -792[rbp]
   #O5mov rcx, r11
   lea rcx, -792[rbp] #Optim 5
   mov rdx, -800[rbp]
   mov r8d, 3
   lea r9, Lt_2D3A[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -840[rbp]
   #O5mov rcx, r10
   lea rcx, -840[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -840[rbp]
   #O5mov rcx, r10
   lea rcx, -840[rbp] #Optim 5
#O6mov r10, QWORD PTR -576[rbp]
   #O6mov rdx, r10
   mov rdx, QWORD PTR -576[rbp] #Optim 6
   mov QWORD PTR -576[rbp], r11
   call fb_TrimAny #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 216[r10]
   #O5mov rcx, r8
   lea rcx, 216[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r10, -840[rbp]
   #O5mov rcx, r10
   lea rcx, -840[rbp] #Optim 5
   mov QWORD PTR -648[rbp], r11
   call fb_StrDelete #NO_ALL
   mov rcx, -800[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -792[rbp]
   #O5mov rcx, r11
   lea rcx, -792[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, 16[rbp]
   lea r10, 216[r11]
   mov rcx, 16[rbp]
   mov rdx, r10
   call _ZN9CLSPARSER18ISSTANDARDDATATYPEER8FBSTRING #NO_ALL
   mov r11b, al
   cmp r11b, 0
   jne .Lt_615D
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 1
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_60ED
   .Lt_615D:
   .Lt_615C:
   .Lt_6151:
   movsxd r11, DWORD PTR -660[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -660[rbp], r10d
   mov -660[rbp], r11d #Optim 2
   .Lt_6150:
   movsxd r11, DWORD PTR -660[rbp]
   movsxd r10, DWORD PTR -664[rbp]
   cmp r11, r10
   jle .Lt_6153
   .Lt_6152:
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_60ED
   jmp .Lt_6137
   .Lt_614D:
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -872[rbp], r11
   mov -872[rbp], rax #Optim 2
#O5lea r11, -864[rbp]
   #O5mov rcx, r11
   lea rcx, -864[rbp] #Optim 5
   mov rdx, -872[rbp]
   mov r8d, 1
   lea r9, Lt_2D3A[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 192[r10]
   #O5mov rcx, r8
   lea rcx, 192[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -872[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -864[rbp]
   #O5mov rcx, r11
   lea rcx, -864[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea rcx, Lt_6147[rip+0]
   mov edx, 2
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -928[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
   mov rcx, -160[rbp]
   mov QWORD PTR -576[rbp], r11
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -904[rbp], r11
   mov -904[rbp], rax #Optim 2
#O5lea r11, -896[rbp]
   #O5mov rcx, r11
   lea rcx, -896[rbp] #Optim 5
   mov rdx, -904[rbp]
   mov r8d, 3
   lea r9, Lt_2D3A[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -928[rbp]
   #O5mov rcx, r10
   lea rcx, -928[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -928[rbp]
   #O5mov rcx, r10
   lea rcx, -928[rbp] #Optim 5
#O6mov r10, QWORD PTR -576[rbp]
   #O6mov rdx, r10
   mov rdx, QWORD PTR -576[rbp] #Optim 6
   mov QWORD PTR -576[rbp], r11
   call fb_TrimAny #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 216[r10]
   #O5mov rcx, r8
   lea rcx, 216[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r10, -928[rbp]
   #O5mov rcx, r10
   lea rcx, -928[rbp] #Optim 5
   mov QWORD PTR -648[rbp], r11
   call fb_StrDelete #NO_ALL
   mov rcx, -904[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -896[rbp]
   #O5mov rcx, r11
   lea rcx, -896[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 4
   jne .Lt_6164
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 1
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   jmp .Lt_6163
   .Lt_6164:
   mov r11, 16[rbp]
   lea r10, 216[r11]
   mov rcx, 16[rbp]
   mov rdx, r10
   call _ZN9CLSPARSER18ISSTANDARDDATATYPEER8FBSTRING #NO_ALL
   mov r11b, al
   cmp r11b, 0
   jne .Lt_6166
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 1
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_60ED
   .Lt_6166:
   .Lt_6165:
   .Lt_6163:
   .Lt_6137:
   mov BYTE PTR -113[rbp], 0
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   .Lt_60ED:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSPARSER9PARSETYPEEv
_ZN9CLSPARSER9PARSETYPEEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_6167:
   movsxd r11, DWORD PTR GCONFIG[rip+924]
   cmp r11, 0
   jne .Lt_616A
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_6168
   .Lt_616A:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 4
   je .Lt_616C
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_6168
   .Lt_616C:
   mov r11, 16[rbp]
   mov r10, 64[r11]
   movzx r11, BYTE PTR 0[r10]
   cmp r11, 35
   jne .Lt_616E
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_6168
   .Lt_616E:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 7
   jl .Lt_6170
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 8
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6171[rip+0]
   mov r9d, 9
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6173
   mov r11, 16[rbp]
   mov BYTE PTR 272[r11], 0
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_6168
   jmp .Lt_6172
   .Lt_6173:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 7
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6175[rip+0]
   mov r9d, 8
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6174
   mov r11, 16[rbp]
   mov BYTE PTR 272[r11], 1
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_6168
   jmp .Lt_6172
   .Lt_6174:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 10
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6177[rip+0]
   mov r9d, 11
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6176
   mov r11, 16[rbp]
   mov BYTE PTR 272[r11], 1
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_6168
   .Lt_6176:
   .Lt_6172:
   .Lt_6170:
   .Lt_616F:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 8
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6178[rip+0]
   mov r9d, 9
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_617A
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_6168
   .Lt_617A:
   mov BYTE PTR -113[rbp], 0
#O9jmp .Lt_6168
   .Lt_6168:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSPARSER9PARSEENUMEv
_ZN9CLSPARSER9PARSEENUMEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_617B:
   movsxd r11, DWORD PTR GCONFIG[rip+924]
   cmp r11, 0
   jne .Lt_617E
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_617C
   .Lt_617E:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 3
   jle .Lt_6180
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 5
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6181[rip+0]
   mov r9d, 6
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, 16[rbp]
#O5lea r8, 64[r11]
   #O5mov rcx, r8
   lea rcx, 64[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_6182[rip+0]
   mov r9d, 5
   mov QWORD PTR -184[rbp], r10
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   sete al
   movzx r10, al
   neg r10
   mov r11, QWORD PTR -184[rbp]
   or r11, r10
   je .Lt_6184
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 5
   mov r11, 16[rbp]
   mov rcx, 40[r11]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -216[rbp], r11
   mov -216[rbp], rax #Optim 2
#O5lea r11, -208[rbp]
   #O5mov rcx, r11
   lea rcx, -208[rbp] #Optim 5
   mov rdx, -216[rbp]
   mov r8d, 2
   lea r9, Lt_2D3A[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 144[r10]
   #O5mov rcx, r8
   lea rcx, 144[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -216[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -208[rbp]
   #O5mov rcx, r11
   lea rcx, -208[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, 16[rbp]
   lea r10, 144[r11]
   mov r11, 16[rbp]
#O5lea r8, 168[r11]
   #O5mov rcx, r8
   lea rcx, 168[r11] #Optim 5
   mov rdx, -1
   mov r8, r10
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   mov r11, 16[rbp]
   mov BYTE PTR 304[r11], 1
   mov r11, 16[rbp]
   mov BYTE PTR 272[r11], 1
   mov r11, 16[rbp]
   mov r10, 16[rbp]
   mov eax, DWORD PTR 32[r11]
   mov DWORD PTR 136[r10], eax
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_617C
   jmp .Lt_6183
   .Lt_6184:
   mov r11, 16[rbp]
#O5lea r10, 64[r11]
   #O5mov rcx, r10
   lea rcx, 64[r11] #Optim 5
   mov edx, 8
   call fb_LEFT #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   mov rdx, -1
   lea r8, Lt_6188[rip+0]
   mov r9d, 9
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6187
   mov r11, 16[rbp]
#O5lea r10, 144[r11]
   #O5mov rcx, r10
   lea rcx, 144[r11] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_618A
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 5
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   .Lt_618A:
   .Lt_6189:
   mov r11, 16[rbp]
   mov DWORD PTR 28[r11], 0
   mov r11, 16[rbp]
#O5lea r10, 144[r11]
   #O5mov rcx, r10
   lea rcx, 144[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 168[r11]
   #O5mov rcx, r10
   lea rcx, 168[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov BYTE PTR -113[rbp], 1
   jmp .Lt_617C
   .Lt_6187:
   .Lt_6183:
   .Lt_6180:
   .Lt_617F:
   mov r11, 16[rbp]
   movsxd r10, DWORD PTR 28[r11]
   cmp r10, 5
   je .Lt_618C
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_617C
   .Lt_618C:
   mov r11, 16[rbp]
#O5lea r10, 144[r11]
   #O5mov rcx, r10
   lea rcx, 144[r11] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   jne .Lt_618E
   mov BYTE PTR -113[rbp], 0
   jmp .Lt_617C
   .Lt_618E:
   lea r11, -160[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, 16[rbp]
   mov rcx, 40[r11]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -176[rbp], r11
   mov -176[rbp], rax #Optim 2
   mov rcx, -176[rbp]
   lea rdx, Lt_2D3E[rip+0]
   call AFXSTRPARSECOUNT #NO_ALL
   mov r11d, eax
   mov -164[rbp], r11d
   mov rcx, -176[rbp]
   call fb_WstrDelete #NO_ALL
   mov DWORD PTR -220[rbp], 1
   mov eax, DWORD PTR -164[rbp]
   mov DWORD PTR -224[rbp], eax
   jmp .Lt_6191
   .Lt_6194:
   lea r11, -296[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, 16[rbp]
   mov rcx, 40[r11]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -256[rbp], r11
   mov -256[rbp], rax #Optim 2
#O5lea r11, -248[rbp]
   #O5mov rcx, r11
   lea rcx, -248[rbp] #Optim 5
   mov rdx, -256[rbp]
   mov r8d, -220[rbp]
   lea r9, Lt_2D3E[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -296[rbp]
   #O5mov rcx, r10
   lea rcx, -296[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -296[rbp]
   #O5mov rcx, r10
   lea rcx, -296[rbp] #Optim 5
   mov QWORD PTR -184[rbp], r11
   call fb_TRIM #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r10, -296[rbp]
   #O5mov rcx, r10
   lea rcx, -296[rbp] #Optim 5
   mov QWORD PTR -304[rbp], r11
   call fb_StrDelete #NO_ALL
   mov rcx, -256[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -248[rbp]
   #O5mov rcx, r11
   lea rcx, -248[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   mov rdx, -1
   call fb_StrLen #NO_ALL
   mov r11, rax
   cmp r11, 0
   je .Lt_6199
   lea r11, -360[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov rcx, -160[rbp]
   call fb_StrToWstr #NO_ALL
#O2mov r11, rax
   #O2mov -336[rbp], r11
   mov -336[rbp], rax #Optim 2
#O5lea r11, -328[rbp]
   #O5mov rcx, r11
   lea rcx, -328[rbp] #Optim 5
   mov rdx, -336[rbp]
   mov r8d, 1
   lea r9, Lt_2B8C[rip+0]
   call _Z11AFXSTRPARSERKwiS0_ #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -360[rbp]
   #O5mov rcx, r10
   lea rcx, -360[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -360[rbp]
   #O5mov rcx, r10
   lea rcx, -360[rbp] #Optim 5
   mov QWORD PTR -184[rbp], r11
   call fb_TRIM #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 192[r10]
   #O5mov rcx, r8
   lea rcx, 192[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
#O5lea r10, -360[rbp]
   #O5mov rcx, r10
   lea rcx, -360[rbp] #Optim 5
   mov QWORD PTR -304[rbp], r11
   call fb_StrDelete #NO_ALL
   mov rcx, -336[rbp]
   call fb_WstrDelete #NO_ALL
#O5lea r11, -328[rbp]
   #O5mov rcx, r11
   lea rcx, -328[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   mov r11, 16[rbp]
#O5lea r10, 216[r11]
   #O5mov rcx, r10
   lea rcx, 216[r11] #Optim 5
   mov rdx, -1
   lea r8, Lt_619D[rip+0]
   mov r9d, 5
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   lea rcx, GDB2[rip+0]
   mov rdx, 16[rbp]
   mov r8d, 1
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   .Lt_6199:
   .Lt_6198:
   .Lt_6192:
   movsxd r11, DWORD PTR -220[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -220[rbp], r10d
   mov -220[rbp], r11d #Optim 2
   .Lt_6191:
   movsxd r11, DWORD PTR -220[rbp]
   movsxd r10, DWORD PTR -224[rbp]
   cmp r11, r10
   jle .Lt_6194
   .Lt_6193:
   mov BYTE PTR -113[rbp], 0
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   jmp .Lt_617C
   lea r11, -160[rbp]
   mov rcx, r11
   call fb_StrDelete #NO_ALL
   .Lt_617C:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSCOLORS8SETCOLORERwij
_ZN9CLSCOLORS8SETCOLORERwij:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   mov QWORD PTR 24[rbp], rdx
   mov DWORD PTR 32[rbp], r8d
   mov DWORD PTR 40[rbp], r9d
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_61A7:
   lea r11, 24[rbp]
   mov r10, 16[rbp]
#O5lea r8, 0[r10]
   #O5mov rcx, r8
   lea rcx, 0[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERPw #NO_ALL
   mov r11, 16[rbp]
   mov eax, DWORD PTR 32[rbp]
   mov DWORD PTR 24[r11], eax
   mov r11, 16[rbp]
   mov eax, DWORD PTR 40[rbp]
   mov DWORD PTR 28[r11], eax
   mov DWORD PTR -116[rbp], 0
   .Lt_61A8:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSCONFIGC1Ev
_ZN9CLSCONFIGC1Ev:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
   .Lt_61AA:
   mov r11, 16[rbp]
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 24
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 48
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 72
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 96
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 120
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 144
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 168
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 192
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 216
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 240
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 264
#O4lea r10, 0[r11]
   #O4mov QWORD PTR [r10], 0
   mov QWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 272
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 296
   lea r10, 0[r11]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 320
#O4lea r10, 0[r11]
   #O4mov DWORD PTR [r10], 0
   mov DWORD PTR 0[r11], 0 #Optim 4
   mov r11, QWORD PTR 16[rbp]
   add r11, 328
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 336
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 344
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 352
   mov QWORD PTR [r11], 432
   mov r11, QWORD PTR 16[rbp]
   add r11, 360
   mov QWORD PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 368
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 392
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 400
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 408
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 416
   mov QWORD PTR [r11], 432
   mov r11, QWORD PTR 16[rbp]
   add r11, 424
   mov QWORD PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 432
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 456
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 464
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 472
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 480
   mov QWORD PTR [r11], 152
   mov r11, QWORD PTR 16[rbp]
   add r11, 488
   mov QWORD PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 496
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 520
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 528
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 536
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 544
   mov QWORD PTR [r11], 152
   mov r11, QWORD PTR 16[rbp]
   add r11, 552
   mov QWORD PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 560
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 584
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 592
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 600
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 608
   mov QWORD PTR [r11], 88
   mov r11, QWORD PTR 16[rbp]
   add r11, 616
   mov QWORD PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 624
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 648
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 656
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 664
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 672
   mov QWORD PTR [r11], 88
   mov r11, QWORD PTR 16[rbp]
   add r11, 680
   mov QWORD PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 688
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 712
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 720
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 728
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 736
   mov QWORD PTR [r11], 72
   mov r11, QWORD PTR 16[rbp]
   add r11, 744
   mov QWORD PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 752
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 776
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 784
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 792
   mov QWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 800
   mov QWORD PTR [r11], 72
   mov r11, QWORD PTR 16[rbp]
   add r11, 808
   mov QWORD PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 816
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 840
   lea r10, 0[r11]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 856
   lea r10, 0[r11]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
   mov r11, QWORD PTR 16[rbp]
   add r11, 880
   mov BYTE PTR [r11], 1
   mov r11, QWORD PTR 16[rbp]
   add r11, 884
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 888
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 892
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 896
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 900
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 904
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 908
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 912
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 916
   mov DWORD PTR [r11], 250
   mov r11, QWORD PTR 16[rbp]
   add r11, 920
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 924
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 928
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 932
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 936
   mov DWORD PTR [r11], -1
   lea r11, -1224[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1224[rbp]
   #O5mov rcx, r11
   lea rcx, -1224[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5E9A[rip+0]
   mov r9d, 3
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1224[rbp]
   mov r8, QWORD PTR 16[rbp]
   add r8, 944
#O5lea r9, 0[r8]
   #O5mov rcx, r9
   lea rcx, 0[r8] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 968
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 972
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 976
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 980
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 984
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 988
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 992
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 996
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 1000
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1004
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 1008
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 1012
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 1016
   mov DWORD PTR [r11], -1
   mov r11, QWORD PTR 16[rbp]
   add r11, 1020
   mov DWORD PTR [r11], 0
   lea r11, -1248[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1248[rbp]
   #O5mov rcx, r11
   lea rcx, -1248[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5E9C[rip+0]
   mov r9d, 2
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1248[rbp]
   mov r8, QWORD PTR 16[rbp]
   add r8, 1024
#O5lea r9, 0[r8]
   #O5mov rcx, r9
   lea rcx, 0[r8] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1432[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1288[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1288[rbp]
   #O5mov rcx, r11
   lea rcx, -1288[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5E9E[rip+0]
   mov r9d, 13
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1288[rbp]
   mov r8, QWORD PTR 16[rbp]
   add r8, 1048
#O5lea r9, 0[r8]
   #O5mov rcx, r9
   lea rcx, 0[r8] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1440[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1312[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1312[rbp]
   #O5mov rcx, r11
   lea rcx, -1312[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5EA0[rip+0]
   mov r9d, 12
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1312[rbp]
   mov r8, QWORD PTR 16[rbp]
   add r8, 1072
#O5lea r9, 0[r8]
   #O5mov rcx, r9
   lea rcx, 0[r8] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1448[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1352[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1352[rbp]
   #O5mov rcx, r11
   lea rcx, -1352[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5EA2[rip+0]
   mov r9d, 8
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1352[rbp]
   mov r8, QWORD PTR 16[rbp]
   add r8, 1096
#O5lea r9, 0[r8]
   #O5mov rcx, r9
   lea rcx, 0[r8] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1456[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1376[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1376[rbp]
   #O5mov rcx, r11
   lea rcx, -1376[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_5EA4[rip+0]
   mov r9d, 3
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1376[rbp]
   mov r8, QWORD PTR 16[rbp]
   add r8, 1120
#O5lea r9, 0[r8]
   #O5mov rcx, r9
   lea rcx, 0[r8] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1464[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 1144
   mov DWORD PTR [r11], 2
   mov r11, QWORD PTR 16[rbp]
   add r11, 1148
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1152
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1156
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1160
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1164
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1168
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1172
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1176
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1180
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1184
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 1208
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 1232
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 1256
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 1280
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 1304
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 1328
#O5lea r10, 0[r11]
   #O5mov rcx, r10
   lea rcx, 0[r11] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   mov r11, QWORD PTR 16[rbp]
   add r11, 1352
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1356
   mov DWORD PTR [r11], 0
   mov r11, QWORD PTR 16[rbp]
   add r11, 1360
   lea r10, 0[r11]
   mov -1392[rbp], r10
   mov QWORD PTR -1384[rbp], 0
   .Lt_61EA:
   mov rcx, -1392[rbp]
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   add QWORD PTR -1392[rbp], 24
   inc QWORD PTR -1384[rbp]
   mov r11, QWORD PTR -1384[rbp]
   cmp r11, 10
   sete al
   movzx r11, al
   neg r11
   mov -1400[rbp], r11
#O5lea r11, -1376[rbp]
   #O5mov rcx, r11
   lea rcx, -1376[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -1352[rbp]
   #O5mov rcx, r11
   lea rcx, -1352[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -1312[rbp]
   #O5mov rcx, r11
   lea rcx, -1312[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -1288[rbp]
   #O5mov rcx, r11
   lea rcx, -1288[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -1248[rbp]
   #O5mov rcx, r11
   lea rcx, -1248[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -1224[rbp]
   #O5mov rcx, r11
   lea rcx, -1224[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   cmp QWORD PTR -1400[rbp], 0
   je .Lt_61EA
   mov r11, QWORD PTR 16[rbp]
   add r11, 1600
   lea r10, 0[r11]
   mov -1416[rbp], r10
   mov QWORD PTR -1408[rbp], 0
   .Lt_61EE:
   mov rcx, -1416[rbp]
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
   add QWORD PTR -1416[rbp], 24
   inc QWORD PTR -1408[rbp]
   cmp QWORD PTR -1408[rbp], 10
   jne .Lt_61EE
   mov r11, QWORD PTR 16[rbp]
   add r11, 1840
#O4lea r10, 0[r11]
   #O4mov BYTE PTR [r10], 0
   mov BYTE PTR 0[r11], 0 #Optim 4
   lea r11, -200[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61AD[rip+0]
   mov r9d, 20
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -200[rbp]
#O5lea r8, -224[rbp]
   #O5mov rcx, r8
   lea rcx, -224[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1472[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -224[rbp]
#O5lea r10, -136[rbp]
   #O5mov rcx, r10
   lea rcx, -136[rbp] #Optim 5
   mov QWORD PTR -1480[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -160[rbp]
   #O5mov rcx, r10
   lea rcx, -160[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1480[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1480[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 0[r10]
   #O5mov rcx, r8
   lea rcx, 0[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -224[rbp]
   #O5mov rcx, r11
   lea rcx, -224[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -200[rbp]
   #O5mov rcx, r11
   lea rcx, -200[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -160[rbp]
   #O5mov rcx, r11
   lea rcx, -160[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -136[rbp]
   #O5mov rcx, r11
   lea rcx, -136[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -296[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -296[rbp]
   #O5mov rcx, r11
   lea rcx, -296[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61B2[rip+0]
   mov r9d, 27
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -296[rbp]
#O5lea r8, -320[rbp]
   #O5mov rcx, r8
   lea rcx, -320[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -320[rbp]
#O5lea r10, -248[rbp]
   #O5mov rcx, r10
   lea rcx, -248[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -272[rbp]
   #O5mov rcx, r10
   lea rcx, -272[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 24[r10]
   #O5mov rcx, r8
   lea rcx, 24[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -320[rbp]
   #O5mov rcx, r11
   lea rcx, -320[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -296[rbp]
   #O5mov rcx, r11
   lea rcx, -296[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -272[rbp]
   #O5mov rcx, r11
   lea rcx, -272[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -248[rbp]
   #O5mov rcx, r11
   lea rcx, -248[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -392[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61B7[rip+0]
   mov r9d, 35
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -392[rbp]
#O5lea r8, -416[rbp]
   #O5mov rcx, r8
   lea rcx, -416[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -416[rbp]
#O5lea r10, -344[rbp]
   #O5mov rcx, r10
   lea rcx, -344[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -368[rbp]
   #O5mov rcx, r10
   lea rcx, -368[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 48[r10]
   #O5mov rcx, r8
   lea rcx, 48[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -416[rbp]
   #O5mov rcx, r11
   lea rcx, -416[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -368[rbp]
   #O5mov rcx, r11
   lea rcx, -368[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -344[rbp]
   #O5mov rcx, r11
   lea rcx, -344[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -488[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -488[rbp]
   #O5mov rcx, r11
   lea rcx, -488[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61BC[rip+0]
   mov r9d, 32
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -488[rbp]
#O5lea r8, -512[rbp]
   #O5mov rcx, r8
   lea rcx, -512[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -512[rbp]
#O5lea r10, -440[rbp]
   #O5mov rcx, r10
   lea rcx, -440[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -464[rbp]
   #O5mov rcx, r10
   lea rcx, -464[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 72[r10]
   #O5mov rcx, r8
   lea rcx, 72[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -512[rbp]
   #O5mov rcx, r11
   lea rcx, -512[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -488[rbp]
   #O5mov rcx, r11
   lea rcx, -488[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -464[rbp]
   #O5mov rcx, r11
   lea rcx, -464[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -440[rbp]
   #O5mov rcx, r11
   lea rcx, -440[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -584[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -584[rbp]
   #O5mov rcx, r11
   lea rcx, -584[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61C1[rip+0]
   mov r9d, 40
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -584[rbp]
#O5lea r8, -608[rbp]
   #O5mov rcx, r8
   lea rcx, -608[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -608[rbp]
#O5lea r10, -536[rbp]
   #O5mov rcx, r10
   lea rcx, -536[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -560[rbp]
   #O5mov rcx, r10
   lea rcx, -560[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 96[r10]
   #O5mov rcx, r8
   lea rcx, 96[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -608[rbp]
   #O5mov rcx, r11
   lea rcx, -608[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -584[rbp]
   #O5mov rcx, r11
   lea rcx, -584[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -560[rbp]
   #O5mov rcx, r11
   lea rcx, -560[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -536[rbp]
   #O5mov rcx, r11
   lea rcx, -536[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -680[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -680[rbp]
   #O5mov rcx, r11
   lea rcx, -680[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61C6[rip+0]
   mov r9d, 22
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -680[rbp]
#O5lea r8, -704[rbp]
   #O5mov rcx, r8
   lea rcx, -704[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -704[rbp]
#O5lea r10, -632[rbp]
   #O5mov rcx, r10
   lea rcx, -632[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -656[rbp]
   #O5mov rcx, r10
   lea rcx, -656[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 120[r10]
   #O5mov rcx, r8
   lea rcx, 120[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -704[rbp]
   #O5mov rcx, r11
   lea rcx, -704[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -680[rbp]
   #O5mov rcx, r11
   lea rcx, -680[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -656[rbp]
   #O5mov rcx, r11
   lea rcx, -656[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -632[rbp]
   #O5mov rcx, r11
   lea rcx, -632[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -776[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -776[rbp]
   #O5mov rcx, r11
   lea rcx, -776[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61CB[rip+0]
   mov r9d, 29
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -776[rbp]
#O5lea r8, -800[rbp]
   #O5mov rcx, r8
   lea rcx, -800[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -800[rbp]
#O5lea r10, -728[rbp]
   #O5mov rcx, r10
   lea rcx, -728[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -752[rbp]
   #O5mov rcx, r10
   lea rcx, -752[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 144[r10]
   #O5mov rcx, r8
   lea rcx, 144[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -800[rbp]
   #O5mov rcx, r11
   lea rcx, -800[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -776[rbp]
   #O5mov rcx, r11
   lea rcx, -776[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -752[rbp]
   #O5mov rcx, r11
   lea rcx, -752[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -728[rbp]
   #O5mov rcx, r11
   lea rcx, -728[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -872[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -872[rbp]
   #O5mov rcx, r11
   lea rcx, -872[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61D0[rip+0]
   mov r9d, 32
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -872[rbp]
#O5lea r8, -896[rbp]
   #O5mov rcx, r8
   lea rcx, -896[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -896[rbp]
#O5lea r10, -824[rbp]
   #O5mov rcx, r10
   lea rcx, -824[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -848[rbp]
   #O5mov rcx, r10
   lea rcx, -848[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 168[r10]
   #O5mov rcx, r8
   lea rcx, 168[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -896[rbp]
   #O5mov rcx, r11
   lea rcx, -896[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -872[rbp]
   #O5mov rcx, r11
   lea rcx, -872[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -848[rbp]
   #O5mov rcx, r11
   lea rcx, -848[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -824[rbp]
   #O5mov rcx, r11
   lea rcx, -824[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -968[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -968[rbp]
   #O5mov rcx, r11
   lea rcx, -968[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61D5[rip+0]
   mov r9d, 29
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -968[rbp]
#O5lea r8, -992[rbp]
   #O5mov rcx, r8
   lea rcx, -992[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -992[rbp]
#O5lea r10, -920[rbp]
   #O5mov rcx, r10
   lea rcx, -920[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -944[rbp]
   #O5mov rcx, r10
   lea rcx, -944[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 192[r10]
   #O5mov rcx, r8
   lea rcx, 192[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -992[rbp]
   #O5mov rcx, r11
   lea rcx, -992[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -968[rbp]
   #O5mov rcx, r11
   lea rcx, -968[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -944[rbp]
   #O5mov rcx, r11
   lea rcx, -944[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -920[rbp]
   #O5mov rcx, r11
   lea rcx, -920[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -1064[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1064[rbp]
   #O5mov rcx, r11
   lea rcx, -1064[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61DA[rip+0]
   mov r9d, 30
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1064[rbp]
#O5lea r8, -1088[rbp]
   #O5mov rcx, r8
   lea rcx, -1088[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1088[rbp]
#O5lea r10, -1016[rbp]
   #O5mov rcx, r10
   lea rcx, -1016[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -1040[rbp]
   #O5mov rcx, r10
   lea rcx, -1040[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 216[r10]
   #O5mov rcx, r8
   lea rcx, 216[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -1088[rbp]
   #O5mov rcx, r11
   lea rcx, -1088[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -1064[rbp]
   #O5mov rcx, r11
   lea rcx, -1064[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -1040[rbp]
   #O5mov rcx, r11
   lea rcx, -1040[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -1016[rbp]
   #O5mov rcx, r11
   lea rcx, -1016[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   lea r11, -1160[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -1160[rbp]
   #O5mov rcx, r11
   lea rcx, -1160[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_61DF[rip+0]
   mov r9d, 30
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -1160[rbp]
#O5lea r8, -1184[rbp]
   #O5mov rcx, r8
   lea rcx, -1184[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   mov QWORD PTR -1424[rbp], r11
   call _ZN3AFX5CWSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -1184[rbp]
#O5lea r10, -1112[rbp]
   #O5mov rcx, r10
   lea rcx, -1112[rbp] #Optim 5
   mov QWORD PTR -1432[rbp], r11
   call AFXGETEXEPATHNAME #NO_ALL
   mov r11, rax
#O5lea r10, -1136[rbp]
   #O5mov rcx, r10
   lea rcx, -1136[rbp] #Optim 5
   mov rdx, r11
#O6mov r11, QWORD PTR -1432[rbp]
   #O6mov r8, r11
   mov r8, QWORD PTR -1432[rbp] #Optim 6
   call _Zv23catRN3AFX5CWSTRES1_ #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 240[r10]
   #O5mov rcx, r8
   lea rcx, 240[r10] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERS0_ #NO_ALL
#O5lea r11, -1184[rbp]
   #O5mov rcx, r11
   lea rcx, -1184[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -1160[rbp]
   #O5mov rcx, r11
   lea rcx, -1160[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -1136[rbp]
   #O5mov rcx, r11
   lea rcx, -1136[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -1112[rbp]
   #O5mov rcx, r11
   lea rcx, -1112[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   .Lt_61AB:

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSCONFIG12LOADKEYWORDSEv
_ZN9CLSCONFIG12LOADKEYWORDSEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_61F0:
   mov r11, 16[rbp]
#O5lea r10, 72[r11]
   #O5mov rcx, r10
   lea rcx, 72[r11] #Optim 5
   call _ZN3AFX5CWSTRcvPvEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call AFXFILEEXISTS #NO_ALL
   mov r11b, al
   cmp r11b, 0
   jne .Lt_61F3
   mov r11, 16[rbp]
#O5lea r10, 96[r11]
   #O5mov rcx, r10
   lea rcx, 96[r11] #Optim 5
   call _ZN3AFX5CWSTRcvPvEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call AFXFILEEXISTS #NO_ALL
   mov r11b, al
   cmp r11b, 0
   je .Lt_61F5
   mov r11, 16[rbp]
#O5lea r10, 72[r11]
   #O5mov rcx, r10
   lea rcx, 72[r11] #Optim 5
   call _ZN3AFX5CWSTR4SPTREv #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 96[r10]
   #O5mov rcx, r8
   lea rcx, 96[r10] #Optim 5
   mov QWORD PTR -224[rbp], r11
   call _ZN3AFX5CWSTR4SPTREv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
#O6mov r11, QWORD PTR -224[rbp]
   #O6mov rdx, r11
   mov rdx, QWORD PTR -224[rbp] #Optim 6
   mov r8d, 1
   call AFXCOPYFILE #NO_ALL
   mov r11b, al
   cmp r11b, 0
   jne .Lt_61F7
   jmp .Lt_61F1
   .Lt_61F7:
   .Lt_61F6:
   .Lt_61F5:
   .Lt_61F4:
   .Lt_61F3:
   .Lt_61F2:
   mov r11, 16[rbp]
#O5lea r10, 72[r11]
   #O5mov rcx, r10
   lea rcx, 72[r11] #Optim 5
   call _ZN3AFX5CWSTRcvPvEv #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call AFXFILEEXISTS #NO_ALL
   mov r11b, al
   cmp r11b, 0
   jne .Lt_61F9
   jmp .Lt_61F1
   .Lt_61F9:
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMC1Ev #NO_ALL
   mov r11, 16[rbp]
   lea r10, 72[r11]
#O5lea r11, -152[rbp]
   #O5mov rcx, r11
   lea rcx, -152[rbp] #Optim 5
   mov rdx, r10
   call _ZN3AFX5CBSTRC1ERNS_5CWSTRE #NO_ALL
   lea r11, -152[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   mov r8d, 1
   xor r9d, r9d
   mov QWORD PTR 32[rsp], 0
   call _ZN3AFX11CTEXTSTREAM4OPENERNS_5CBSTREibb #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov -160[rbp], r10
#O5lea r11, -152[rbp]
   #O5mov rcx, r11
   lea rcx, -152[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
   cmp QWORD PTR -160[rbp], 0
   je .Lt_61FC
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMD1Ev #NO_ALL
   jmp .Lt_61F1
   .Lt_61FC:
   lea r11, -144[rbp]
#O5lea r10, -192[rbp]
   #O5mov rcx, r10
   lea rcx, -192[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM7READALLEv #NO_ALL
   mov r11, rax
#O5lea r10, -184[rbp]
   #O5mov rcx, r10
   lea rcx, -184[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRC1ERNS_5CBSTRE #NO_ALL
#O5lea r11, -192[rbp]
   #O5mov rcx, r11
   lea rcx, -192[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -184[rbp]
   #O5mov rcx, r11
   lea rcx, -184[rbp] #Optim 5
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -216[rbp]
   #O5mov rcx, r10
   lea rcx, -216[rbp] #Optim 5
   mov rdx, r11
   lea r8, Lt_6201[rip+0]
   call AFXSTRSHRINK #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
   mov r10, 16[rbp]
#O5lea r8, 856[r10]
   #O5mov rcx, r8
   lea rcx, 856[r10] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
#O5lea r11, -216[rbp]
   #O5mov rcx, r11
   lea rcx, -216[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAM5CLOSEEv #NO_ALL
   mov DWORD PTR -116[rbp], 0
#O5lea r11, -184[rbp]
   #O5mov rcx, r11
   lea rcx, -184[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMD1Ev #NO_ALL
   .Lt_61F1:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSCONFIG12SAVEKEYWORDSEv
_ZN9CLSCONFIG12SAVEKEYWORDSEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -116[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -116[rbp], 0 #Optim 4
   .Lt_6202:
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMC1Ev #NO_ALL
   mov r11, 16[rbp]
   lea r10, 72[r11]
#O5lea r11, -152[rbp]
   #O5mov rcx, r11
   lea rcx, -152[rbp] #Optim 5
   mov rdx, r10
   call _ZN3AFX5CBSTRC1ERNS_5CWSTRE #NO_ALL
   lea r11, -152[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   mov r8d, 1
   xor r9d, r9d
   call _ZN3AFX11CTEXTSTREAM6CREATEERNS_5CBSTREbb #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov -160[rbp], r10
#O5lea r11, -152[rbp]
   #O5mov rcx, r11
   lea rcx, -152[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
   cmp QWORD PTR -160[rbp], 0
   je .Lt_6206
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMD1Ev #NO_ALL
   jmp .Lt_6203
   .Lt_6206:
   mov r11, 16[rbp]
   lea r10, 856[r11]
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   mov rdx, r10
   xor r8d, r8d
   call _ZN3AFX5CBSTRC1ERK8FBSTRINGj #NO_ALL
   lea r11, -168[rbp]
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM9WRITELINEERNS_5CBSTRE #NO_ALL
#O5lea r11, -168[rbp]
   #O5mov rcx, r11
   lea rcx, -168[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAM5CLOSEEv #NO_ALL
   mov DWORD PTR -116[rbp], 0
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMD1Ev #NO_ALL
   .Lt_6203:
   mov eax, DWORD PTR-116[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSCONFIG11GETTHEMEPTREv
_ZN9CLSCONFIG11GETTHEMEPTREv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -120[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -120[rbp], 0 #Optim 4
   .Lt_6209:
#O4lea r11, -128[rbp]
   #O4mov QWORD PTR [r11], 0
   mov QWORD PTR -128[rbp], 0 #Optim 4
#O5lea r11, GCONFIG[rip+328]
   #O5mov rcx, r11
   lea rcx, GCONFIG[rip+328] #Optim 5
   mov edx, 1
   call fb_ArrayLBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -132[rbp], r10d
   mov -132[rbp], r11d #Optim 2
#O5lea r11, GCONFIG[rip+328]
   #O5mov rcx, r11
   lea rcx, GCONFIG[rip+328] #Optim 5
   mov edx, 1
   call fb_ArrayUBound #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -136[rbp], r10d
   mov -136[rbp], r11d #Optim 2
   jmp .Lt_620C
   .Lt_620F:
   lea r11, GCONFIG[rip+296]
   lea r10, GCONFIG[rip+328]
   movsxd r8, DWORD PTR -132[rbp]
   imul r8, 432
   mov r9, QWORD PTR 0[r10]
   add r9, r8
#O5lea r10, 0[r9]
   #O5mov rcx, r10
   lea rcx, 0[r9] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   call fb_StrCompare #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   jne .Lt_6211
   lea r11, GCONFIG[rip+328]
   movsxd r10, DWORD PTR -132[rbp]
   imul r10, 432
   mov r8, QWORD PTR 0[r11]
   add r8, r10
   mov -128[rbp], r8
   jmp .Lt_620E
   .Lt_6211:
   .Lt_6210:
   .Lt_620D:
   movsxd r11, DWORD PTR -132[rbp]
   inc r11
#O2mov r10d, r11d
   #O2mov -132[rbp], r10d
   mov -132[rbp], r11d #Optim 2
   .Lt_620C:
   movsxd r11, DWORD PTR -132[rbp]
   movsxd r10, DWORD PTR -136[rbp]
   cmp r11, r10
   jle .Lt_620F
   .Lt_620E:
   cmp QWORD PTR -128[rbp], 0
   jne .Lt_6213
   lea r11, GCONFIG[rip+328]
   mov rax, QWORD PTR 0[r11]
   mov QWORD PTR -128[rbp], rax
   .Lt_6213:
   mov rax, QWORD PTR -128[rbp]
   mov QWORD PTR -120[rbp], rax
   .Lt_620A:
   mov rax, -120[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .text
   .globl _ZN9CLSCONFIG14LOADCODETIPSFBEv
_ZN9CLSCONFIG14LOADCODETIPSFBEv:
   push rbp
   mov  rbp,rsp
   sub rsp, 1744
   mov QWORD PTR 16[rbp], rcx
#O4lea r11, -113[rbp]
   #O4mov BYTE PTR [r11], 0
   mov BYTE PTR -113[rbp], 0 #Optim 4
   .Lt_6214:
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX5CWSTRC1Ev #NO_ALL
#O4lea r11, -148[rbp]
   #O4mov DWORD PTR [r11], 0
   mov DWORD PTR -148[rbp], 0 #Optim 4
#O5lea r11, -504[rbp]
   #O5mov rcx, r11
   lea rcx, -504[rbp] #Optim 5
   call _ZN9CLSPARSERC1Ev #NO_ALL
   lea rcx, GDB2[rip+0]
   mov edx, 100
   call _ZN6CLSDB218DBDELETEBYFILETYPEEi #NO_ALL
   lea r11, -544[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -544[rbp]
   #O5mov rcx, r11
   lea rcx, -544[rbp] #Optim 5
   mov rdx, -1
   lea r8, Lt_0000[rip+0]
   mov r9d, 1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -544[rbp]
#O5lea r8, -504[rbp]
   #O5mov rcx, r8
   lea rcx, -504[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -592[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -544[rbp]
   #O5mov rcx, r11
   lea rcx, -544[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   mov DWORD PTR -480[rbp], 100
#O5lea r11, -568[rbp]
   #O5mov rcx, r11
   lea rcx, -568[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMC1Ev #NO_ALL
   mov r11, 16[rbp]
   lea r10, 120[r11]
#O5lea r11, -576[rbp]
   #O5mov rcx, r11
   lea rcx, -576[rbp] #Optim 5
   mov rdx, r10
   call _ZN3AFX5CBSTRC1ERNS_5CWSTRE #NO_ALL
   lea r11, -576[rbp]
#O5lea r10, -568[rbp]
   #O5mov rcx, r10
   lea rcx, -568[rbp] #Optim 5
   mov rdx, r11
   mov r8d, 1
   xor r9d, r9d
   mov QWORD PTR 32[rsp], 0
   call _ZN3AFX11CTEXTSTREAM4OPENERNS_5CBSTREibb #NO_ALL
   mov r11d, eax
   movsxd r10, r11d
   cmp r10, 0
   setne al
   movzx r10, al
   neg r10
   mov -584[rbp], r10
#O5lea r11, -576[rbp]
   #O5mov rcx, r11
   lea rcx, -576[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
   cmp QWORD PTR -584[rbp], 0
   je .Lt_6219
   mov BYTE PTR -113[rbp], 1
#O5lea r11, -568[rbp]
   #O5mov rcx, r11
   lea rcx, -568[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMD1Ev #NO_ALL
#O5lea r11, -504[rbp]
   #O5mov rcx, r11
   lea rcx, -504[rbp] #Optim 5
   call _ZN9CLSPARSERD1Ev #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_6215
   .Lt_6219:
   .Lt_621B:
#O5lea r11, -568[rbp]
   #O5mov rcx, r11
   lea rcx, -568[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAM3EOSEv #NO_ALL
   mov r11b, al
   cmp r11b, 0
   jne .Lt_621C
   lea r11, -568[rbp]
#O5lea r10, -600[rbp]
   #O5mov rcx, r10
   lea rcx, -600[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX11CTEXTSTREAM8READLINEEv #NO_ALL
   mov r11, rax
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r11
   call _ZN3AFX5CWSTRaSERNS_5CBSTRE #NO_ALL
#O5lea r11, -600[rbp]
   #O5mov rcx, r11
   lea rcx, -600[rbp] #Optim 5
   call _ZN3AFX5CBSTRD1Ev #NO_ALL
   lea r11, -680[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
   lea r11, -640[rbp]
   mov QWORD PTR 0[r11], 0 #NO_OPTIM
   mov QWORD PTR 8[r11], 0 #NO_OPTIM
   mov QWORD PTR 16[r11], 0 #NO_OPTIM
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -640[rbp]
   #O5mov rcx, r10
   lea rcx, -640[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
#O5lea r10, -640[rbp]
   #O5mov rcx, r10
   lea rcx, -640[rbp] #Optim 5
   mov QWORD PTR -592[rbp], r11
   call fb_TRIM #NO_ALL
   mov r11, rax
#O5lea r10, -680[rbp]
   #O5mov rcx, r10
   lea rcx, -680[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   mov r9, -1
   mov QWORD PTR 32[rsp], 0
   call fb_StrAssign #NO_ALL
   mov r11, rax
   lea r10, -680[rbp]
#O5lea r8, -144[rbp]
   #O5mov rcx, r8
   lea rcx, -144[rbp] #Optim 5
   mov rdx, r10
   mov QWORD PTR -712[rbp], r11
   call _ZN3AFX5CWSTRaSERK8FBSTRING #NO_ALL
#O5lea r11, -680[rbp]
   #O5mov rcx, r11
   lea rcx, -680[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -640[rbp]
   #O5mov rcx, r11
   lea rcx, -640[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFXv13lenERNS_5CWSTRE #NO_ALL
   mov r11d, eax
   #O1 mov eax, r11d
   mov eax, eax #NO_OPTIM
   mov r10, rax
   cmp r10, 0
   jne .Lt_6221
   jmp .Lt_621B
   .Lt_6221:
   lea rcx, Lt_2B8A[rip+0]
   mov edx, 1
   call fb_StrAllocTempDescZEx #NO_ALL
   mov r11, rax
   lea r10, -704[rbp]
   mov QWORD PTR 0[r10], 0 #NO_OPTIM
   mov QWORD PTR 8[r10], 0 #NO_OPTIM
   mov QWORD PTR 16[r10], 0 #NO_OPTIM
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov QWORD PTR -592[rbp], r11
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -704[rbp]
   #O5mov rcx, r10
   lea rcx, -704[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov r11, rax
   lea r10, -704[rbp]
   mov ecx, 1
   mov rdx, r10
#O6mov r10, QWORD PTR -592[rbp]
   #O6mov r8, r10
   mov r8, QWORD PTR -592[rbp] #Optim 6
   mov QWORD PTR -592[rbp], r11
   call fb_StrInstr #NO_ALL
   mov r11, rax
#O2mov r10d, r11d
   #O2mov -148[rbp], r10d
   mov -148[rbp], r11d #Optim 2
#O5lea r11, -704[rbp]
   #O5mov rcx, r11
   lea rcx, -704[rbp] #Optim 5
   call fb_StrDelete #NO_ALL
   movsxd r11, DWORD PTR -148[rbp]
   cmp r11, 0
   je .Lt_6224
   movsxd r11, DWORD PTR -148[rbp]
   mov rax, -1
   add r11, rax
   lea r10, -144[rbp]
#O5lea r8, -736[rbp]
   #O5mov rcx, r8
   lea rcx, -736[rbp] #Optim 5
   mov rdx, r10
   mov r8, r11
   call _Z4LEFTRN3AFX5CWSTREu7INTEGER #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
   call _ZN3AFX5CWSTRcvwEv #NO_ALL
   mov r11, rax
#O5lea r10, -416[rbp]
   #O5mov rcx, r10
   lea rcx, -416[rbp] #Optim 5
   mov rdx, -1
   mov r8, r11
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
#O5lea r11, -736[rbp]
   #O5mov rcx, r11
   lea rcx, -736[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   movsxd r11, DWORD PTR -148[rbp]
   inc r11
#O5lea r10, -144[rbp]
   #O5mov rcx, r10
   lea rcx, -144[rbp] #Optim 5
   mov QWORD PTR -592[rbp], r11
   call _ZN3AFXdeERNS_5CWSTRE #NO_ALL
#O2mov r11, rax
   #O2mov rcx, r11
   mov rcx, rax #Optim 2
#O6mov r11, QWORD PTR -592[rbp]
   #O6mov rdx, r11
   mov rdx, QWORD PTR -592[rbp] #Optim 6
   mov r8, -1
   call fb_WstrMid #NO_ALL
#O2mov r11, rax
   #O2mov -744[rbp], r11
   mov -744[rbp], rax #Optim 2
#O5lea r11, -392[rbp]
   #O5mov rcx, r11
   lea rcx, -392[rbp] #Optim 5
   mov rdx, -1
   mov r8, -744[rbp]
   xor r9d, r9d
   call fb_WstrAssignToA #NO_ALL
   mov rcx, -744[rbp]
   call fb_WstrDelete #NO_ALL
   lea r11, -504[rbp]
   lea rcx, GDB2[rip+0]
   mov rdx, r11
   mov r8d, 2
   call _ZN6CLSDB25DBADDEP9CLSPARSERi #NO_ALL
   .Lt_6224:
   .Lt_6223:
   jmp .Lt_621B
   .Lt_621C:
#O5lea r11, -568[rbp]
   #O5mov rcx, r11
   lea rcx, -568[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAM5CLOSEEv #NO_ALL
   mov BYTE PTR -113[rbp], 0
#O5lea r11, -568[rbp]
   #O5mov rcx, r11
   lea rcx, -568[rbp] #Optim 5
   call _ZN3AFX11CTEXTSTREAMD1Ev #NO_ALL
#O5lea r11, -504[rbp]
   #O5mov rcx, r11
   lea rcx, -504[rbp] #Optim 5
   call _ZN9CLSPARSERD1Ev #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   jmp .Lt_6215
   lea r11, -568[rbp]
   mov rcx, r11
   call _ZN3AFX11CTEXTSTREAMD1Ev #NO_ALL
#O5lea r11, -504[rbp]
   #O5mov rcx, r11
   lea rcx, -504[rbp] #Optim 5
   call _ZN9CLSPARSERD1Ev #NO_ALL
#O5lea r11, -144[rbp]
   #O5mov rcx, r11
   lea rcx, -144[rbp] #Optim 5
   call _ZN3AFX5CWSTRD1Ev #NO_ALL
   .Lt_6215:
   movzx rax, BYTE PTR -113[rbp]

   mov rsp,rbp
   pop rbp
   ret
   .section .bss
   .lcomm SLIST.0,24,8
   .section .data
   .align 8
   Lt_0000:
   .ascii "\0"
   .align 8
   Lt_0144:
   .ascii "\15""\12""\0"
   .align 8
   Lt_1154:
   .ascii "\103\0\157\0\156\0\164\0\162\0\141\0\143\0\164\0\104\0\145\0\154\0\145\0\147\0\141\0\164\0\145\0\0\0"
   .align 8
   Lt_1156:
   .ascii "\103\0\157\0\156\0\164\0\162\0\141\0\143\0\164\0\104\0\145\0\154\0\145\0\147\0\141\0\164\0\145\0\0\0"
   .align 8
   _ZTSN3AFX13AFX_IUNKNOWN_E:
   .quad 0x0 # 0
   .quad Lt_3BAB
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX13AFX_IUNKNOWN_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX14AFX_IDISPATCH_E:
   .quad 0x0 # 0
   .quad Lt_3BB3
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX14AFX_IDISPATCH_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX16AFX_IDICTIONARY_E:
   .quad 0x0 # 0
   .quad Lt_3BBB
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX16AFX_IDICTIONARY_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX16AFX_IDICTIONARY_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX16AFX_IFILESYSTEM_E:
   .quad 0x0 # 0
   .quad Lt_3BC3
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX16AFX_IFILESYSTEM_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX16AFX_IFILESYSTEM_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX21AFX_IDRIVECOLLECTION_E:
   .quad 0x0 # 0
   .quad Lt_3BCB
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX21AFX_IDRIVECOLLECTION_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX21AFX_IDRIVECOLLECTION_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX11AFX_IDRIVE_E:
   .quad 0x0 # 0
   .quad Lt_3BD3
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX11AFX_IDRIVE_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX11AFX_IDRIVE_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX12AFX_IFOLDER_E:
   .quad 0x0 # 0
   .quad Lt_3BDB
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX12AFX_IFOLDER_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX12AFX_IFOLDER_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX22AFX_IFOLDERCOLLECTION_E:
   .quad 0x0 # 0
   .quad Lt_3BE3
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX22AFX_IFOLDERCOLLECTION_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX22AFX_IFOLDERCOLLECTION_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX20AFX_IFILECOLLECTION_E:
   .quad 0x0 # 0
   .quad Lt_3BEB
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX20AFX_IFILECOLLECTION_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX20AFX_IFILECOLLECTION_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX10AFX_IFILE_E:
   .quad 0x0 # 0
   .quad Lt_3BF3
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX10AFX_IFILE_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX10AFX_IFILE_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX16AFX_ITEXTSTREAM_E:
   .quad 0x0 # 0
   .quad Lt_3BFB
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX16AFX_ITEXTSTREAM_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX16AFX_ITEXTSTREAM_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX17AFX_IFILESYSTEM3_E:
   .quad 0x0 # 0
   .quad Lt_3C03
   .quad _ZTSN3AFX16AFX_IFILESYSTEM_E
   .align 8
   _ZTVN3AFX17AFX_IFILESYSTEM3_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX17AFX_IFILESYSTEM3_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX19AFX_ISCRIPTENCODER_E:
   .quad 0x0 # 0
   .quad Lt_3C0B
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX19AFX_ISCRIPTENCODER_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX19AFX_ISCRIPTENCODER_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX16AFX_IWEBBROWSER_E:
   .quad 0x0 # 0
   .quad Lt_5029
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX16AFX_IWEBBROWSER_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX16AFX_IWEBBROWSER_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX19AFX_IWEBBROWSERAPP_E:
   .quad 0x0 # 0
   .quad Lt_5031
   .quad _ZTSN3AFX16AFX_IWEBBROWSER_E
   .align 8
   _ZTVN3AFX19AFX_IWEBBROWSERAPP_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX19AFX_IWEBBROWSERAPP_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX17AFX_IWEBBROWSER2_E:
   .quad 0x0 # 0
   .quad Lt_5039
   .quad _ZTSN3AFX19AFX_IWEBBROWSERAPP_E
   .align 8
   _ZTVN3AFX17AFX_IWEBBROWSER2_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX17AFX_IWEBBROWSER2_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX18AFX_ISHELLWINDOWS_E:
   .quad 0x0 # 0
   .quad Lt_5041
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX18AFX_ISHELLWINDOWS_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX18AFX_ISHELLWINDOWS_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX19AFX_ISHELLUIHELPER_E:
   .quad 0x0 # 0
   .quad Lt_5049
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX19AFX_ISHELLUIHELPER_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX19AFX_ISHELLUIHELPER_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX20AFX_ISHELLUIHELPER2_E:
   .quad 0x0 # 0
   .quad Lt_5051
   .quad _ZTSN3AFX19AFX_ISHELLUIHELPER_E
   .align 8
   _ZTVN3AFX20AFX_ISHELLUIHELPER2_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX20AFX_ISHELLUIHELPER2_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX20AFX_ISHELLUIHELPER3_E:
   .quad 0x0 # 0
   .quad Lt_5059
   .quad _ZTSN3AFX20AFX_ISHELLUIHELPER2_E
   .align 8
   _ZTVN3AFX20AFX_ISHELLUIHELPER3_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX20AFX_ISHELLUIHELPER3_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX29AFX_ISHELLFAVORITESNAMESPACE_E:
   .quad 0x0 # 0
   .quad Lt_5061
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX29AFX_ISHELLFAVORITESNAMESPACE_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX29AFX_ISHELLFAVORITESNAMESPACE_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX20AFX_ISHELLNAMESPACE_E:
   .quad 0x0 # 0
   .quad Lt_5069
   .quad _ZTSN3AFX29AFX_ISHELLFAVORITESNAMESPACE_E
   .align 8
   _ZTVN3AFX20AFX_ISHELLNAMESPACE_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX20AFX_ISHELLNAMESPACE_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX21AFX_ISCRIPTERRORLIST_E:
   .quad 0x0 # 0
   .quad Lt_5071
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX21AFX_ISCRIPTERRORLIST_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX21AFX_ISCRIPTERRORLIST_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX15AFX_IOLEOBJECT_E:
   .quad 0x0 # 0
   .quad Lt_50B4
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX15AFX_IOLEOBJECT_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX15AFX_IOLEOBJECT_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX22AFX_IOLEINPLACEOBJECT_E:
   .quad 0x0 # 0
   .quad Lt_50BC
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX22AFX_IOLEINPLACEOBJECT_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX22AFX_IOLEINPLACEOBJECT_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX19AFX_IOLECLIENTSITE_E:
   .quad 0x0 # 0
   .quad Lt_50C4
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX19AFX_IOLECLIENTSITE_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX19AFX_IOLECLIENTSITE_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX28AFX_IOLEINPLACEACTIVEOBJECT_E:
   .quad 0x0 # 0
   .quad Lt_50CC
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX28AFX_IOLEINPLACEACTIVEOBJECT_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX28AFX_IOLEINPLACEACTIVEOBJECT_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX21AFX_ISERVICEPROVIDER_E:
   .quad 0x0 # 0
   .quad Lt_50D4
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX21AFX_ISERVICEPROVIDER_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX21AFX_ISERVICEPROVIDER_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX22AFX_IPARSEDISPLAYNAME_E:
   .quad 0x0 # 0
   .quad Lt_50DC
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX22AFX_IPARSEDISPLAYNAME_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX22AFX_IPARSEDISPLAYNAME_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX18AFX_IOLECONTAINER_E:
   .quad 0x0 # 0
   .quad Lt_50E4
   .quad _ZTSN3AFX22AFX_IPARSEDISPLAYNAME_E
   .align 8
   _ZTVN3AFX18AFX_IOLECONTAINER_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX18AFX_IOLECONTAINER_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX15AFX_IOLEWINDOW_E:
   .quad 0x0 # 0
   .quad Lt_50EC
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX15AFX_IOLEWINDOW_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX15AFX_IOLEWINDOW_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX20AFX_IOLEINPLACESITE_E:
   .quad 0x0 # 0
   .quad Lt_50F4
   .quad _ZTSN3AFX15AFX_IOLEWINDOW_E
   .align 8
   _ZTVN3AFX20AFX_IOLEINPLACESITE_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX20AFX_IOLEINPLACESITE_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX22AFX_IOLEINPLACESITEEX_E:
   .quad 0x0 # 0
   .quad Lt_50FC
   .quad _ZTSN3AFX20AFX_IOLEINPLACESITE_E
   .align 8
   _ZTVN3AFX22AFX_IOLEINPLACESITEEX_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX22AFX_IOLEINPLACESITEEX_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX24AFX_IOLEINPLACEUIWINDOW_E:
   .quad 0x0 # 0
   .quad Lt_5104
   .quad _ZTSN3AFX15AFX_IOLEWINDOW_E
   .align 8
   _ZTVN3AFX24AFX_IOLEINPLACEUIWINDOW_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX24AFX_IOLEINPLACEUIWINDOW_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX21AFX_IOLEINPLACEFRAME_E:
   .quad 0x0 # 0
   .quad Lt_510C
   .quad _ZTSN3AFX24AFX_IOLEINPLACEUIWINDOW_E
   .align 8
   _ZTVN3AFX21AFX_IOLEINPLACEFRAME_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX21AFX_IOLEINPLACEFRAME_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX20AFX_IOLECONTROLSITE_E:
   .quad 0x0 # 0
   .quad Lt_5114
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX20AFX_IOLECONTROLSITE_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX20AFX_IOLECONTROLSITE_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX21AFX_ISIMPLEFRAMESITE_E:
   .quad 0x0 # 0
   .quad Lt_511C
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX21AFX_ISIMPLEFRAMESITE_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX21AFX_ISIMPLEFRAMESITE_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX17CAXHOST_IDISPATCHE:
   .quad 0x0 # 0
   .quad Lt_512A
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX17CAXHOST_IDISPATCHE:
   .quad 0x0 # 0
   .quad _ZTSN3AFX17CAXHOST_IDISPATCHE
   .quad _ZN3AFX17CAXHOST_IDISPATCH14QUERYINTERFACEEPK5_GUIDPPv
   .quad _ZN3AFX17CAXHOST_IDISPATCH6ADDREFEv
   .quad _ZN3AFX17CAXHOST_IDISPATCH7RELEASEEv
   .quad _ZN3AFX17CAXHOST_IDISPATCH16GETTYPEINFOCOUNTEPj
   .quad _ZN3AFX17CAXHOST_IDISPATCH11GETTYPEINFOEjjPP10ITypeInfo_
   .quad _ZN3AFX17CAXHOST_IDISPATCH13GETIDSOFNAMESEPK5_GUIDPPwjjPi
   .quad _ZN3AFX17CAXHOST_IDISPATCH6INVOKEEiPK5_GUIDjtP13tagDISPPARAMSP10tagVARIANTP12tagEXCEPINFOPj
   .align 8
   _ZTSN3AFX22CAXHOST_IOLECLIENTSITEE:
   .quad 0x0 # 0
   .quad Lt_5178
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX22CAXHOST_IOLECLIENTSITEE:
   .quad 0x0 # 0
   .quad _ZTSN3AFX22CAXHOST_IOLECLIENTSITEE
   .quad _ZN3AFX22CAXHOST_IOLECLIENTSITE14QUERYINTERFACEEPK5_GUIDPPv
   .quad _ZN3AFX22CAXHOST_IOLECLIENTSITE6ADDREFEv
   .quad _ZN3AFX22CAXHOST_IOLECLIENTSITE7RELEASEEv
   .quad _ZN3AFX22CAXHOST_IOLECLIENTSITE10SAVEOBJECTEv
   .quad _ZN3AFX22CAXHOST_IOLECLIENTSITE10GETMONIKEREjjPP9IMoniker_
   .quad _ZN3AFX22CAXHOST_IOLECLIENTSITE12GETCONTAINEREPP14IOleContainer_
   .quad _ZN3AFX22CAXHOST_IOLECLIENTSITE10SHOWOBJECTEv
   .quad _ZN3AFX22CAXHOST_IOLECLIENTSITE12ONSHOWWINDOWEi
   .quad _ZN3AFX22CAXHOST_IOLECLIENTSITE22REQUESTNEWOBJECTLAYOUTEv
   .align 8
   _ZTSN3AFX23CAXHOST_IOLECONTROLSITEE:
   .quad 0x0 # 0
   .quad Lt_51A5
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX23CAXHOST_IOLECONTROLSITEE:
   .quad 0x0 # 0
   .quad _ZTSN3AFX23CAXHOST_IOLECONTROLSITEE
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE14QUERYINTERFACEEPK5_GUIDPPv
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE6ADDREFEv
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE7RELEASEEv
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE20ONCONTROLINFOCHANGEDEv
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE17LOCKINPLACEACTIVEEi
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE18GETEXTENDEDCONTROLEPP10IDispatch_
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE15TRANSFORMCOORDSEP7_POINTLP9tagPOINTFj
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE20TRANSLATEACCELERATOREP6tagMSGj
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE7ONFOCUSEi
   .quad _ZN3AFX23CAXHOST_IOLECONTROLSITE17SHOWPROPERTYFRAMEEv
   .align 8
   _ZTSN3AFX24CAXHOST_IOLEINPLACEFRAMEE:
   .quad 0x0 # 0
   .quad Lt_51DA
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX24CAXHOST_IOLEINPLACEFRAMEE:
   .quad 0x0 # 0
   .quad _ZTSN3AFX24CAXHOST_IOLEINPLACEFRAMEE
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME14QUERYINTERFACEEPK5_GUIDPPv
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME6ADDREFEv
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME7RELEASEEv
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME9GETWINDOWEPP6HWND__
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME20CONTEXTSENSITIVEHELPEi
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME9GETBORDEREP7tagRECT
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME18REQUESTBORDERSPACEEPK7tagRECT
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME14SETBORDERSPACEEPK7tagRECT
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME15SETACTIVEOBJECTEP24IOleInPlaceActiveObject_PKw
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME11INSERTMENUSEP7HMENU__P21tagOleMenuGroupWidths
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME7SETMENUEP7HMENU__PvP6HWND__
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME11REMOVEMENUSEP7HMENU__
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME13SETSTATUSTEXTEPKw
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME14ENABLEMODELESSEi
   .quad _ZN3AFX24CAXHOST_IOLEINPLACEFRAME20TRANSLATEACCELERATOREP6tagMSGt
   .align 8
   _ZTSN3AFX23CAXHOST_IOLEINPLACESITEE:
   .quad 0x0 # 0
   .quad Lt_5222
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX23CAXHOST_IOLEINPLACESITEE:
   .quad 0x0 # 0
   .quad _ZTSN3AFX23CAXHOST_IOLEINPLACESITEE
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE14QUERYINTERFACEEPK5_GUIDPPv
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE6ADDREFEv
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE7RELEASEEv
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE9GETWINDOWEPP6HWND__
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE20CONTEXTSENSITIVEHELPEi
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE18CANINPLACEACTIVATEEv
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE17ONINPLACEACTIVATEEv
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE12ONUIACTIVATEEv
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE16GETWINDOWCONTEXTEPP17IOleInPlaceFrame_PP20IOleInPlaceUIWindow_P7tagRECTS8_P7tagOIFI
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE6SCROLLE7tagSIZE
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE14ONUIDEACTIVATEEi
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE19ONINPLACEDEACTIVATEEv
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE16DISCARDUNDOSTATEEv
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE17DEACTIVATEANDUNDOEv
   .quad _ZN3AFX23CAXHOST_IOLEINPLACESITE15ONPOSRECTCHANGEEPK7tagRECT
   .align 8
   _ZTSN3AFX24CAXHOST_ISERVICEPROVIDERE:
   .quad 0x0 # 0
   .quad Lt_5275
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX24CAXHOST_ISERVICEPROVIDERE:
   .quad 0x0 # 0
   .quad _ZTSN3AFX24CAXHOST_ISERVICEPROVIDERE
   .quad _ZN3AFX24CAXHOST_ISERVICEPROVIDER14QUERYINTERFACEEPK5_GUIDPPv
   .quad _ZN3AFX24CAXHOST_ISERVICEPROVIDER6ADDREFEv
   .quad _ZN3AFX24CAXHOST_ISERVICEPROVIDER7RELEASEEv
   .quad _ZN3AFX24CAXHOST_ISERVICEPROVIDER12QUERYSERVICEEPK5_GUIDS4_PPv
   .align 8
   _ZTSN3AFX18CDOCHOSTUIHANDLER2E:
   .quad 0x0 # 0
   .quad Lt_5436
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX18CDOCHOSTUIHANDLER2E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX18CDOCHOSTUIHANDLER2E
   .quad _ZN3AFX18CDOCHOSTUIHANDLER214QUERYINTERFACEEPK5_GUIDPPv
   .quad _ZN3AFX18CDOCHOSTUIHANDLER26ADDREFEv
   .quad _ZN3AFX18CDOCHOSTUIHANDLER27RELEASEEv
   .quad _ZN3AFX18CDOCHOSTUIHANDLER215SHOWCONTEXTMENUEjP8tagPOINTP9IUnknown_P10IDispatch_
   .quad _ZN3AFX18CDOCHOSTUIHANDLER211GETHOSTINFOEP14_DOCHOSTUIINFO
   .quad _ZN3AFX18CDOCHOSTUIHANDLER26SHOWUIEjP24IOleInPlaceActiveObject_P18IOleCommandTarget_P17IOleInPlaceFrame_P20IOleInPlaceUIWindow_
   .quad _ZN3AFX18CDOCHOSTUIHANDLER26HIDEUIEv
   .quad _ZN3AFX18CDOCHOSTUIHANDLER28UPDATEUIEv
   .quad _ZN3AFX18CDOCHOSTUIHANDLER214ENABLEMODELESSEi
   .quad _ZN3AFX18CDOCHOSTUIHANDLER219ONDOCWINDOWACTIVATEEi
   .quad _ZN3AFX18CDOCHOSTUIHANDLER221ONFRAMEWINDOWACTIVATEEi
   .quad _ZN3AFX18CDOCHOSTUIHANDLER212RESIZEBORDEREPK7tagRECTP20IOleInPlaceUIWindow_i
   .quad _ZN3AFX18CDOCHOSTUIHANDLER220TRANSLATEACCELERATOREP6tagMSGPK5_GUIDj
   .quad _ZN3AFX18CDOCHOSTUIHANDLER216GETOPTIONKEYPATHEPPwj
   .quad _ZN3AFX18CDOCHOSTUIHANDLER213GETDROPTARGETEP12IDropTarget_PS2_
   .quad _ZN3AFX18CDOCHOSTUIHANDLER211GETEXTERNALEPP10IDispatch_
   .quad _ZN3AFX18CDOCHOSTUIHANDLER212TRANSLATEURLEjPwPS1_
   .quad _ZN3AFX18CDOCHOSTUIHANDLER216FILTERDATAOBJECTEP12IDataObject_PS2_
   .quad _ZN3AFX18CDOCHOSTUIHANDLER218GETOVERRIDEKEYPATHEPPwj
   .align 8
   _ZTSN3AFX20CHTMLDOCUMENTEVENTS2E:
   .quad 0x0 # 0
   .quad Lt_549C
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX20CHTMLDOCUMENTEVENTS2E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX20CHTMLDOCUMENTEVENTS2E
   .quad _ZN3AFX20CHTMLDOCUMENTEVENTS214QUERYINTERFACEEPK5_GUIDPPv
   .quad _ZN3AFX20CHTMLDOCUMENTEVENTS26ADDREFEv
   .quad _ZN3AFX20CHTMLDOCUMENTEVENTS27RELEASEEv
   .quad _ZN3AFX20CHTMLDOCUMENTEVENTS216GETTYPEINFOCOUNTEPj
   .quad _ZN3AFX20CHTMLDOCUMENTEVENTS211GETTYPEINFOEjjPP10ITypeInfo_
   .quad _ZN3AFX20CHTMLDOCUMENTEVENTS213GETIDSOFNAMESEPK5_GUIDPPwjjPi
   .quad _ZN3AFX20CHTMLDOCUMENTEVENTS26INVOKEEiPK5_GUIDjtP13tagDISPPARAMSP10tagVARIANTP12tagEXCEPINFOPj
   .align 8
   _ZTSN3AFX17CWEBBROWSEREVENTSE:
   .quad 0x0 # 0
   .quad Lt_54D2
   .quad __fb_ZTS6Object
   .align 8
   _ZTVN3AFX17CWEBBROWSEREVENTSE:
   .quad 0x0 # 0
   .quad _ZTSN3AFX17CWEBBROWSEREVENTSE
   .quad _ZN3AFX17CWEBBROWSEREVENTS14QUERYINTERFACEEPK5_GUIDPPv
   .quad _ZN3AFX17CWEBBROWSEREVENTS6ADDREFEv
   .quad _ZN3AFX17CWEBBROWSEREVENTS7RELEASEEv
   .quad _ZN3AFX17CWEBBROWSEREVENTS16GETTYPEINFOCOUNTEPj
   .quad _ZN3AFX17CWEBBROWSEREVENTS11GETTYPEINFOEjjPP10ITypeInfo_
   .quad _ZN3AFX17CWEBBROWSEREVENTS13GETIDSOFNAMESEPK5_GUIDPPwjjPi
   .quad _ZN3AFX17CWEBBROWSEREVENTS6INVOKEEiPK5_GUIDjtP13tagDISPPARAMSP10tagVARIANTP12tagEXCEPINFOPj
   .align 8
   _ZTSN3AFX20AFX_IWINHTTPREQUEST_E:
   .quad 0x0 # 0
   .quad Lt_5895
   .quad _ZTSN3AFX14AFX_IDISPATCH_E
   .align 8
   _ZTVN3AFX20AFX_IWINHTTPREQUEST_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX20AFX_IWINHTTPREQUEST_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   _ZTSN3AFX26AFX_IWINHTTPREQUESTEVENTS_E:
   .quad 0x0 # 0
   .quad Lt_589D
   .quad _ZTSN3AFX13AFX_IUNKNOWN_E
   .align 8
   _ZTVN3AFX26AFX_IWINHTTPREQUESTEVENTS_E:
   .quad 0x0 # 0
   .quad _ZTSN3AFX26AFX_IWINHTTPREQUESTEVENTS_E
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .align 8
   Lt_2531:
   .ascii "\0\0"
   .align 8
   Lt_2749:
   .ascii "\164\0\145\0\170\0\164\0\57\0\150\0\164\0\155\0\154\0\0\0"
   .align 8
   Lt_27CC:
   .ascii "Shlwapi.dll\0"
   .align 8
   Lt_27D0:
   .ascii "PathMatchSpecExW\0"
   .align 8
   Lt_27DA:
   .ascii "UrlFixupW\0"
   .align 8
   Lt_29E8:
   .ascii " \0"
   .align 8
   Lt_2A07:
   .ascii "\120\0\101\0\124\0\110\0\0\0"
   .align 8
   Lt_2A09:
   .ascii "\72\0\57\0\134\0\0\0"
   .align 8
   Lt_2A11:
   .ascii "\116\0\101\0\115\0\105\0\0\0"
   .align 8
   Lt_2A16:
   .ascii ".\0"
   .align 8
   Lt_2A17:
   .ascii "\56\0\0\0"
   .align 8
   Lt_2A1F:
   .ascii "\116\0\101\0\115\0\105\0\130\0\0\0"
   .align 8
   Lt_2A27:
   .ascii "\105\0\130\0\124\0\116\0\0\0"
   .align 8
   Lt_2AC3:
   .ascii "\53\0\55\0\56\0\60\0\61\0\62\0\63\0\64\0\65\0\66\0\67\0\70\0\71\0\0\0"
   .align 8
   Lt_2AFA:
   .ascii ",\0"
   .align 8
   Lt_2B4D:
   .ascii "crypt32.dll\0"
   .align 8
   Lt_2B51:
   .ascii "CryptBinaryToStringA\0"
   .align 8
   Lt_2B59:
   .ascii "CryptBinaryToStringW\0"
   .align 8
   Lt_2B61:
   .ascii "CryptStringToBinaryA\0"
   .align 8
   Lt_2B69:
   .ascii "CryptStringToBinaryW\0"
   .align 8
   Lt_2B8A:
   .ascii "=\0"
   .align 8
   Lt_2B8C:
   .ascii "\75\0\0\0"
   .align 8
   Lt_2BC8:
   .ascii "\116\0\164\0\104\0\154\0\154\0\56\0\144\0\154\0\154\0\0\0"
   .align 8
   Lt_2BCC:
   .ascii "RtlGetVersion\0"
   .align 8
   Lt_2BEC:
   .ascii "\\\0"
   .align 8
   Lt_2BED:
   .ascii "\134\0\0\0"
   .align 8
   Lt_2BF3:
   .ascii "\103\0\117\0\115\0\103\0\124\0\114\0\63\0\62\0\56\0\104\0\114\0\114\0\0\0"
   .align 8
   Lt_2C5B:
   .ascii "\72\0\134\0\57\0\0\0"
   .align 8
   Lt_2C6C:
   .ascii "\134\0\57\0\0\0"
   .align 8
   Lt_2C90:
   .ascii "shell32.dll\0"
   .align 8
   Lt_2C94:
   .ascii "Control_RunDLLW\0"
   .align 8
   Lt_2C9D:
   .ascii "\124\0\115\0\120\0\0\0"
   .align 8
   Lt_2CAF:
   .ascii "\123\0\117\0\106\0\124\0\127\0\101\0\122\0\105\0\134\0\115\0\151\0\143\0\162\0\157\0\163\0\157\0\146\0\164\0\134\0\111\0\156\0\164\0\145\0\162\0\156\0\145\0\164\0\40\0\105\0\170\0\160\0\154\0\157\0\162\0\145\0\162\0\0\0"
   .align 8
   Lt_2CB3:
   .ascii "\126\0\145\0\162\0\163\0\151\0\157\0\156\0\0\0"
   .align 8
   Lt_2CB8:
   .ascii "\150\0\164\0\164\0\160\0\0\0"
   .align 8
   Lt_2CBA:
   .ascii "\157\0\160\0\145\0\156\0\0\0"
   .align 8
   Lt_2CD2:
   .ascii "\111\0\105\0\106\0\162\0\141\0\155\0\145\0\0\0"
   .align 8
   Lt_2CD7:
   .ascii "\115\0\157\0\172\0\151\0\154\0\154\0\141\0\127\0\151\0\156\0\144\0\157\0\167\0\103\0\154\0\141\0\163\0\163\0\0\0"
   .align 8
   Lt_2CDC:
   .ascii "\103\0\150\0\162\0\157\0\155\0\145\0\137\0\127\0\151\0\144\0\147\0\145\0\164\0\127\0\151\0\156\0\137\0\61\0\0\0"
   .align 8
   Lt_2CE1:
   .ascii "\155\0\141\0\151\0\154\0\164\0\157\0\0\0"
   .align 8
   Lt_2CF1:
   .ascii ":\0"
   .align 8
   Lt_2CF3:
   .ascii "\72\0\0\0"
   .align 8
   Lt_2CFA:
   .ascii "\72\0\134\0\0\0"
   .align 8
   Lt_2D0B:
   .ascii "||\0"
   .align 8
   Lt_2D0C:
   .ascii "|\0"
   .align 8
   Lt_2D0E:
   .ascii "\174\0\0\0"
   .align 8
   Lt_2D3A:
   .ascii "\40\0\0\0"
   .align 8
   Lt_2D3E:
   .ascii "\54\0\0\0"
   .align 8
   Lt_2D72:
   .ascii "\123\0\157\0\146\0\164\0\167\0\141\0\162\0\145\0\134\0\115\0\151\0\143\0\162\0\157\0\163\0\157\0\146\0\164\0\134\0\123\0\150\0\141\0\162\0\145\0\144\0\40\0\124\0\157\0\157\0\154\0\163\0\134\0\115\0\123\0\111\0\156\0\146\0\157\0\0\0"
   .align 8
   Lt_2D76:
   .ascii "\120\0\141\0\164\0\150\0\0\0"
   .align 8
   Lt_2D88:
   .ascii "RPCRT4.DLL\0"
   .align 8
   Lt_2D8C:
   .ascii "UuidCreateSequential\0"
   .align 8
   Lt_2D92:
   .ascii "-\0"
   .align 8
   Lt_2DA1:
   .ascii "\43\0\0\0"
   .align 8
   Lt_2E46:
   .ascii "\164\0\157\0\157\0\154\0\164\0\151\0\160\0\163\0\137\0\143\0\154\0\141\0\163\0\163\0\63\0\62\0\0\0"
   .align 8
   Lt_2E65:
   .ascii "user32.dll\0"
   .align 8
   Lt_2E68:
   .ascii "SetProcessDPIAware\0"
   .align 8
   Lt_2E6F:
   .ascii "IsProcessDPIAware\0"
   .align 8
   Lt_2E76:
   .ascii "\123\0\157\0\146\0\164\0\167\0\141\0\162\0\145\0\134\0\115\0\151\0\143\0\162\0\157\0\163\0\157\0\146\0\164\0\134\0\127\0\151\0\156\0\144\0\157\0\167\0\163\0\134\0\104\0\127\0\115\0\0\0"
   .align 8
   Lt_2E7C:
   .ascii "\125\0\163\0\145\0\104\0\160\0\151\0\123\0\143\0\141\0\154\0\151\0\156\0\147\0\0\0"
   .align 8
   Lt_2EA9:
   .ascii "Comctl32.dll\0"
   .align 8
   Lt_2EAD:
   .ascii "LoadIconMetric\0"
   .align 8
   Lt_2F20:
   .ascii "\104\0\111\0\123\0\120\0\114\0\101\0\131\0\0\0"
   .align 8
   Lt_348F:
   .ascii "\164\0\157\0\157\0\154\0\164\0\151\0\160\0\163\0\137\0\143\0\154\0\141\0\163\0\163\0\63\0\62\0\0\0"
   .align 8
   Lt_351B:
   .ascii "FBWindowClass\0"
   .align 8
   Lt_354A:
   .ascii "Segoe UI\0"
   .align 8
   Lt_354B:
   .ascii "Tahoma\0"
   .align 8
   Lt_3635:
   .ascii "BUTTON\0"
   .align 8
   Lt_3637:
   .ascii "\102\0\125\0\124\0\124\0\117\0\116\0\0\0"
   .align 8
   Lt_3649:
   .ascii "\103\0\125\0\123\0\124\0\117\0\115\0\102\0\125\0\124\0\124\0\117\0\116\0\0\0"
   .align 8
   Lt_364A:
   .ascii "\117\0\127\0\116\0\105\0\122\0\104\0\122\0\101\0\127\0\102\0\125\0\124\0\124\0\117\0\116\0\0\0"
   .align 8
   Lt_364B:
   .ascii "Button\0"
   .align 8
   Lt_364F:
   .ascii "RADIOBUTTON\0"
   .align 8
   Lt_3653:
   .ascii "\122\0\101\0\104\0\111\0\117\0\102\0\125\0\124\0\124\0\117\0\116\0\0\0"
   .align 8
   Lt_3654:
   .ascii "\117\0\120\0\124\0\111\0\117\0\116\0\0\0"
   .align 8
   Lt_365A:
   .ascii "CHECKBOX\0"
   .align 8
   Lt_365C:
   .ascii "\103\0\110\0\105\0\103\0\113\0\102\0\117\0\130\0\0\0"
   .align 8
   Lt_3662:
   .ascii "\103\0\110\0\105\0\103\0\113\0\63\0\123\0\124\0\101\0\124\0\105\0\0\0"
   .align 8
   Lt_3666:
   .ascii "LABEL\0"
   .align 8
   Lt_3668:
   .ascii "\114\0\101\0\102\0\105\0\114\0\0\0"
   .align 8
   Lt_3669:
   .ascii "Static\0"
   .align 8
   Lt_366F:
   .ascii "\102\0\111\0\124\0\115\0\101\0\120\0\114\0\101\0\102\0\105\0\114\0\0\0"
   .align 8
   Lt_3677:
   .ascii "\111\0\103\0\117\0\116\0\114\0\101\0\102\0\105\0\114\0\0\0"
   .align 8
   Lt_367F:
   .ascii "\102\0\111\0\124\0\115\0\101\0\120\0\102\0\125\0\124\0\124\0\117\0\116\0\0\0"
   .align 8
   Lt_3685:
   .ascii "\111\0\103\0\117\0\116\0\102\0\125\0\124\0\124\0\117\0\116\0\0\0"
   .align 8
   Lt_368B:
   .ascii "\103\0\125\0\123\0\124\0\117\0\115\0\114\0\101\0\102\0\105\0\114\0\0\0"
   .align 8
   Lt_3693:
   .ascii "\106\0\122\0\101\0\115\0\105\0\0\0"
   .align 8
   Lt_3694:
   .ascii "\106\0\122\0\101\0\115\0\105\0\127\0\111\0\116\0\104\0\117\0\127\0\0\0"
   .align 8
   Lt_369A:
   .ascii "GROUPBOX\0"
   .align 8
   Lt_369C:
   .ascii "\107\0\122\0\117\0\125\0\120\0\102\0\117\0\130\0\0\0"
   .align 8
   Lt_36A4:
   .ascii "\114\0\111\0\116\0\105\0\0\0"
   .align 8
   Lt_36AB:
   .ascii "TEXTBOX\0"
   .align 8
   Lt_36AE:
   .ascii "\105\0\104\0\111\0\124\0\0\0"
   .align 8
   Lt_36AF:
   .ascii "\124\0\105\0\130\0\124\0\102\0\117\0\130\0\0\0"
   .align 8
   Lt_36B0:
   .ascii "Edit\0"
   .align 8
   Lt_36BA:
   .ascii "\105\0\104\0\111\0\124\0\115\0\125\0\114\0\124\0\111\0\114\0\111\0\116\0\105\0\0\0"
   .align 8
   Lt_36BC:
   .ascii "\115\0\125\0\114\0\124\0\111\0\114\0\111\0\116\0\105\0\124\0\105\0\130\0\124\0\102\0\117\0\130\0\0\0"
   .align 8
   Lt_36C2:
   .ascii "COMBOBOX\0"
   .align 8
   Lt_36C4:
   .ascii "\103\0\117\0\115\0\102\0\117\0\102\0\117\0\130\0\0\0"
   .align 8
   Lt_36CE:
   .ascii "\103\0\117\0\115\0\102\0\117\0\102\0\117\0\130\0\105\0\130\0\0\0"
   .align 8
   Lt_36CF:
   .ascii "\103\0\117\0\115\0\102\0\117\0\102\0\117\0\130\0\105\0\130\0\63\0\62\0\0\0"
   .align 8
   Lt_36D0:
   .ascii "ComboBoxEx32\0"
   .align 8
   Lt_36D4:
   .ascii "LISTBOX\0"
   .align 8
   Lt_36D6:
   .ascii "\114\0\111\0\123\0\124\0\102\0\117\0\130\0\0\0"
   .align 8
   Lt_36DC:
   .ascii "PROGRESSBAR\0"
   .align 8
   Lt_36E0:
   .ascii "\120\0\122\0\117\0\107\0\122\0\105\0\123\0\123\0\102\0\101\0\122\0\0\0"
   .align 8
   Lt_36E2:
   .ascii "\115\0\123\0\103\0\124\0\114\0\123\0\137\0\120\0\122\0\117\0\107\0\122\0\105\0\123\0\123\0\63\0\62\0\0\0"
   .align 8
   Lt_36E3:
   .ascii "msctls_progress32\0"
   .align 8
   Lt_36EB:
   .ascii "\110\0\105\0\101\0\104\0\105\0\122\0\0\0"
   .align 8
   Lt_36EC:
   .ascii "\123\0\131\0\123\0\110\0\105\0\101\0\104\0\105\0\122\0\63\0\62\0\0\0"
   .align 8
   Lt_36ED:
   .ascii "SysHeader32\0"
   .align 8
   Lt_36F1:
   .ascii "TREEVIEW\0"
   .align 8
   Lt_36F5:
   .ascii "\124\0\122\0\105\0\105\0\126\0\111\0\105\0\127\0\0\0"
   .align 8
   Lt_36F6:
   .ascii "\123\0\131\0\123\0\124\0\122\0\105\0\105\0\126\0\111\0\105\0\127\0\63\0\62\0\0\0"
   .align 8
   Lt_36F7:
   .ascii "SysTreeView32\0"
   .align 8
   Lt_36FD:
   .ascii "LISTVIEW\0"
   .align 8
   Lt_3701:
   .ascii "\114\0\111\0\123\0\124\0\126\0\111\0\105\0\127\0\0\0"
   .align 8
   Lt_3702:
   .ascii "\123\0\131\0\123\0\114\0\111\0\123\0\124\0\126\0\111\0\105\0\127\0\63\0\62\0\0\0"
   .align 8
   Lt_3703:
   .ascii "SysListView32\0"
   .align 8
   Lt_370D:
   .ascii "\124\0\117\0\117\0\114\0\102\0\101\0\122\0\0\0"
   .align 8
   Lt_370E:
   .ascii "\124\0\117\0\117\0\114\0\102\0\101\0\122\0\127\0\111\0\116\0\104\0\117\0\127\0\63\0\62\0\0\0"
   .align 8
   Lt_370F:
   .ascii "ToolbarWindow32\0"
   .align 8
   Lt_3717:
   .ascii "\122\0\105\0\102\0\101\0\122\0\0\0"
   .align 8
   Lt_3718:
   .ascii "\122\0\105\0\102\0\101\0\122\0\127\0\111\0\116\0\104\0\117\0\127\0\63\0\62\0\0\0"
   .align 8
   Lt_3719:
   .ascii "ReBarWindow32\0"
   .align 8
   Lt_371D:
   .ascii "DATETIMEPICKER\0"
   .align 8
   Lt_3721:
   .ascii "\104\0\101\0\124\0\105\0\124\0\111\0\115\0\105\0\120\0\111\0\103\0\113\0\105\0\122\0\0\0"
   .align 8
   Lt_3723:
   .ascii "\123\0\131\0\123\0\104\0\101\0\124\0\105\0\124\0\111\0\115\0\105\0\120\0\111\0\103\0\113\0\63\0\62\0\0\0"
   .align 8
   Lt_3724:
   .ascii "SysDateTimePick32\0"
   .align 8
   Lt_3728:
   .ascii "MONTHCALENDAR\0"
   .align 8
   Lt_372D:
   .ascii "\115\0\117\0\116\0\124\0\110\0\103\0\101\0\114\0\105\0\116\0\104\0\101\0\122\0\0\0"
   .align 8
   Lt_372F:
   .ascii "\115\0\117\0\116\0\124\0\110\0\103\0\101\0\114\0\0\0"
   .align 8
   Lt_3730:
   .ascii "\123\0\131\0\123\0\115\0\117\0\116\0\124\0\110\0\103\0\101\0\114\0\63\0\62\0\0\0"
   .align 8
   Lt_3731:
   .ascii "SysMonthCal32\0"
   .align 8
   Lt_373B:
   .ascii "\111\0\120\0\101\0\104\0\104\0\122\0\105\0\123\0\123\0\0\0"
   .align 8
   Lt_373C:
   .ascii "\123\0\131\0\123\0\111\0\120\0\101\0\104\0\104\0\122\0\105\0\123\0\123\0\63\0\62\0\0\0"
   .align 8
   Lt_373D:
   .ascii "SysIPAddress32\0"
   .align 8
   Lt_3747:
   .ascii "\110\0\117\0\124\0\113\0\105\0\131\0\0\0"
   .align 8
   Lt_3748:
   .ascii "\115\0\123\0\103\0\124\0\114\0\123\0\137\0\110\0\117\0\124\0\113\0\105\0\131\0\63\0\62\0\0\0"
   .align 8
   Lt_3749:
   .ascii "msctls_hotkey32\0"
   .align 8
   Lt_3754:
   .ascii "\101\0\116\0\111\0\115\0\101\0\124\0\105\0\0\0"
   .align 8
   Lt_3756:
   .ascii "\101\0\116\0\111\0\115\0\101\0\124\0\111\0\117\0\116\0\0\0"
   .align 8
   Lt_3757:
   .ascii "\123\0\131\0\123\0\101\0\116\0\111\0\115\0\101\0\124\0\105\0\63\0\62\0\0\0"
   .align 8
   Lt_3758:
   .ascii "SysAnimate32\0"
   .align 8
   Lt_375E:
   .ascii "\123\0\131\0\123\0\114\0\111\0\116\0\113\0\0\0"
   .align 8
   Lt_3766:
   .ascii "\120\0\101\0\107\0\105\0\122\0\0\0"
   .align 8
   Lt_3767:
   .ascii "\123\0\131\0\123\0\120\0\101\0\107\0\105\0\122\0\0\0"
   .align 8
   Lt_3768:
   .ascii "SysPager\0"
   .align 8
   Lt_376D:
   .ascii "TABCONTROL\0"
   .align 8
   Lt_3771:
   .ascii "\124\0\101\0\102\0\0\0"
   .align 8
   Lt_3773:
   .ascii "\124\0\101\0\102\0\103\0\117\0\116\0\124\0\122\0\117\0\114\0\0\0"
   .align 8
   Lt_3774:
   .ascii "\123\0\131\0\123\0\124\0\101\0\102\0\103\0\117\0\116\0\124\0\122\0\117\0\114\0\63\0\62\0\0\0"
   .align 8
   Lt_3775:
   .ascii "SysTabControl32\0"
   .align 8
   Lt_377F:
   .ascii "\123\0\124\0\101\0\124\0\125\0\123\0\102\0\101\0\122\0\0\0"
   .align 8
   Lt_3781:
   .ascii "\115\0\123\0\103\0\124\0\114\0\123\0\137\0\123\0\124\0\101\0\124\0\125\0\123\0\102\0\101\0\122\0\63\0\62\0\0\0"
   .align 8
   Lt_3782:
   .ascii "msctls_statusbar32\0"
   .align 8
   Lt_378B:
   .ascii "\123\0\111\0\132\0\105\0\102\0\101\0\122\0\0\0"
   .align 8
   Lt_378D:
   .ascii "\123\0\111\0\132\0\105\0\102\0\117\0\130\0\0\0"
   .align 8
   Lt_378E:
   .ascii "\123\0\111\0\132\0\105\0\107\0\122\0\111\0\120\0\0\0"
   .align 8
   Lt_378F:
   .ascii "Scrollbar\0"
   .align 8
   Lt_3796:
   .ascii "\110\0\123\0\103\0\122\0\117\0\114\0\114\0\102\0\101\0\122\0\0\0"
   .align 8
   Lt_379C:
   .ascii "\126\0\123\0\103\0\122\0\117\0\114\0\114\0\102\0\101\0\122\0\0\0"
   .align 8
   Lt_37A5:
   .ascii "\124\0\122\0\101\0\103\0\113\0\102\0\101\0\122\0\0\0"
   .align 8
   Lt_37A8:
   .ascii "\115\0\123\0\103\0\124\0\114\0\123\0\137\0\124\0\122\0\101\0\103\0\113\0\102\0\101\0\122\0\63\0\62\0\0\0"
   .align 8
   Lt_37A9:
   .ascii "\123\0\114\0\111\0\104\0\105\0\122\0\0\0"
   .align 8
   Lt_37AA:
   .ascii "msctls_trackbar32\0"
   .align 8
   Lt_37AE:
   .ascii "UPDOWN\0"
   .align 8
   Lt_37B2:
   .ascii "\125\0\120\0\104\0\117\0\127\0\116\0\0\0"
   .align 8
   Lt_37B3:
   .ascii "\115\0\123\0\103\0\124\0\114\0\123\0\137\0\125\0\120\0\104\0\117\0\127\0\116\0\63\0\62\0\0\0"
   .align 8
   Lt_37B4:
   .ascii "msctls_updown32\0"
   .align 8
   Lt_37B8:
   .ascii "RICHEDIT\0"
   .align 8
   Lt_37B9:
   .ascii "RichEdit50W\0"
   .align 8
   Lt_37BC:
   .ascii "\122\0\111\0\103\0\110\0\105\0\104\0\111\0\124\0\0\0"
   .align 8
   Lt_37BD:
   .ascii "\122\0\151\0\143\0\150\0\105\0\144\0\151\0\164\0\65\0\60\0\127\0\0\0"
   .align 8
   Lt_37C3:
   .ascii "\115\0\123\0\106\0\124\0\105\0\104\0\111\0\124\0\56\0\104\0\114\0\114\0\0\0"
   .align 8
   Lt_37D7:
   .ascii "\123\0\131\0\123\0\104\0\101\0\124\0\105\0\124\0\111\0\115\0\105\0\120\0\111\0\103\0\113\0\63\0\62\0\0\0"
   .align 8
   Lt_37DE:
   .ascii "\115\0\123\0\103\0\124\0\114\0\123\0\137\0\120\0\122\0\117\0\107\0\122\0\105\0\123\0\123\0\63\0\62\0\0\0"
   .align 8
   Lt_37E3:
   .ascii "\115\0\123\0\103\0\124\0\114\0\123\0\137\0\124\0\122\0\101\0\103\0\113\0\102\0\101\0\122\0\63\0\62\0\0\0"
   .align 8
   Lt_3816:
   .ascii "\117\0\114\0\104\0\127\0\116\0\104\0\120\0\122\0\117\0\103\0\0\0"
   .align 8
   Lt_3899:
   .ascii "Label\0"
   .align 8
   Lt_389A:
   .ascii "\114\0\141\0\142\0\145\0\154\0\0\0"
   .align 8
   Lt_389D:
   .ascii "\105\0\144\0\151\0\164\0\0\0"
   .align 8
   Lt_389E:
   .ascii "\102\0\165\0\164\0\164\0\157\0\156\0\0\0"
   .align 8
   Lt_38A0:
   .ascii "\46\0\117\0\153\0\0\0"
   .align 8
   Lt_38A2:
   .ascii "\46\0\103\0\141\0\156\0\143\0\145\0\154\0\0\0"
   .align 8
   Lt_38A3:
   .ascii "\165\0\163\0\145\0\162\0\63\0\62\0\56\0\144\0\154\0\154\0\0\0"
   .align 8
   Lt_38A6:
   .ascii "&\0"
   .align 8
   Lt_38D0:
   .ascii "shlwapi.dll\0"
   .align 8
   Lt_38D1:
   .ascii "\163\0\150\0\154\0\167\0\141\0\160\0\151\0\56\0\144\0\154\0\154\0\0\0"
   .align 8
   Lt_38D7:
   .ascii "SHCreateStreamOnFileEx\0"
   .align 8
   Lt_398D:
   .ascii "Success\0"
   .align 8
   Lt_398F:
   .ascii "Error &h\0"
   .align 8
   Lt_3996:
   .ascii ": Null pointer\0"
   .align 8
   Lt_399A:
   .ascii ": Invalid argument\0"
   .align 8
   Lt_399E:
   .ascii ": Unable to perform requested operation\0"
   .align 8
   Lt_39A2:
   .ascii ": File not found\0"
   .align 8
   Lt_39A6:
   .ascii ": Path not found\0"
   .align 8
   Lt_39AA:
   .ascii ": Too many open files\0"
   .align 8
   Lt_39AE:
   .ascii ": Access denied\0"
   .align 8
   Lt_39B2:
   .ascii ": Invalid handle\0"
   .align 8
   Lt_39B6:
   .ascii ": Insufficient memory\0"
   .align 8
   Lt_39BA:
   .ascii ": Invalid pointer\0"
   .align 8
   Lt_39BE:
   .ascii ": No more files\0"
   .align 8
   Lt_39C2:
   .ascii ": Disk write protected\0"
   .align 8
   Lt_39C6:
   .ascii ": Seek error\0"
   .align 8
   Lt_39CA:
   .ascii ": Write fault\0"
   .align 8
   Lt_39CE:
   .ascii ": Read fault\0"
   .align 8
   Lt_39D2:
   .ascii ": Share violation\0"
   .align 8
   Lt_39D6:
   .ascii ": Lock violation\0"
   .align 8
   Lt_39DA:
   .ascii ": File already exists\0"
   .align 8
   Lt_39DE:
   .ascii ": Invalid parameter\0"
   .align 8
   Lt_39E2:
   .ascii ": Medium full\0"
   .align 8
   Lt_39E6:
   .ascii ": Property set mismatched\0"
   .align 8
   Lt_39EA:
   .ascii ": Abnormal API call exit\0"
   .align 8
   Lt_39EE:
   .ascii ": Invalid header\0"
   .align 8
   Lt_39F2:
   .ascii ": Invalid name\0"
   .align 8
   Lt_39F6:
   .ascii ": Unknown error\0"
   .align 8
   Lt_39FA:
   .ascii ": Unimplemented function\0"
   .align 8
   Lt_39FE:
   .ascii ": Invalid flag\0"
   .align 8
   Lt_3A02:
   .ascii ": Object is busy\0"
   .align 8
   Lt_3A06:
   .ascii ": The storage has been changed since the last commit\0"
   .align 8
   Lt_3A0A:
   .ascii ": The object has ceased to exist\0"
   .align 8
   Lt_3A0E:
   .ascii ": Can't save\0"
   .align 8
   Lt_3A12:
   .ascii ": The compound file was produced with an incompatible version of storage\0"
   .align 8
   Lt_3A16:
   .ascii ": The compound file was produced with a newer version of storage\0"
   .align 8
   Lt_3A1A:
   .ascii ": Share.exe or equivalent is required for operation\0"
   .align 8
   Lt_3A1E:
   .ascii ": Illegal operation called on non-file based storage\0"
   .align 8
   Lt_3A22:
   .ascii ": Illegal operation called on object with extant marshallings\0"
   .align 8
   Lt_3A26:
   .ascii ": The docfile has been corrupted\0"
   .align 8
   Lt_3A2A:
   .ascii ": OLE32.DLL has been loaded at the wrong address\0"
   .align 8
   Lt_3A2E:
   .ascii ": The compound file is too large for the current implementation\0"
   .align 8
   Lt_3A32:
   .ascii ": The compound file was not created with the STGM_SIMPLE flag\0"
   .align 8
   Lt_3A36:
   .ascii ": The file download was aborted abnormally. The file is incomplete.\0"
   .align 8
   Lt_3A3A:
   .ascii ": The file download has been terminated\0"
   .align 8
   Lt_3A3E:
   .ascii ": The underlying file was converted to compound file format\0"
   .align 8
   Lt_3A42:
   .ascii ": The storage operation should block until more data is available\0"
   .align 8
   Lt_3A46:
   .ascii ": The storage operation should retry immediately\0"
   .align 8
   Lt_3A4A:
   .ascii ": The notified event sink will not influence the storage operation\0"
   .align 8
   Lt_3A4E:
   .ascii ": Multiple opens prevent consolidated. (commit succeeded).\0"
   .align 8
   Lt_3A52:
   .ascii ": Consolidation of the storage file failed. (commit succeeded).\0"
   .align 8
   Lt_3A56:
   .ascii ": Consolidation of the storage file is inappropriate. (commit succeeded).\0"
   .align 8
   Lt_3A5A:
   .ascii ": Generic Copy Protection Error\0"
   .align 8
   Lt_3A5E:
   .ascii ": Copy Protection Error - DVD CSS Authentication failed.\0"
   .align 8
   Lt_3A62:
   .ascii ": Copy Protection Error - The given sector does not have a valid CSS key\0"
   .align 8
   Lt_3A66:
   .ascii ": Copy Protection Error - DVD session key not established\0"
   .align 8
   Lt_3A6A:
   .ascii ": Copy Protection Error - The read failed because the sector is encrypted\0"
   .align 8
   Lt_3A6E:
   .ascii ": Copy Protection Error - The current DVD's region does not correspond to the region setting of the drive\0"
   .align 8
   Lt_3A72:
   .ascii ": Copy Protection Error - The drive's region setting may be permanent or the number of user resets has been exhausted\0"
   .align 8
   Lt_3A75:
   .ascii "Unknown error\0"
   .align 8
   Lt_3A7E:
   .ascii "SHCreateMemStream\0"
   .align 8
   Lt_3BAB:
   .ascii "N3AFX13AFX_IUNKNOWN_E\0"
   .align 8
   Lt_3BB3:
   .ascii "N3AFX14AFX_IDISPATCH_E\0"
   .align 8
   Lt_3BBB:
   .ascii "N3AFX16AFX_IDICTIONARY_E\0"
   .align 8
   Lt_3BC3:
   .ascii "N3AFX16AFX_IFILESYSTEM_E\0"
   .align 8
   Lt_3BCB:
   .ascii "N3AFX21AFX_IDRIVECOLLECTION_E\0"
   .align 8
   Lt_3BD3:
   .ascii "N3AFX11AFX_IDRIVE_E\0"
   .align 8
   Lt_3BDB:
   .ascii "N3AFX12AFX_IFOLDER_E\0"
   .align 8
   Lt_3BE3:
   .ascii "N3AFX22AFX_IFOLDERCOLLECTION_E\0"
   .align 8
   Lt_3BEB:
   .ascii "N3AFX20AFX_IFILECOLLECTION_E\0"
   .align 8
   Lt_3BF3:
   .ascii "N3AFX10AFX_IFILE_E\0"
   .align 8
   Lt_3BFB:
   .ascii "N3AFX16AFX_ITEXTSTREAM_E\0"
   .align 8
   Lt_3C03:
   .ascii "N3AFX17AFX_IFILESYSTEM3_E\0"
   .align 8
   Lt_3C0B:
   .ascii "N3AFX19AFX_ISCRIPTENCODER_E\0"
   .align 8
   Lt_3C3D:
   .ascii ": Bad file name or number\0"
   .align 8
   Lt_3C42:
   .ascii ": Bad file mode\0"
   .align 8
   Lt_3C45:
   .ascii ": File is already open\0"
   .align 8
   Lt_3C48:
   .ascii ": Device I/O error\0"
   .align 8
   Lt_3C4D:
   .ascii ": Disk space is full\0"
   .align 8
   Lt_3C50:
   .ascii ": Input beyond the end of the file\0"
   .align 8
   Lt_3C53:
   .ascii ": Too many files\0"
   .align 8
   Lt_3C56:
   .ascii ": Device not available\0"
   .align 8
   Lt_3C59:
   .ascii ": Permission denied\0"
   .align 8
   Lt_3C5C:
   .ascii ": Disk not ready\0"
   .align 8
   Lt_3C5F:
   .ascii ": Cannot rename with different drive\0"
   .align 8
   Lt_3C62:
   .ascii ": Path/file access error\0"
   .align 8
   Lt_3CF6:
   .ascii "*.*\0"
   .align 8
   Lt_3D02:
   .ascii "\56\0\56\0\0\0"
   .align 8
   Lt_3D5A:
   .ascii "file://\0"
   .align 8
   Lt_3EAC:
   .ascii ";\0"
   .align 8
   Lt_3FAB:
   .ascii "\115\0\115\0\115\0\115\0\0\0"
   .align 8
   Lt_3FB6:
   .ascii "\115\0\115\0\115\0\0\0"
   .align 8
   Lt_3FC3:
   .ascii "\144\0\144\0\144\0\144\0\0\0"
   .align 8
   Lt_3FCD:
   .ascii "\144\0\144\0\144\0\0\0"
   .align 8
   Lt_42E0:
   .ascii "\107\0\104\0\111\0\120\0\114\0\125\0\123\0\56\0\104\0\114\0\114\0\0\0"
   .align 8
   Lt_42E4:
   .ascii "Unknown\0"
   .align 8
   Lt_42E8:
   .ascii "Ok\0"
   .align 8
   Lt_42EB:
   .ascii "Generic error\0"
   .align 8
   Lt_42EE:
   .ascii "Invalid parameter\0"
   .align 8
   Lt_42F1:
   .ascii "Out of memory\0"
   .align 8
   Lt_42F4:
   .ascii "Object busy\0"
   .align 8
   Lt_42F7:
   .ascii "Insufficient buffer\0"
   .align 8
   Lt_42FA:
   .ascii "Not implemented\0"
   .align 8
   Lt_42FD:
   .ascii "Win 32 error\0"
   .align 8
   Lt_4300:
   .ascii "Wrong state\0"
   .align 8
   Lt_4303:
   .ascii "Aborted\0"
   .align 8
   Lt_4306:
   .ascii "File not found\0"
   .align 8
   Lt_4309:
   .ascii "Value overflow\0"
   .align 8
   Lt_430C:
   .ascii "Access denied\0"
   .align 8
   Lt_430F:
   .ascii "Unknown image format\0"
   .align 8
   Lt_4312:
   .ascii "Font family not found\0"
   .align 8
   Lt_4315:
   .ascii "Font style not found\0"
   .align 8
   Lt_4318:
   .ascii "Not TrueType font\0"
   .align 8
   Lt_431B:
   .ascii "Unsupported GdiPlus version\0"
   .align 8
   Lt_431E:
   .ascii "GdiPlus not initialized\0"
   .align 8
   Lt_4321:
   .ascii "Property not found\0"
   .align 8
   Lt_4324:
   .ascii "Property not supported\0"
   .align 8
   Lt_43E3:
   .ascii "\151\0\155\0\141\0\147\0\145\0\57\0\142\0\155\0\160\0\0\0"
   .align 8
   Lt_43E7:
   .ascii "\151\0\155\0\141\0\147\0\145\0\57\0\152\0\160\0\145\0\147\0\0\0"
   .align 8
   Lt_43EB:
   .ascii "\151\0\155\0\141\0\147\0\145\0\57\0\160\0\156\0\147\0\0\0"
   .align 8
   Lt_43EF:
   .ascii "\151\0\155\0\141\0\147\0\145\0\57\0\147\0\151\0\146\0\0\0"
   .align 8
   Lt_43F3:
   .ascii "\151\0\155\0\141\0\147\0\145\0\57\0\164\0\151\0\146\0\146\0\0\0"
   .align 8
   Lt_4407:
   .ascii "\127\0\111\0\116\0\104\0\117\0\127\0\123\0\0\0"
   .align 8
   Lt_4409:
   .ascii "\104\0\105\0\126\0\111\0\103\0\105\0\0\0"
   .align 8
   Lt_441B:
   .ascii "Printing bitmap\0"
   .align 8
   Lt_4442:
   .ascii "1\0"
   .align 8
   Lt_4590:
   .ascii "UuidCreate\0"
   .align 8
   Lt_459C:
   .ascii "\173\0\0\0"
   .align 8
   Lt_45B4:
   .ascii "DllGetClassObject\0"
   .align 8
   Lt_461F:
   .ascii "propsys.dll\0"
   .align 8
   Lt_4623:
   .ascii "VariantGetElementCount\0"
   .align 8
   Lt_462B:
   .ascii "VariantToBuffer\0"
   .align 8
   Lt_4633:
   .ascii "VariantToString\0"
   .align 8
   Lt_463B:
   .ascii "VariantToStringWithDefault\0"
   .align 8
   Lt_4643:
   .ascii "VariantToStringAlloc\0"
   .align 8
   Lt_465A:
   .ascii "0000\0"
   .align 8
   Lt_465D:
   .ascii "0\0"
   .align 8
   Lt_4660:
   .ascii "0.0000\0"
   .align 8
   Lt_47D6:
   .ascii "InitVariantFromResource\0"
   .align 8
   Lt_47DE:
   .ascii "InitVariantFromBuffer\0"
   .align 8
   Lt_47E6:
   .ascii "InitVariantFromGUIDAsString\0"
   .align 8
   Lt_47EE:
   .ascii "InitVariantFromFileTime\0"
   .align 8
   Lt_47F6:
   .ascii "InitVariantFromFileTimeArray\0"
   .align 8
   Lt_47FE:
   .ascii "InitVariantFromStrRet\0"
   .align 8
   Lt_4806:
   .ascii "InitVariantFromVariantArrayElem\0"
   .align 8
   Lt_480E:
   .ascii "InitVariantFromBooleanArray\0"
   .align 8
   Lt_4816:
   .ascii "InitVariantFromInt16Array\0"
   .align 8
   Lt_481E:
   .ascii "InitVariantFromUInt16Array\0"
   .align 8
   Lt_4826:
   .ascii "InitVariantFromInt32Array\0"
   .align 8
   Lt_482E:
   .ascii "InitVariantFromUInt32Array\0"
   .align 8
   Lt_4836:
   .ascii "InitVariantFromInt64Array\0"
   .align 8
   Lt_483E:
   .ascii "InitVariantFromUInt64Array\0"
   .align 8
   Lt_4846:
   .ascii "InitVariantFromDoubleArray\0"
   .align 8
   Lt_484E:
   .ascii "InitVariantFromStringArray\0"
   .align 8
   Lt_4856:
   .ascii "VariantToBoolean\0"
   .align 8
   Lt_485E:
   .ascii "VariantToBooleanWithDefault\0"
   .align 8
   Lt_4866:
   .ascii "VariantToInt16\0"
   .align 8
   Lt_486C:
   .ascii "VariantToInt16WithDefault\0"
   .align 8
   Lt_4874:
   .ascii "VariantToUInt16\0"
   .align 8
   Lt_487C:
   .ascii "VariantToUInt16WithDefault\0"
   .align 8
   Lt_4884:
   .ascii "VariantToInt32\0"
   .align 8
   Lt_488C:
   .ascii "VariantToInt32WithDefault\0"
   .align 8
   Lt_4894:
   .ascii "VariantToUInt32\0"
   .align 8
   Lt_489C:
   .ascii "VariantToUInt32WithDefault\0"
   .align 8
   Lt_48A4:
   .ascii "VariantToInt64\0"
   .align 8
   Lt_48AC:
   .ascii "VariantToInt64WithDefault\0"
   .align 8
   Lt_48B4:
   .ascii "VariantToUInt64\0"
   .align 8
   Lt_48BC:
   .ascii "VariantToUInt64WithDefault\0"
   .align 8
   Lt_48C4:
   .ascii "VariantToDouble\0"
   .align 8
   Lt_48CC:
   .ascii "VariantToDoubleWithDefault\0"
   .align 8
   Lt_48D4:
   .ascii "VariantToGUID\0"
   .align 8
   Lt_48DC:
   .ascii "VariantToDosDateTime\0"
   .align 8
   Lt_48E4:
   .ascii "VariantToStrRet\0"
   .align 8
   Lt_48EC:
   .ascii "VariantToFileTime\0"
   .align 8
   Lt_48F4:
   .ascii "VariantToBooleanArray\0"
   .align 8
   Lt_48FC:
   .ascii "VariantToBooleanArrayAlloc\0"
   .align 8
   Lt_4904:
   .ascii "VariantToInt16Array\0"
   .align 8
   Lt_490C:
   .ascii "VariantToInt16ArrayAlloc\0"
   .align 8
   Lt_4914:
   .ascii "VariantToUInt16Array\0"
   .align 8
   Lt_491C:
   .ascii "VariantToUInt16ArrayAlloc\0"
   .align 8
   Lt_4924:
   .ascii "VariantToInt32Array\0"
   .align 8
   Lt_492C:
   .ascii "VariantToInt32ArrayAlloc\0"
   .align 8
   Lt_4934:
   .ascii "VariantToUInt32Array\0"
   .align 8
   Lt_493C:
   .ascii "VariantToUInt32ArrayAlloc\0"
   .align 8
   Lt_4944:
   .ascii "VariantToInt64Array\0"
   .align 8
   Lt_494C:
   .ascii "VariantToInt64ArrayAlloc\0"
   .align 8
   Lt_4954:
   .ascii "VariantToUInt64Array\0"
   .align 8
   Lt_495C:
   .ascii "VariantToUInt64ArrayAlloc\0"
   .align 8
   Lt_4964:
   .ascii "VariantToDoubleArray\0"
   .align 8
   Lt_496C:
   .ascii "VariantToDoubleArrayAlloc\0"
   .align 8
   Lt_4974:
   .ascii "VariantToStringArray\0"
   .align 8
   Lt_497C:
   .ascii "VariantToStringArrayAlloc\0"
   .align 8
   Lt_4984:
   .ascii "VariantGetBooleanElem\0"
   .align 8
   Lt_498C:
   .ascii "VariantGetInt16Elem\0"
   .align 8
   Lt_4994:
   .ascii "VariantGetUInt16Elem\0"
   .align 8
   Lt_499C:
   .ascii "VariantGetInt32Elem\0"
   .align 8
   Lt_49A4:
   .ascii "VariantGetUInt32Elem\0"
   .align 8
   Lt_49AC:
   .ascii "VariantGetInt64Elem\0"
   .align 8
   Lt_49B4:
   .ascii "VariantGetUInt64Elem\0"
   .align 8
   Lt_49BC:
   .ascii "VariantGetDoubleElem\0"
   .align 8
   Lt_49C4:
   .ascii "VariantGetStringElem\0"
   .align 8
   Lt_49CC:
   .ascii "ClearVariantArray\0"
   .align 8
   Lt_49D4:
   .ascii "VariantCompare\0"
   .align 8
   Lt_49DC:
   .ascii "PropVariantToVariant\0"
   .align 8
   Lt_49E4:
   .ascii "VariantToPropVariant\0"
   .align 8
   Lt_4A74:
   .ascii "AFX_XPBUTTON\0"
   .align 8
   Lt_4AF9:
   .ascii "\110\0\117\0\124\0\0\0"
   .align 8
   Lt_4CA0:
   .ascii "_\0"
   .align 8
   Lt_4D39:
   .ascii "\137\0\0\0"
   .align 8
   Lt_4F3B:
   .ascii "AFX_GDIPIMAGECTX\0"
   .align 8
   Lt_5029:
   .ascii "N3AFX16AFX_IWEBBROWSER_E\0"
   .align 8
   Lt_5031:
   .ascii "N3AFX19AFX_IWEBBROWSERAPP_E\0"
   .align 8
   Lt_5039:
   .ascii "N3AFX17AFX_IWEBBROWSER2_E\0"
   .align 8
   Lt_5041:
   .ascii "N3AFX18AFX_ISHELLWINDOWS_E\0"
   .align 8
   Lt_5049:
   .ascii "N3AFX19AFX_ISHELLUIHELPER_E\0"
   .align 8
   Lt_5051:
   .ascii "N3AFX20AFX_ISHELLUIHELPER2_E\0"
   .align 8
   Lt_5059:
   .ascii "N3AFX20AFX_ISHELLUIHELPER3_E\0"
   .align 8
   Lt_5061:
   .ascii "N3AFX29AFX_ISHELLFAVORITESNAMESPACE_E\0"
   .align 8
   Lt_5069:
   .ascii "N3AFX20AFX_ISHELLNAMESPACE_E\0"
   .align 8
   Lt_5071:
   .ascii "N3AFX21AFX_ISCRIPTERRORLIST_E\0"
   .align 8
   Lt_507B:
   .ascii "shdocvw.dll\0"
   .align 8
   Lt_507F:
   .ascii "AddUrlToFavorites\0"
   .align 8
   Lt_5087:
   .ascii "DoAddToFavDlg\0"
   .align 8
   Lt_508F:
   .ascii "DoOrganizeFavDlg\0"
   .align 8
   Lt_5094:
   .ascii "inetcpl.cpl\0"
   .align 8
   Lt_5098:
   .ascii "LaunchConnectionDialog\0"
   .align 8
   Lt_50A0:
   .ascii "LaunchInternetControlPanel\0"
   .align 8
   Lt_50A8:
   .ascii "LaunchPrivacyDialog\0"
   .align 8
   Lt_50B0:
   .ascii "LaunchSecurityDialog\0"
   .align 8
   Lt_50B3:
   .ascii "CAxHost\0"
   .align 8
   Lt_50B4:
   .ascii "N3AFX15AFX_IOLEOBJECT_E\0"
   .align 8
   Lt_50BC:
   .ascii "N3AFX22AFX_IOLEINPLACEOBJECT_E\0"
   .align 8
   Lt_50C4:
   .ascii "N3AFX19AFX_IOLECLIENTSITE_E\0"
   .align 8
   Lt_50CC:
   .ascii "N3AFX28AFX_IOLEINPLACEACTIVEOBJECT_E\0"
   .align 8
   Lt_50D4:
   .ascii "N3AFX21AFX_ISERVICEPROVIDER_E\0"
   .align 8
   Lt_50DC:
   .ascii "N3AFX22AFX_IPARSEDISPLAYNAME_E\0"
   .align 8
   Lt_50E4:
   .ascii "N3AFX18AFX_IOLECONTAINER_E\0"
   .align 8
   Lt_50EC:
   .ascii "N3AFX15AFX_IOLEWINDOW_E\0"
   .align 8
   Lt_50F4:
   .ascii "N3AFX20AFX_IOLEINPLACESITE_E\0"
   .align 8
   Lt_50FC:
   .ascii "N3AFX22AFX_IOLEINPLACESITEEX_E\0"
   .align 8
   Lt_5104:
   .ascii "N3AFX24AFX_IOLEINPLACEUIWINDOW_E\0"
   .align 8
   Lt_510C:
   .ascii "N3AFX21AFX_IOLEINPLACEFRAME_E\0"
   .align 8
   Lt_5114:
   .ascii "N3AFX20AFX_IOLECONTROLSITE_E\0"
   .align 8
   Lt_511C:
   .ascii "N3AFX21AFX_ISIMPLEFRAMESITE_E\0"
   .align 8
   Lt_512A:
   .ascii "N3AFX17CAXHOST_IDISPATCHE\0"
   .align 8
   Lt_5178:
   .ascii "N3AFX22CAXHOST_IOLECLIENTSITEE\0"
   .align 8
   Lt_51A5:
   .ascii "N3AFX23CAXHOST_IOLECONTROLSITEE\0"
   .align 8
   Lt_51DA:
   .ascii "N3AFX24CAXHOST_IOLEINPLACEFRAMEE\0"
   .align 8
   Lt_5222:
   .ascii "N3AFX23CAXHOST_IOLEINPLACESITEE\0"
   .align 8
   Lt_5275:
   .ascii "N3AFX24CAXHOST_ISERVICEPROVIDERE\0"
   .align 8
   Lt_534B:
   .ascii "\123\0\145\0\147\0\157\0\145\0\40\0\125\0\111\0\0\0"
   .align 8
   Lt_534C:
   .ascii "\124\0\141\0\150\0\157\0\155\0\141\0\0\0"
   .align 8
   Lt_5396:
   .ascii "IID_IUnknown\0"
   .align 8
   Lt_5398:
   .ascii "IID_IDispatch\0"
   .align 8
   Lt_539A:
   .ascii "IID_IAdviseSink\0"
   .align 8
   Lt_539C:
   .ascii "IID_IErrorInfo\0"
   .align 8
   Lt_539E:
   .ascii "IID_IOleClientSite\0"
   .align 8
   Lt_53A0:
   .ascii "IID_IOleContainer\0"
   .align 8
   Lt_53A2:
   .ascii "IID_IOleControl\0"
   .align 8
   Lt_53A4:
   .ascii "IID_IOleControlSite\0"
   .align 8
   Lt_53A6:
   .ascii "IID_IOleDocumentSite\0"
   .align 8
   Lt_53A8:
   .ascii "IID_IOleInPlaceActiveObject\0"
   .align 8
   Lt_53AA:
   .ascii "IID_IOleInPlaceFrame\0"
   .align 8
   Lt_53AC:
   .ascii "IID_IOleInPlaceObject\0"
   .align 8
   Lt_53AE:
   .ascii "IID_IOleInPlaceObjectWindowless\0"
   .align 8
   Lt_53B0:
   .ascii "IID_IOleInPlaceSite\0"
   .align 8
   Lt_53B2:
   .ascii "IID_IOleInPlaceSiteEx\0"
   .align 8
   Lt_53B4:
   .ascii "IID_IOleInPlaceUIWindow\0"
   .align 8
   Lt_53B6:
   .ascii "IID_IOleObject\0"
   .align 8
   Lt_53B8:
   .ascii "IID_IOleWindow\0"
   .align 8
   Lt_53BA:
   .ascii "IID_IParseDisplayName\0"
   .align 8
   Lt_53BC:
   .ascii "IID_IPersistStreamInit\0"
   .align 8
   Lt_53BE:
   .ascii "IID_IPropertyNotifySink\0"
   .align 8
   Lt_53C0:
   .ascii "IID_IServiceProvider\0"
   .align 8
   Lt_53C2:
   .ascii "IID_ISimpleFrameSite\0"
   .align 8
   Lt_53FC:
   .ascii "\103\0\101\0\170\0\110\0\157\0\163\0\164\0\0\0"
   .align 8
   Lt_5436:
   .ascii "N3AFX18CDOCHOSTUIHANDLER2E\0"
   .align 8
   Lt_549C:
   .ascii "N3AFX20CHTMLDOCUMENTEVENTS2E\0"
   .align 8
   Lt_54D2:
   .ascii "N3AFX17CWEBBROWSEREVENTSE\0"
   .align 8
   Lt_5583:
   .ascii "\123\0\150\0\145\0\154\0\154\0\56\0\105\0\170\0\160\0\154\0\157\0\162\0\145\0\162\0\0\0"
   .align 8
   Lt_558A:
   .ascii "\141\0\142\0\157\0\165\0\164\0\72\0\142\0\154\0\141\0\156\0\153\0\0\0"
   .align 8
   Lt_55DA:
   .ascii "\163\0\164\0\141\0\164\0\165\0\163\0\164\0\145\0\170\0\164\0\143\0\150\0\141\0\156\0\147\0\145\0\0\0"
   .align 8
   Lt_55E1:
   .ascii "\144\0\157\0\167\0\156\0\154\0\157\0\141\0\144\0\143\0\157\0\155\0\160\0\154\0\145\0\164\0\145\0\0\0"
   .align 8
   Lt_55E8:
   .ascii "\143\0\157\0\155\0\155\0\141\0\156\0\144\0\163\0\164\0\141\0\164\0\145\0\143\0\150\0\141\0\156\0\147\0\145\0\0\0"
   .align 8
   Lt_55EE:
   .ascii "\144\0\157\0\167\0\156\0\154\0\157\0\141\0\144\0\142\0\145\0\147\0\151\0\156\0\0\0"
   .align 8
   Lt_55F4:
   .ascii "\160\0\162\0\157\0\147\0\162\0\145\0\163\0\163\0\143\0\150\0\141\0\156\0\147\0\145\0\0\0"
   .align 8
   Lt_55FA:
   .ascii "\160\0\162\0\157\0\160\0\145\0\162\0\164\0\171\0\143\0\150\0\141\0\156\0\147\0\145\0\0\0"
   .align 8
   Lt_5600:
   .ascii "\164\0\151\0\164\0\154\0\145\0\143\0\150\0\141\0\156\0\147\0\145\0\0\0"
   .align 8
   Lt_5607:
   .ascii "\160\0\162\0\151\0\156\0\164\0\164\0\145\0\155\0\160\0\154\0\141\0\164\0\145\0\151\0\156\0\163\0\164\0\141\0\156\0\164\0\151\0\141\0\164\0\151\0\157\0\156\0\0\0"
   .align 8
   Lt_560E:
   .ascii "\160\0\162\0\151\0\156\0\164\0\164\0\145\0\155\0\160\0\154\0\141\0\164\0\145\0\164\0\145\0\141\0\162\0\144\0\157\0\167\0\156\0\0\0"
   .align 8
   Lt_5614:
   .ascii "\142\0\145\0\146\0\157\0\162\0\145\0\156\0\141\0\166\0\151\0\147\0\141\0\164\0\145\0\62\0\0\0"
   .align 8
   Lt_561B:
   .ascii "\156\0\141\0\166\0\151\0\147\0\141\0\164\0\145\0\143\0\157\0\155\0\160\0\154\0\145\0\164\0\145\0\62\0\0\0"
   .align 8
   Lt_5621:
   .ascii "\157\0\156\0\166\0\151\0\163\0\151\0\142\0\154\0\145\0\0\0"
   .align 8
   Lt_5628:
   .ascii "\144\0\157\0\143\0\165\0\155\0\145\0\156\0\164\0\143\0\157\0\155\0\160\0\154\0\145\0\164\0\145\0\0\0"
   .align 8
   Lt_562F:
   .ascii "\167\0\151\0\156\0\144\0\157\0\167\0\163\0\145\0\164\0\162\0\145\0\163\0\151\0\172\0\141\0\142\0\154\0\145\0\0\0"
   .align 8
   Lt_5635:
   .ascii "\167\0\151\0\156\0\144\0\157\0\167\0\143\0\154\0\157\0\163\0\151\0\156\0\147\0\0\0"
   .align 8
   Lt_563B:
   .ascii "\167\0\151\0\156\0\144\0\157\0\167\0\163\0\145\0\164\0\154\0\145\0\146\0\164\0\0\0"
   .align 8
   Lt_5641:
   .ascii "\167\0\151\0\156\0\144\0\157\0\167\0\163\0\145\0\164\0\164\0\157\0\160\0\0\0"
   .align 8
   Lt_5647:
   .ascii "\167\0\151\0\156\0\144\0\157\0\167\0\163\0\145\0\164\0\167\0\151\0\144\0\164\0\150\0\0\0"
   .align 8
   Lt_564D:
   .ascii "\167\0\151\0\156\0\144\0\157\0\167\0\163\0\145\0\164\0\150\0\145\0\151\0\147\0\150\0\164\0\0\0"
   .align 8
   Lt_5654:
   .ascii "\143\0\154\0\151\0\145\0\156\0\164\0\164\0\157\0\150\0\157\0\163\0\164\0\167\0\151\0\156\0\144\0\157\0\167\0\0\0"
   .align 8
   Lt_565B:
   .ascii "\163\0\145\0\164\0\163\0\145\0\143\0\165\0\162\0\145\0\154\0\157\0\143\0\153\0\151\0\143\0\157\0\156\0\0\0"
   .align 8
   Lt_5661:
   .ascii "\146\0\151\0\154\0\145\0\144\0\157\0\167\0\156\0\154\0\157\0\141\0\144\0\0\0"
   .align 8
   Lt_5667:
   .ascii "\156\0\141\0\166\0\151\0\147\0\141\0\164\0\145\0\145\0\162\0\162\0\157\0\162\0\0\0"
   .align 8
   Lt_566E:
   .ascii "\160\0\162\0\151\0\166\0\141\0\143\0\171\0\151\0\155\0\160\0\141\0\143\0\164\0\145\0\144\0\163\0\164\0\141\0\164\0\145\0\143\0\150\0\141\0\156\0\147\0\145\0\0\0"
   .align 8
   Lt_5674:
   .ascii "\156\0\145\0\167\0\167\0\151\0\156\0\144\0\157\0\167\0\62\0\0\0"
   .align 8
   Lt_567A:
   .ascii "\156\0\145\0\167\0\167\0\151\0\156\0\144\0\157\0\167\0\63\0\0\0"
   .align 8
   Lt_5681:
   .ascii "\167\0\151\0\156\0\144\0\157\0\167\0\163\0\164\0\141\0\164\0\145\0\143\0\150\0\141\0\156\0\147\0\145\0\144\0\0\0"
   .align 8
   Lt_5688:
   .ascii "\150\0\164\0\155\0\154\0\144\0\157\0\143\0\165\0\155\0\145\0\156\0\164\0\145\0\166\0\145\0\156\0\164\0\163\0\0\0"
   .align 8
   Lt_5698:
   .ascii "\163\0\150\0\157\0\167\0\143\0\157\0\156\0\164\0\145\0\170\0\164\0\155\0\145\0\156\0\165\0\0\0"
   .align 8
   Lt_569E:
   .ascii "\147\0\145\0\164\0\150\0\157\0\163\0\164\0\151\0\156\0\146\0\157\0\0\0"
   .align 8
   Lt_56A4:
   .ascii "\163\0\150\0\157\0\167\0\165\0\151\0\0\0"
   .align 8
   Lt_56AA:
   .ascii "\150\0\151\0\144\0\145\0\165\0\151\0\0\0"
   .align 8
   Lt_56B0:
   .ascii "\165\0\160\0\144\0\141\0\164\0\145\0\165\0\151\0\0\0"
   .align 8
   Lt_56B6:
   .ascii "\145\0\156\0\141\0\142\0\154\0\145\0\155\0\157\0\144\0\145\0\154\0\145\0\163\0\163\0\0\0"
   .align 8
   Lt_56BD:
   .ascii "\157\0\156\0\144\0\157\0\143\0\167\0\151\0\156\0\144\0\157\0\167\0\141\0\143\0\164\0\151\0\166\0\141\0\164\0\145\0\0\0"
   .align 8
   Lt_56C4:
   .ascii "\157\0\156\0\146\0\162\0\141\0\155\0\145\0\167\0\151\0\156\0\144\0\157\0\167\0\141\0\143\0\164\0\151\0\166\0\141\0\164\0\145\0\0\0"
   .align 8
   Lt_56CA:
   .ascii "\162\0\145\0\163\0\151\0\172\0\145\0\142\0\157\0\162\0\144\0\145\0\162\0\0\0"
   .align 8
   Lt_56D1:
   .ascii "\164\0\162\0\141\0\156\0\163\0\154\0\141\0\164\0\145\0\141\0\143\0\143\0\145\0\154\0\145\0\162\0\141\0\164\0\157\0\162\0\0\0"
   .align 8
   Lt_56D8:
   .ascii "\147\0\145\0\164\0\157\0\160\0\164\0\151\0\157\0\156\0\153\0\145\0\171\0\160\0\141\0\164\0\150\0\0\0"
   .align 8
   Lt_56DE:
   .ascii "\147\0\145\0\164\0\144\0\162\0\157\0\160\0\164\0\141\0\162\0\147\0\145\0\164\0\0\0"
   .align 8
   Lt_56E4:
   .ascii "\147\0\145\0\164\0\145\0\170\0\164\0\145\0\162\0\156\0\141\0\154\0\0\0"
   .align 8
   Lt_56EA:
   .ascii "\164\0\162\0\141\0\156\0\163\0\154\0\141\0\164\0\145\0\165\0\162\0\154\0\0\0"
   .align 8
   Lt_56F1:
   .ascii "\146\0\151\0\154\0\164\0\145\0\162\0\144\0\141\0\164\0\141\0\157\0\142\0\152\0\145\0\143\0\164\0\0\0"
   .align 8
   Lt_56F8:
   .ascii "\147\0\145\0\164\0\157\0\166\0\145\0\162\0\162\0\151\0\144\0\145\0\153\0\145\0\171\0\160\0\141\0\164\0\150\0\0\0"
   .align 8
   Lt_5745:
   .ascii "\166\0\141\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_5895:
   .ascii "N3AFX20AFX_IWINHTTPREQUEST_E\0"
   .align 8
   Lt_589D:
   .ascii "N3AFX26AFX_IWINHTTPREQUESTEVENTS_E\0"
   .align 8
   Lt_58F5:
   .ascii "BOOL\0"
   .align 8
   Lt_58FA:
   .ascii "BOOLEAN\0"
   .align 8
   Lt_58FF:
   .ascii "BYTE\0"
   .align 8
   Lt_5902:
   .ascii "UBYTE\0"
   .align 8
   Lt_5905:
   .ascii "SHORT\0"
   .align 8
   Lt_5908:
   .ascii "USHORT\0"
   .align 8
   Lt_590B:
   .ascii "INT\0"
   .align 8
   Lt_590E:
   .ascii "UINT\0"
   .align 8
   Lt_5911:
   .ascii "LONG\0"
   .align 8
   Lt_5914:
   .ascii "ULONG\0"
   .align 8
   Lt_5917:
   .ascii "LONGINT\0"
   .align 8
   Lt_591A:
   .ascii "ULONGINT\0"
   .align 8
   Lt_591D:
   .ascii "NULL\0"
   .align 8
   Lt_592F:
   .ascii "SINGLE\0"
   .align 8
   Lt_5932:
   .ascii "FLOAT\0"
   .align 8
   Lt_5935:
   .ascii "DOUBLE\0"
   .align 8
   Lt_598A:
   .ascii "BSTR\0"
   .align 8
   Lt_598D:
   .ascii "UNKNOWN\0"
   .align 8
   Lt_5990:
   .ascii "DISPATCH\0"
   .align 8
   Lt_5993:
   .ascii "DECIMAL\0"
   .align 8
   Lt_5996:
   .ascii "CY\0"
   .align 8
   Lt_5999:
   .ascii "CURRENCY\0"
   .align 8
   Lt_599C:
   .ascii "DATE\0"
   .align 8
   Lt_599F:
   .ascii "VARIANT\0"
   .align 8
   Lt_59A2:
   .ascii "SAFEARRAY\0"
   .align 8
   Lt_5B4B:
   .ascii "ERROR\0"
   .align 8
   Lt_5CDA:
   .ascii "winhttp.dll\0"
   .align 8
   Lt_5CDE:
   .ascii "WinHttpCheckPlatform\0"
   .section .bss
   .lcomm SCIMSG,8,8
   .lcomm HWND_FRMMAIN,8,8
   .lcomm HWND_FRMMAIN_TOOLBAR,8,8
   .lcomm HWND_FRMEXPLORER,8,8
   .lcomm HWND_FRMRECENT,8,8
   .lcomm HWND_FRMOUTPUT,8,8
   .lcomm HWND_FRMMAIN_COMBOBUILDS,8,8
   .lcomm HWND_FRMMAIN_TOPMENU,8,8
   .lcomm HWND_FRMOPTIONS,8,8
   .lcomm HWND_FRMOPTIONSGENERAL,8,8
   .lcomm HWND_FRMOPTIONSEDITOR,8,8
   .lcomm HWND_FRMOPTIONSEDITOR2,8,8
   .lcomm HWND_FRMOPTIONSCOLORS,8,8
   .lcomm HWND_FRMOPTIONSCOMPILER,8,8
   .lcomm HWND_FRMOPTIONSLOCAL,8,8
   .lcomm HWND_FRMOPTIONSKEYWORDS,8,8
   .lcomm HWND_FRMFINDREPLACE,8,8
   .lcomm HWND_FRMFINDINFILES,8,8
   .lcomm HWND_FRMVDTOOLBOX,8,8
   .lcomm HWND_FRMVDCOLORS,8,8
   .lcomm HWND_FRMFUNCTIONLIST,8,8
   .lcomm HWND_FRMBUILDCONFIG,8,8
   .lcomm HWND_FRMMENUEDITOR,8,8
   .lcomm HWND_FRMUSERTOOLS,8,8
   .lcomm HWND_PROPLIST_EDIT,8,8
   .lcomm HWND_PROPLIST_COMBO,8,8
   .lcomm HWND_PROPLIST_COMBOLIST,8,8
   .lcomm HWND_FRMHELPVIEWER,8,8
   .lcomm HWND_FRMIMAGES,8,8
   .lcomm HWND_FRMSNIPPETS,8,8
   .lcomm HWND_FRMSTATUSBAREDITOR,8,8
   .lcomm HWND_FRMTOOLBAREDITOR,8,8
   .lcomm HWND_FRMVDTABCHILD,8,8
   .lcomm GHICONGOOD,8,8
   .lcomm GHICONBAD,8,8
   .lcomm GHICONTICK,8,8
   .lcomm GHICONNOTICK,8,8
   .comm GLOCALPHRASESEDIT,1,1
   .lcomm GFIND,952,8
   .lcomm GFINDINFILES,952,8
   .section .data
   .align 8
   GTOOLBOX:
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x80 # 128
   .quad 0x1 # 1
   .skip 24
   .align 8
   Lt_5DD9:
   .ascii "\124\0\157\0\157\0\154\0\102\0\141\0\162\0\102\0\165\0\164\0\164\0\157\0\156\0\56\0\102\0\165\0\164\0\164\0\157\0\156\0\0\0"
   .align 8
   Lt_5DE4:
   .ascii "\123\0\164\0\141\0\164\0\165\0\163\0\102\0\141\0\162\0\120\0\141\0\156\0\145\0\154\0\101\0\154\0\151\0\147\0\156\0\155\0\145\0\156\0\164\0\56\0\114\0\145\0\146\0\164\0\0\0"
   .align 8
   Lt_5DE7:
   .ascii "\123\0\164\0\141\0\164\0\165\0\163\0\102\0\141\0\162\0\120\0\141\0\156\0\145\0\154\0\101\0\165\0\164\0\157\0\123\0\151\0\172\0\145\0\56\0\116\0\157\0\156\0\145\0\0\0"
   .align 8
   Lt_5DE9:
   .ascii "\61\0\60\0\60\0\0\0"
   .align 8
   Lt_5DEA:
   .ascii "SYSTEM|Control\0"
   .align 8
   Lt_5DED:
   .ascii "SYSTEM|ControlText\0"
   .globl _ZN11CLSDOCUMENT11NEXTFILENUME
   .align 4
   _ZN11CLSDOCUMENT11NEXTFILENUME:
   .long 0x0 # 0
   .align 8
   Lt_5E2B:
   .ascii "\123\0\111\0\132\0\105\0\137\0\62\0\64\0\0\0"
   .align 8
   Lt_5E9A:
   .ascii "80\0"
   .align 8
   Lt_5E9C:
   .ascii "4\0"
   .align 8
   Lt_5E9E:
   .ascii "english.lang\0"
   .align 8
   Lt_5EA0:
   .ascii "Courier New\0"
   .align 8
   Lt_5EA2:
   .ascii "Default\0"
   .align 8
   Lt_5EA4:
   .ascii "10\0"
   .section .bss
   .lcomm GAPP,552,8
   .lcomm GCONFIG,1848,8
   .lcomm GTTABCTL,8,8
   .lcomm GLASSO,48,8
   .section .data
   .align 8
   Lt_5F0B:
   .ascii "boolean|byte|ubyte|short|ushort|integer|uinteger|long|ulong|longint|ulongint|single|double|string|wstring|zstring|true|false|CWSTR\0"
   .align 8
   Lt_5F71:
   .ascii " (get)\0"
   .align 8
   Lt_5F74:
   .ascii " (set)\0"
   .align 8
   Lt_5F77:
   .ascii " (ctor)\0"
   .align 8
   Lt_5F7A:
   .ascii " (dtor)\0"
   .align 8
   Lt_5FAF:
   .ascii "_debug.txt\0"
   .align 8
   Lt_5FB9:
   .ascii "CLASSES/TYPES\0"
   .align 8
   Lt_5FBD:
   .ascii "FUNCTIONS\0"
   .align 8
   Lt_5FC1:
   .ascii "SUBS\0"
   .align 8
   Lt_5FC5:
   .ascii "PROPERTY\0"
   .align 8
   Lt_5FC9:
   .ascii "VARIABLES\0"
   .align 8
   Lt_5FD3:
   .ascii "   \0"
   .align 8
   Lt_5FD8:
   .ascii "   deleted: \0"
   .align 8
   Lt_5FDC:
   .ascii "   fileName: \0"
   .align 8
   Lt_5FE4:
   .ascii "DB2_FILETYPE_FB\0"
   .align 8
   Lt_5FE8:
   .ascii "DB2_FILETYPE_WINAPI\0"
   .align 8
   Lt_5FEC:
   .ascii "DB2_FILETYPE_WINFORMSX\0"
   .align 8
   Lt_5FF0:
   .ascii "DB2_FILETYPE_WINFBX\0"
   .align 8
   Lt_5FF4:
   .ascii "DB2_FILETYPE_USERCODE\0"
   .align 8
   Lt_5FF6:
   .ascii "   nFileType: \0"
   .align 8
   Lt_5FFB:
   .ascii "   ElementName: \0"
   .align 8
   Lt_5FFF:
   .ascii "   VariableType:\0"
   .align 8
   Lt_6003:
   .ascii "   CallTip: \0"
   .align 8
   Lt_6007:
   .ascii "   lineNum: \0"
   .align 8
   Lt_600B:
   .ascii "   Get/Set/ctor/dtor: \0"
   .align 8
   Lt_600F:
   .ascii "   IsPublic (TYPE elements): \0"
   .section .bss
   .lcomm GDB2,72,8
   .section .data
   .align 8
   Lt_6033:
   .ascii "' TODO:\0"
   .align 8
   Lt_6036:
   .ascii "'TODO:\0"
   .align 8
   Lt_6044:
   .ascii "'/\0"
   .align 8
   Lt_6047:
   .ascii "/'\0"
   .align 8
   Lt_6052:
   .ascii "\40\0\11\0\0\0"
   .align 8
   Lt_605B:
   .ascii "TYPE \0"
   .align 8
   Lt_605E:
   .ascii " AS \0"
   .align 8
   Lt_6063:
   .ascii "\40\0\101\0\123\0\40\0\0\0"
   .align 8
   Lt_6065:
   .ascii "FUNCTION\0"
   .align 8
   Lt_606A:
   .ascii " EXTENDS\0"
   .align 8
   Lt_606F:
   .ascii "OBJECT\0"
   .align 8
   Lt_6073:
   .ascii "END TYPE\0"
   .align 8
   Lt_6076:
   .ascii "STATIC \0"
   .align 8
   Lt_6079:
   .ascii "SUB \0"
   .align 8
   Lt_607D:
   .ascii "FUNCTION \0"
   .align 8
   Lt_6081:
   .ascii "PUBLIC FUNCTION \0"
   .align 8
   Lt_6083:
   .ascii "PRIVATE FUNCTION \0"
   .align 8
   Lt_6085:
   .ascii "PUBLIC SUB \0"
   .align 8
   Lt_6087:
   .ascii "PRIVATE SUB \0"
   .align 8
   Lt_6089:
   .ascii "PROPERTY \0"
   .align 8
   Lt_608D:
   .ascii "PRIVATE PROPERTY \0"
   .align 8
   Lt_608F:
   .ascii "CONSTRUCTOR \0"
   .align 8
   Lt_6091:
   .ascii "DESTRUCTOR \0"
   .align 8
   Lt_6096:
   .ascii "(\0"
   .align 8
   Lt_609F:
   .ascii ")\0"
   .align 8
   Lt_60A5:
   .ascii "( )\0"
   .align 8
   Lt_60AF:
   .ascii "END SUB\0"
   .align 8
   Lt_60B0:
   .ascii "END FUNCTION\0"
   .align 8
   Lt_60B3:
   .ascii "END PROPERTY\0"
   .align 8
   Lt_60B6:
   .ascii "END CONSTRUCTOR\0"
   .align 8
   Lt_60B9:
   .ascii "END DESTRUCTOR\0"
   .align 8
   Lt_60D0:
   .ascii "\50\0\0\0"
   .align 8
   Lt_60D1:
   .ascii "\51\0\0\0"
   .align 8
   Lt_60E7:
   .ascii " boolean byte double integer long longint short single string ubyte uinteger ushort wstring zstring cwstr \0"
   .align 8
   Lt_60F6:
   .ascii "AS \0"
   .align 8
   Lt_60FE:
   .ascii "\142\0\171\0\166\0\141\0\154\0\40\0\0\0"
   .align 8
   Lt_6102:
   .ascii "\142\0\171\0\162\0\145\0\146\0\40\0\0\0"
   .align 8
   Lt_6106:
   .ascii "\143\0\157\0\156\0\163\0\164\0\40\0\0\0"
   .align 8
   Lt_6107:
   .ascii "DIM SHARED \0"
   .align 8
   Lt_610B:
   .ascii "DIM BYREF \0"
   .align 8
   Lt_610D:
   .ascii "DIM \0"
   .align 8
   Lt_610F:
   .ascii "REDIM SHARED \0"
   .align 8
   Lt_6111:
   .ascii "REDIM PRESERVE \0"
   .align 8
   Lt_6113:
   .ascii "REDIM \0"
   .align 8
   Lt_611A:
   .ascii "\42\0\0\0"
   .align 8
   Lt_6120:
   .ascii "\175\0\0\0"
   .align 8
   Lt_6124:
   .ascii "\133\0\0\0"
   .align 8
   Lt_6126:
   .ascii "\135\0\0\0"
   .align 8
   Lt_6130:
   .ascii "\40\0\160\0\164\0\162\0\0\0"
   .align 8
   Lt_6134:
   .ascii "\40\0\160\0\157\0\151\0\156\0\164\0\145\0\162\0\0\0"
   .align 8
   Lt_6147:
   .ascii " :\0"
   .align 8
   Lt_6171:
   .ascii "PRIVATE:\0"
   .align 8
   Lt_6175:
   .ascii "PUBLIC:\0"
   .align 8
   Lt_6177:
   .ascii "PROTECTED:\0"
   .align 8
   Lt_6178:
   .ascii "DECLARE \0"
   .align 8
   Lt_6181:
   .ascii "ENUM \0"
   .align 8
   Lt_6182:
   .ascii "ENUM\0"
   .align 8
   Lt_6188:
   .ascii "END ENUM\0"
   .align 8
   Lt_619D:
   .ascii "Long\0"
   .section .bss
   .lcomm GLASTPOSITION,16,8
   .lcomm SPLITSIZE,4,4
   .section .data
   .align 8
   GCOLORS:
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x0 # 0
   .quad 0x20 # 32
   .quad 0x1 # 1
   .skip 24
   .align 8
   Lt_61AD:
   .ascii "Settings\\WinFBE.ini\0"
   .align 8
   Lt_61B2:
   .ascii "Settings\\user_snippets.ini\0"
   .align 8
   Lt_61B7:
   .ascii "Settings\\user_snippets_default.ini\0"
   .align 8
   Lt_61BC:
   .ascii "Settings\\freebasic_keywords.txt\0"
   .align 8
   Lt_61C1:
   .ascii "Settings\\freebasic_keywords_default.txt\0"
   .align 8
   Lt_61C6:
   .ascii "Settings\\codetips.ini\0"
   .align 8
   Lt_61CB:
   .ascii "Settings\\codetips_winapi.ini\0"
   .align 8
   Lt_61D0:
   .ascii "Settings\\codetips_winformsx.ini\0"
   .align 8
   Lt_61D5:
   .ascii "Settings\\codetips_winfbx.ini\0"
   .align 8
   Lt_61DA:
   .ascii "Settings\\codetips_db_data.ini\0"
   .align 8
   Lt_61DF:
   .ascii "Settings\\codetips_db_meta.ini\0"
   .align 8
   Lt_6200:
   .ascii "\15\0\12\0\0\0"
   .align 8
   Lt_6201:
   .ascii "\40\0\15\0\12\0\0\0"
   .align 8
   Lt_6268:
   .ascii "\124\0\131\0\120\0\105\0\72\0\0\0"
   .align 8
   Lt_626D:
   .ascii "BASE\0"
   .align 8
   Lt_6272:
   .ascii "\105\0\116\0\104\0\124\0\131\0\120\0\105\0\0\0"
   .align 8
   Lt_627D:
   .ascii "\53\0\102\0\101\0\123\0\105\0\0\0"
   .align 8
   Lt_6293:
   .ascii "Application\0"
   .align 8
   Lt_6294:
   .ascii "wfxApplication\0"
   .align 8
   Lt_6295:
   .ascii "Colors\0"
   .align 8
   Lt_6296:
   .ascii "wfxColors\0"
   .align 8
   Lt_62A3:
   .ascii "_db_data.ini\0"
   .align 8
   Lt_6321:
   .ascii "Pointer\0"
   .align 8
   Lt_6324:
   .ascii "IMAGE_POINTER\0"
   .align 8
   Lt_632A:
   .ascii "IMAGE_BUTTON\0"
   .align 8
   Lt_632C:
   .ascii "IMAGE_CURSOR_BUTTON\0"
   .align 8
   Lt_632F:
   .ascii "CheckBox\0"
   .align 8
   Lt_6331:
   .ascii "Check\0"
   .align 8
   Lt_6333:
   .ascii "IMAGE_CHECKBOX\0"
   .align 8
   Lt_6335:
   .ascii "IMAGE_CURSOR_CHECKBOX\0"
   .align 8
   Lt_6338:
   .ascii "ComboBox\0"
   .align 8
   Lt_633A:
   .ascii "Combo\0"
   .align 8
   Lt_633C:
   .ascii "IMAGE_COMBOBOX\0"
   .align 8
   Lt_633E:
   .ascii "IMAGE_CURSOR_COMBOBOX\0"
   .align 8
   Lt_6341:
   .ascii "DateTimePicker\0"
   .align 8
   Lt_6344:
   .ascii "IMAGE_DATETIMEPICKER\0"
   .align 8
   Lt_6346:
   .ascii "IMAGE_CURSOR_DATETIMEPICKER\0"
   .align 8
   Lt_6349:
   .ascii "Frame\0"
   .align 8
   Lt_634C:
   .ascii "IMAGE_FRAME\0"
   .align 8
   Lt_634E:
   .ascii "IMAGE_CURSOR_FRAME\0"
   .align 8
   Lt_6353:
   .ascii "IMAGE_LABEL\0"
   .align 8
   Lt_6355:
   .ascii "IMAGE_CURSOR_LABEL\0"
   .align 8
   Lt_6358:
   .ascii "ListBox\0"
   .align 8
   Lt_635A:
   .ascii "List\0"
   .align 8
   Lt_635C:
   .ascii "IMAGE_LISTBOX\0"
   .align 8
   Lt_635E:
   .ascii "IMAGE_CURSOR_LISTBOX\0"
   .align 8
   Lt_6361:
   .ascii "ListView\0"
   .align 8
   Lt_6364:
   .ascii "IMAGE_LISTVIEW\0"
   .align 8
   Lt_6366:
   .ascii "IMAGE_CURSOR_LISTVIEW\0"
   .align 8
   Lt_6369:
   .ascii "MaskedEdit\0"
   .align 8
   Lt_636B:
   .ascii "Masked\0"
   .align 8
   Lt_636D:
   .ascii "IMAGE_MASKED\0"
   .align 8
   Lt_636F:
   .ascii "IMAGE_CURSOR_MASKED\0"
   .align 8
   Lt_6371:
   .ascii "MASKEDEDIT\0"
   .align 8
   Lt_6373:
   .ascii "MonthCalendar\0"
   .align 8
   Lt_6375:
   .ascii "MonthCal\0"
   .align 8
   Lt_6377:
   .ascii "IMAGE_MONTHCALENDAR\0"
   .align 8
   Lt_6379:
   .ascii "IMAGE_CURSOR_MONTHCALENDAR\0"
   .align 8
   Lt_637C:
   .ascii "OptionButton\0"
   .align 8
   Lt_637E:
   .ascii "Option\0"
   .align 8
   Lt_6380:
   .ascii "IMAGE_OPTION\0"
   .align 8
   Lt_6382:
   .ascii "IMAGE_CURSOR_OPTION\0"
   .align 8
   Lt_6385:
   .ascii "PictureBox\0"
   .align 8
   Lt_6387:
   .ascii "Picture\0"
   .align 8
   Lt_6389:
   .ascii "IMAGE_PICTUREBOX\0"
   .align 8
   Lt_638B:
   .ascii "IMAGE_CURSOR_PICTUREBOX\0"
   .align 8
   Lt_638D:
   .ascii "PICTUREBOX\0"
   .align 8
   Lt_638F:
   .ascii "ProgressBar\0"
   .align 8
   Lt_6391:
   .ascii "Progress\0"
   .align 8
   Lt_6393:
   .ascii "IMAGE_PROGRESSBAR\0"
   .align 8
   Lt_6395:
   .ascii "IMAGE_CURSOR_PROGRESSBAR\0"
   .align 8
   Lt_6398:
   .ascii "RichEdit\0"
   .align 8
   Lt_639B:
   .ascii "IMAGE_RICHEDIT\0"
   .align 8
   Lt_639D:
   .ascii "IMAGE_CURSOR_RICHEDIT\0"
   .align 8
   Lt_63A0:
   .ascii "TabControl\0"
   .align 8
   Lt_63A3:
   .ascii "IMAGE_TABCONTROL\0"
   .align 8
   Lt_63A5:
   .ascii "IMAGE_CURSOR_TABCONTROL\0"
   .align 8
   Lt_63A8:
   .ascii "TextBox\0"
   .align 8
   Lt_63AA:
   .ascii "Text\0"
   .align 8
   Lt_63AC:
   .ascii "IMAGE_TEXTBOX\0"
   .align 8
   Lt_63AE:
   .ascii "IMAGE_CURSOR_TEXTBOX\0"
   .align 8
   Lt_63B1:
   .ascii "Timer\0"
   .align 8
   Lt_63B4:
   .ascii "IMAGE_TIMER\0"
   .align 8
   Lt_63B6:
   .ascii "IMAGE_CURSOR_TIMER\0"
   .align 8
   Lt_63B9:
   .ascii "TreeView\0"
   .align 8
   Lt_63BC:
   .ascii "IMAGE_TREEVIEW\0"
   .align 8
   Lt_63BE:
   .ascii "IMAGE_CURSOR_TREEVIEW\0"
   .align 8
   Lt_63C1:
   .ascii "UpDown\0"
   .align 8
   Lt_63C4:
   .ascii "IMAGE_UPDOWN\0"
   .align 8
   Lt_63C6:
   .ascii "IMAGE_CURSOR_UPDOWN\0"
   .align 8
   Lt_63CB:
   .ascii "\101\0\143\0\164\0\151\0\166\0\145\0\102\0\157\0\162\0\144\0\145\0\162\0\0\0"
   .align 8
   Lt_63CD:
   .ascii "\101\0\143\0\164\0\151\0\166\0\145\0\103\0\141\0\160\0\164\0\151\0\157\0\156\0\0\0"
   .align 8
   Lt_63D0:
   .ascii "\101\0\143\0\164\0\151\0\166\0\145\0\103\0\141\0\160\0\164\0\151\0\157\0\156\0\124\0\145\0\170\0\164\0\0\0"
   .align 8
   Lt_63D2:
   .ascii "\101\0\160\0\160\0\127\0\157\0\162\0\153\0\163\0\160\0\141\0\143\0\145\0\0\0"
   .align 8
   Lt_63D4:
   .ascii "\102\0\165\0\164\0\164\0\157\0\156\0\106\0\141\0\143\0\145\0\0\0"
   .align 8
   Lt_63D6:
   .ascii "\102\0\165\0\164\0\164\0\157\0\156\0\110\0\151\0\147\0\150\0\154\0\151\0\147\0\150\0\164\0\0\0"
   .align 8
   Lt_63D8:
   .ascii "\102\0\165\0\164\0\164\0\157\0\156\0\123\0\150\0\141\0\144\0\157\0\167\0\0\0"
   .align 8
   Lt_63DA:
   .ascii "\103\0\157\0\156\0\164\0\162\0\157\0\154\0\0\0"
   .align 8
   Lt_63DC:
   .ascii "\103\0\157\0\156\0\164\0\162\0\157\0\154\0\104\0\141\0\162\0\153\0\0\0"
   .align 8
   Lt_63DE:
   .ascii "\103\0\157\0\156\0\164\0\162\0\157\0\154\0\104\0\141\0\162\0\153\0\104\0\141\0\162\0\153\0\0\0"
   .align 8
   Lt_63E0:
   .ascii "\103\0\157\0\156\0\164\0\162\0\157\0\154\0\114\0\151\0\147\0\150\0\164\0\0\0"
   .align 8
   Lt_63E3:
   .ascii "\103\0\157\0\156\0\164\0\162\0\157\0\154\0\114\0\151\0\147\0\150\0\164\0\114\0\151\0\147\0\150\0\164\0\0\0"
   .align 8
   Lt_63E5:
   .ascii "\103\0\157\0\156\0\164\0\162\0\157\0\154\0\124\0\145\0\170\0\164\0\0\0"
   .align 8
   Lt_63E7:
   .ascii "\104\0\145\0\163\0\153\0\164\0\157\0\160\0\0\0"
   .align 8
   Lt_63EA:
   .ascii "\107\0\162\0\141\0\144\0\151\0\145\0\156\0\164\0\101\0\143\0\164\0\151\0\166\0\145\0\103\0\141\0\160\0\164\0\151\0\157\0\156\0\0\0"
   .align 8
   Lt_63ED:
   .ascii "\107\0\162\0\141\0\144\0\151\0\145\0\156\0\164\0\111\0\156\0\141\0\143\0\164\0\151\0\166\0\145\0\103\0\141\0\160\0\164\0\151\0\157\0\156\0\0\0"
   .align 8
   Lt_63EF:
   .ascii "\107\0\162\0\141\0\171\0\124\0\145\0\170\0\164\0\0\0"
   .align 8
   Lt_63F1:
   .ascii "\110\0\151\0\147\0\150\0\154\0\151\0\147\0\150\0\164\0\0\0"
   .align 8
   Lt_63F3:
   .ascii "\110\0\151\0\147\0\150\0\154\0\151\0\147\0\150\0\164\0\124\0\145\0\170\0\164\0\0\0"
   .align 8
   Lt_63F5:
   .ascii "\110\0\157\0\164\0\124\0\162\0\141\0\143\0\153\0\0\0"
   .align 8
   Lt_63F7:
   .ascii "\111\0\156\0\141\0\143\0\164\0\151\0\166\0\145\0\102\0\157\0\162\0\144\0\145\0\162\0\0\0"
   .align 8
   Lt_63F9:
   .ascii "\111\0\156\0\141\0\143\0\164\0\151\0\166\0\145\0\103\0\141\0\160\0\164\0\151\0\157\0\156\0\0\0"
   .align 8
   Lt_63FC:
   .ascii "\111\0\156\0\141\0\143\0\164\0\151\0\166\0\145\0\103\0\141\0\160\0\164\0\151\0\157\0\156\0\124\0\145\0\170\0\164\0\0\0"
   .align 8
   Lt_63FE:
   .ascii "\111\0\156\0\146\0\157\0\0\0"
   .align 8
   Lt_6400:
   .ascii "\111\0\156\0\146\0\157\0\124\0\145\0\170\0\164\0\0\0"
   .align 8
   Lt_6402:
   .ascii "\115\0\145\0\156\0\165\0\0\0"
   .align 8
   Lt_6404:
   .ascii "\115\0\145\0\156\0\165\0\102\0\141\0\162\0\0\0"
   .align 8
   Lt_6406:
   .ascii "\115\0\145\0\156\0\165\0\110\0\151\0\147\0\150\0\154\0\151\0\147\0\150\0\164\0\0\0"
   .align 8
   Lt_6408:
   .ascii "\115\0\145\0\156\0\165\0\124\0\145\0\170\0\164\0\0\0"
   .align 8
   Lt_640A:
   .ascii "\123\0\143\0\162\0\157\0\154\0\154\0\102\0\141\0\162\0\0\0"
   .align 8
   Lt_640C:
   .ascii "\127\0\151\0\156\0\144\0\157\0\167\0\0\0"
   .align 8
   Lt_640E:
   .ascii "\127\0\151\0\156\0\144\0\157\0\167\0\106\0\162\0\141\0\155\0\145\0\0\0"
   .align 8
   Lt_6410:
   .ascii "\127\0\151\0\156\0\144\0\157\0\167\0\124\0\145\0\170\0\164\0\0\0"
   .align 8
   Lt_6412:
   .ascii "\101\0\154\0\151\0\143\0\145\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_6414:
   .ascii "\101\0\156\0\164\0\151\0\161\0\165\0\145\0\127\0\150\0\151\0\164\0\145\0\0\0"
   .align 8
   Lt_6416:
   .ascii "\101\0\161\0\165\0\141\0\0\0"
   .align 8
   Lt_6418:
   .ascii "\101\0\161\0\165\0\141\0\155\0\141\0\162\0\151\0\156\0\145\0\0\0"
   .align 8
   Lt_641A:
   .ascii "\101\0\172\0\165\0\162\0\145\0\0\0"
   .align 8
   Lt_641C:
   .ascii "\102\0\145\0\151\0\147\0\145\0\0\0"
   .align 8
   Lt_641E:
   .ascii "\102\0\151\0\163\0\161\0\165\0\145\0\0\0"
   .align 8
   Lt_6420:
   .ascii "\102\0\154\0\141\0\143\0\153\0\0\0"
   .align 8
   Lt_6422:
   .ascii "\102\0\154\0\141\0\156\0\143\0\150\0\145\0\144\0\101\0\154\0\155\0\157\0\156\0\144\0\0\0"
   .align 8
   Lt_6424:
   .ascii "\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_6426:
   .ascii "\102\0\154\0\165\0\145\0\126\0\151\0\157\0\154\0\145\0\164\0\0\0"
   .align 8
   Lt_6428:
   .ascii "\102\0\162\0\157\0\167\0\156\0\0\0"
   .align 8
   Lt_642A:
   .ascii "\102\0\165\0\162\0\154\0\171\0\167\0\157\0\157\0\144\0\0\0"
   .align 8
   Lt_642C:
   .ascii "\103\0\141\0\144\0\145\0\164\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_642E:
   .ascii "\103\0\150\0\141\0\162\0\164\0\162\0\145\0\165\0\163\0\145\0\0\0"
   .align 8
   Lt_6430:
   .ascii "\103\0\150\0\157\0\143\0\157\0\154\0\141\0\164\0\145\0\0\0"
   .align 8
   Lt_6432:
   .ascii "\103\0\157\0\162\0\141\0\154\0\0\0"
   .align 8
   Lt_6434:
   .ascii "\103\0\157\0\162\0\156\0\146\0\154\0\157\0\167\0\145\0\162\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_6436:
   .ascii "\103\0\157\0\162\0\156\0\163\0\151\0\154\0\153\0\0\0"
   .align 8
   Lt_6438:
   .ascii "\103\0\162\0\151\0\155\0\163\0\157\0\156\0\0\0"
   .align 8
   Lt_643A:
   .ascii "\103\0\171\0\141\0\156\0\0\0"
   .align 8
   Lt_643C:
   .ascii "\104\0\141\0\162\0\153\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_643E:
   .ascii "\104\0\141\0\162\0\153\0\103\0\171\0\141\0\156\0\0\0"
   .align 8
   Lt_6440:
   .ascii "\104\0\141\0\162\0\153\0\107\0\157\0\154\0\144\0\145\0\156\0\122\0\157\0\144\0\0\0"
   .align 8
   Lt_6442:
   .ascii "\104\0\141\0\162\0\153\0\107\0\162\0\141\0\171\0\0\0"
   .align 8
   Lt_6444:
   .ascii "\104\0\141\0\162\0\153\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_6446:
   .ascii "\104\0\141\0\162\0\153\0\113\0\150\0\141\0\153\0\151\0\0\0"
   .align 8
   Lt_6448:
   .ascii "\104\0\141\0\162\0\153\0\115\0\141\0\147\0\145\0\156\0\164\0\141\0\0\0"
   .align 8
   Lt_644A:
   .ascii "\104\0\141\0\162\0\153\0\117\0\154\0\151\0\166\0\145\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_644C:
   .ascii "\104\0\141\0\162\0\153\0\117\0\162\0\141\0\156\0\147\0\145\0\0\0"
   .align 8
   Lt_644E:
   .ascii "\104\0\141\0\162\0\153\0\117\0\162\0\143\0\150\0\151\0\144\0\0\0"
   .align 8
   Lt_6450:
   .ascii "\104\0\141\0\162\0\153\0\122\0\145\0\144\0\0\0"
   .align 8
   Lt_6452:
   .ascii "\104\0\141\0\162\0\153\0\123\0\141\0\154\0\155\0\157\0\156\0\0\0"
   .align 8
   Lt_6454:
   .ascii "\104\0\141\0\162\0\153\0\123\0\145\0\141\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_6456:
   .ascii "\104\0\141\0\162\0\153\0\123\0\154\0\141\0\164\0\145\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_6458:
   .ascii "\104\0\141\0\162\0\153\0\123\0\154\0\141\0\164\0\145\0\107\0\162\0\141\0\171\0\0\0"
   .align 8
   Lt_645A:
   .ascii "\104\0\141\0\162\0\153\0\124\0\165\0\162\0\161\0\165\0\157\0\151\0\163\0\145\0\0\0"
   .align 8
   Lt_645C:
   .ascii "\104\0\141\0\162\0\153\0\126\0\151\0\157\0\154\0\145\0\164\0\0\0"
   .align 8
   Lt_645E:
   .ascii "\104\0\145\0\145\0\160\0\120\0\151\0\156\0\153\0\0\0"
   .align 8
   Lt_6460:
   .ascii "\104\0\145\0\145\0\160\0\123\0\153\0\171\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_6462:
   .ascii "\104\0\151\0\155\0\107\0\162\0\141\0\171\0\0\0"
   .align 8
   Lt_6464:
   .ascii "\104\0\157\0\144\0\147\0\145\0\162\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_6466:
   .ascii "\106\0\151\0\162\0\145\0\102\0\162\0\151\0\143\0\153\0\0\0"
   .align 8
   Lt_6468:
   .ascii "\106\0\154\0\157\0\162\0\141\0\154\0\127\0\150\0\151\0\164\0\145\0\0\0"
   .align 8
   Lt_646A:
   .ascii "\106\0\157\0\162\0\145\0\163\0\164\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_646C:
   .ascii "\106\0\165\0\143\0\150\0\163\0\151\0\141\0\0\0"
   .align 8
   Lt_646E:
   .ascii "\107\0\141\0\151\0\156\0\163\0\142\0\157\0\162\0\157\0\0\0"
   .align 8
   Lt_6470:
   .ascii "\107\0\150\0\157\0\163\0\164\0\127\0\150\0\151\0\164\0\145\0\0\0"
   .align 8
   Lt_6472:
   .ascii "\107\0\157\0\154\0\144\0\0\0"
   .align 8
   Lt_6474:
   .ascii "\107\0\157\0\154\0\144\0\145\0\156\0\122\0\157\0\144\0\0\0"
   .align 8
   Lt_6476:
   .ascii "\107\0\162\0\141\0\171\0\0\0"
   .align 8
   Lt_6478:
   .ascii "\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_647A:
   .ascii "\107\0\162\0\145\0\145\0\156\0\131\0\145\0\154\0\154\0\157\0\167\0\0\0"
   .align 8
   Lt_647C:
   .ascii "\110\0\157\0\156\0\145\0\171\0\104\0\145\0\167\0\0\0"
   .align 8
   Lt_647E:
   .ascii "\110\0\157\0\164\0\120\0\151\0\156\0\153\0\0\0"
   .align 8
   Lt_6480:
   .ascii "\111\0\156\0\144\0\151\0\141\0\156\0\122\0\145\0\144\0\0\0"
   .align 8
   Lt_6482:
   .ascii "\111\0\156\0\144\0\151\0\147\0\157\0\0\0"
   .align 8
   Lt_6484:
   .ascii "\111\0\166\0\157\0\162\0\171\0\0\0"
   .align 8
   Lt_6486:
   .ascii "\113\0\150\0\141\0\153\0\151\0\0\0"
   .align 8
   Lt_6488:
   .ascii "\114\0\141\0\166\0\145\0\156\0\144\0\145\0\162\0\0\0"
   .align 8
   Lt_648A:
   .ascii "\114\0\141\0\166\0\145\0\156\0\144\0\145\0\162\0\102\0\154\0\165\0\163\0\150\0\0\0"
   .align 8
   Lt_648C:
   .ascii "\114\0\141\0\167\0\156\0\147\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_648E:
   .ascii "\114\0\145\0\155\0\157\0\156\0\103\0\150\0\151\0\146\0\146\0\157\0\156\0\0\0"
   .align 8
   Lt_6490:
   .ascii "\114\0\151\0\147\0\150\0\164\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_6492:
   .ascii "\114\0\151\0\147\0\150\0\164\0\103\0\157\0\162\0\141\0\154\0\0\0"
   .align 8
   Lt_6494:
   .ascii "\114\0\151\0\147\0\150\0\164\0\103\0\171\0\141\0\156\0\0\0"
   .align 8
   Lt_6497:
   .ascii "\114\0\151\0\147\0\150\0\164\0\107\0\157\0\154\0\144\0\145\0\156\0\122\0\157\0\144\0\131\0\145\0\154\0\154\0\157\0\167\0\0\0"
   .align 8
   Lt_6499:
   .ascii "\114\0\151\0\147\0\150\0\164\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_649B:
   .ascii "\114\0\151\0\147\0\150\0\164\0\107\0\162\0\145\0\171\0\0\0"
   .align 8
   Lt_649D:
   .ascii "\114\0\151\0\147\0\150\0\164\0\120\0\151\0\156\0\153\0\0\0"
   .align 8
   Lt_649F:
   .ascii "\114\0\151\0\147\0\150\0\164\0\123\0\141\0\154\0\155\0\157\0\156\0\0\0"
   .align 8
   Lt_64A1:
   .ascii "\114\0\151\0\147\0\150\0\164\0\123\0\145\0\141\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_64A3:
   .ascii "\114\0\151\0\147\0\150\0\164\0\123\0\153\0\171\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_64A5:
   .ascii "\114\0\151\0\147\0\150\0\164\0\123\0\154\0\141\0\164\0\145\0\107\0\162\0\141\0\171\0\0\0"
   .align 8
   Lt_64A7:
   .ascii "\114\0\151\0\147\0\150\0\164\0\123\0\164\0\145\0\145\0\154\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_64A9:
   .ascii "\114\0\151\0\147\0\150\0\164\0\131\0\145\0\154\0\154\0\157\0\167\0\0\0"
   .align 8
   Lt_64AB:
   .ascii "\114\0\151\0\155\0\145\0\0\0"
   .align 8
   Lt_64AD:
   .ascii "\114\0\151\0\155\0\145\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_64AF:
   .ascii "\114\0\151\0\156\0\145\0\156\0\0\0"
   .align 8
   Lt_64B1:
   .ascii "\115\0\141\0\147\0\145\0\156\0\164\0\141\0\0\0"
   .align 8
   Lt_64B3:
   .ascii "\115\0\141\0\162\0\157\0\157\0\156\0\0\0"
   .align 8
   Lt_64B6:
   .ascii "\115\0\145\0\144\0\151\0\165\0\155\0\101\0\161\0\165\0\141\0\155\0\141\0\162\0\151\0\156\0\145\0\0\0"
   .align 8
   Lt_64B8:
   .ascii "\115\0\145\0\144\0\151\0\165\0\155\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_64BA:
   .ascii "\115\0\145\0\144\0\151\0\165\0\155\0\117\0\162\0\143\0\150\0\151\0\144\0\0\0"
   .align 8
   Lt_64BC:
   .ascii "\115\0\145\0\144\0\151\0\165\0\155\0\120\0\165\0\162\0\160\0\154\0\145\0\0\0"
   .align 8
   Lt_64BE:
   .ascii "\115\0\145\0\144\0\151\0\165\0\155\0\123\0\145\0\141\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_64C0:
   .ascii "\115\0\145\0\144\0\151\0\165\0\155\0\123\0\154\0\141\0\164\0\145\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_64C3:
   .ascii "\115\0\145\0\144\0\151\0\165\0\155\0\123\0\160\0\162\0\151\0\156\0\147\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_64C5:
   .ascii "\115\0\145\0\144\0\151\0\165\0\155\0\124\0\165\0\162\0\161\0\165\0\157\0\151\0\163\0\145\0\0\0"
   .align 8
   Lt_64C7:
   .ascii "\115\0\145\0\144\0\151\0\165\0\155\0\126\0\151\0\157\0\154\0\145\0\164\0\122\0\145\0\144\0\0\0"
   .align 8
   Lt_64C9:
   .ascii "\115\0\151\0\144\0\156\0\151\0\147\0\150\0\164\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_64CB:
   .ascii "\115\0\151\0\156\0\164\0\103\0\162\0\145\0\141\0\155\0\0\0"
   .align 8
   Lt_64CD:
   .ascii "\115\0\151\0\163\0\164\0\171\0\122\0\157\0\163\0\145\0\0\0"
   .align 8
   Lt_64CF:
   .ascii "\115\0\157\0\143\0\143\0\141\0\163\0\151\0\156\0\0\0"
   .align 8
   Lt_64D1:
   .ascii "\116\0\141\0\166\0\141\0\152\0\157\0\127\0\150\0\151\0\164\0\145\0\0\0"
   .align 8
   Lt_64D3:
   .ascii "\116\0\141\0\166\0\171\0\0\0"
   .align 8
   Lt_64D5:
   .ascii "\116\0\141\0\166\0\171\0\142\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_64D7:
   .ascii "\117\0\154\0\144\0\114\0\141\0\143\0\145\0\0\0"
   .align 8
   Lt_64D9:
   .ascii "\117\0\154\0\151\0\166\0\145\0\0\0"
   .align 8
   Lt_64DB:
   .ascii "\117\0\154\0\151\0\166\0\145\0\104\0\162\0\141\0\142\0\0\0"
   .align 8
   Lt_64DD:
   .ascii "\117\0\162\0\141\0\156\0\147\0\145\0\0\0"
   .align 8
   Lt_64DF:
   .ascii "\117\0\162\0\141\0\156\0\147\0\145\0\122\0\145\0\144\0\0\0"
   .align 8
   Lt_64E1:
   .ascii "\117\0\162\0\143\0\150\0\151\0\144\0\0\0"
   .align 8
   Lt_64E3:
   .ascii "\120\0\141\0\154\0\145\0\107\0\157\0\154\0\144\0\145\0\156\0\122\0\157\0\144\0\0\0"
   .align 8
   Lt_64E5:
   .ascii "\120\0\141\0\154\0\145\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_64E7:
   .ascii "\120\0\141\0\154\0\145\0\124\0\165\0\162\0\161\0\165\0\157\0\151\0\163\0\145\0\0\0"
   .align 8
   Lt_64E9:
   .ascii "\120\0\141\0\154\0\145\0\126\0\151\0\157\0\154\0\145\0\164\0\122\0\145\0\144\0\0\0"
   .align 8
   Lt_64EB:
   .ascii "\120\0\141\0\160\0\141\0\171\0\141\0\127\0\150\0\151\0\160\0\0\0"
   .align 8
   Lt_64ED:
   .ascii "\120\0\145\0\141\0\143\0\150\0\120\0\165\0\146\0\146\0\0\0"
   .align 8
   Lt_64EF:
   .ascii "\120\0\145\0\162\0\165\0\0\0"
   .align 8
   Lt_64F1:
   .ascii "\120\0\151\0\156\0\153\0\0\0"
   .align 8
   Lt_64F3:
   .ascii "\120\0\154\0\165\0\155\0\0\0"
   .align 8
   Lt_64F5:
   .ascii "\120\0\157\0\167\0\144\0\145\0\162\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_64F7:
   .ascii "\120\0\165\0\162\0\160\0\154\0\145\0\0\0"
   .align 8
   Lt_64F9:
   .ascii "\122\0\145\0\144\0\0\0"
   .align 8
   Lt_64FB:
   .ascii "\122\0\157\0\163\0\171\0\102\0\162\0\157\0\167\0\156\0\0\0"
   .align 8
   Lt_64FD:
   .ascii "\122\0\157\0\171\0\141\0\154\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_64FF:
   .ascii "\123\0\141\0\144\0\144\0\154\0\145\0\102\0\162\0\157\0\167\0\156\0\0\0"
   .align 8
   Lt_6501:
   .ascii "\123\0\141\0\154\0\155\0\157\0\156\0\0\0"
   .align 8
   Lt_6503:
   .ascii "\123\0\141\0\156\0\144\0\171\0\102\0\162\0\157\0\167\0\156\0\0\0"
   .align 8
   Lt_6505:
   .ascii "\123\0\145\0\141\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_6507:
   .ascii "\123\0\145\0\141\0\123\0\150\0\145\0\154\0\154\0\0\0"
   .align 8
   Lt_6509:
   .ascii "\123\0\151\0\145\0\156\0\156\0\141\0\0\0"
   .align 8
   Lt_650B:
   .ascii "\123\0\151\0\154\0\166\0\145\0\162\0\0\0"
   .align 8
   Lt_650D:
   .ascii "\123\0\153\0\171\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_650F:
   .ascii "\123\0\154\0\141\0\164\0\145\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_6511:
   .ascii "\123\0\154\0\141\0\164\0\145\0\107\0\162\0\141\0\171\0\0\0"
   .align 8
   Lt_6513:
   .ascii "\123\0\156\0\157\0\167\0\0\0"
   .align 8
   Lt_6515:
   .ascii "\123\0\160\0\162\0\151\0\156\0\147\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_6517:
   .ascii "\123\0\164\0\145\0\145\0\154\0\102\0\154\0\165\0\145\0\0\0"
   .align 8
   Lt_6519:
   .ascii "\124\0\141\0\156\0\0\0"
   .align 8
   Lt_651B:
   .ascii "\124\0\145\0\141\0\154\0\0\0"
   .align 8
   Lt_651D:
   .ascii "\124\0\150\0\151\0\163\0\164\0\154\0\145\0\0\0"
   .align 8
   Lt_651F:
   .ascii "\124\0\157\0\155\0\141\0\164\0\157\0\0\0"
   .align 8
   Lt_6521:
   .ascii "\124\0\165\0\162\0\161\0\165\0\157\0\151\0\163\0\145\0\0\0"
   .align 8
   Lt_6523:
   .ascii "\126\0\151\0\157\0\154\0\145\0\164\0\0\0"
   .align 8
   Lt_6525:
   .ascii "\127\0\150\0\145\0\141\0\164\0\0\0"
   .align 8
   Lt_6527:
   .ascii "\127\0\150\0\151\0\164\0\145\0\0\0"
   .align 8
   Lt_6529:
   .ascii "\127\0\150\0\151\0\164\0\145\0\123\0\155\0\157\0\153\0\145\0\0\0"
   .align 8
   Lt_652B:
   .ascii "\131\0\145\0\154\0\154\0\157\0\167\0\0\0"
   .align 8
   Lt_652D:
   .ascii "\131\0\145\0\154\0\154\0\157\0\167\0\107\0\162\0\145\0\145\0\156\0\0\0"
   .align 8
   Lt_653F:
   .ascii "'  WINFBE CONFIGURATION\0"
   .align 8
   Lt_6548:
   .ascii "\127\0\151\0\156\0\106\0\102\0\105\0\166\0\145\0\162\0\163\0\151\0\157\0\156\0\75\0\62\0\56\0\61\0\56\0\65\0\0\0"
   .align 8
   Lt_654D:
   .ascii "[Editor]\0"
   .align 8
   Lt_6550:
   .ascii "AskExit=\0"
   .align 8
   Lt_6554:
   .ascii "CheckForUpdates=\0"
   .align 8
   Lt_6558:
   .ascii "EnableProjectCache=\0"
   .align 8
   Lt_655C:
   .ascii "LastUpdateCheck=\0"
   .align 8
   Lt_6560:
   .ascii "HideToolbar=\0"
   .align 8
   Lt_6564:
   .ascii "HideStatusbar=\0"
   .align 8
   Lt_6568:
   .ascii "MultipleInstances=\0"
   .align 8
   Lt_656C:
   .ascii "CompileAutosave=\0"
   .align 8
   Lt_6570:
   .ascii "CloseFuncList=\0"
   .align 8
   Lt_6574:
   .ascii "SyntaxHighlighting=\0"
   .align 8
   Lt_6578:
   .ascii "Codetips=\0"
   .align 8
   Lt_657C:
   .ascii "AutoComplete=\0"
   .align 8
   Lt_6580:
   .ascii "CharacterAutoComplete=\0"
   .align 8
   Lt_6584:
   .ascii "RightEdge=\0"
   .align 8
   Lt_6588:
   .ascii "RightEdgePosition=\0"
   .align 8
   Lt_658D:
   .ascii "LeftMargin=\0"
   .align 8
   Lt_6591:
   .ascii "FoldMargin=\0"
   .align 8
   Lt_6595:
   .ascii "AutoIndentation=\0"
   .align 8
   Lt_6599:
   .ascii "ForNextVariable=\0"
   .align 8
   Lt_659D:
   .ascii "ConfineCaret=\0"
   .align 8
   Lt_65A1:
   .ascii "LineNumbering=\0"
   .align 8
   Lt_65A5:
   .ascii "HighlightCurrentLine=\0"
   .align 8
   Lt_65A9:
   .ascii "IndentGuides=\0"
   .align 8
   Lt_65AD:
   .ascii "TabIndentSpaces=\0"
   .align 8
   Lt_65B1:
   .ascii "UnicodeEncoding=\0"
   .align 8
   Lt_65B5:
   .ascii "KeywordCase=\0"
   .align 8
   Lt_65B9:
   .ascii "LocalizationFile=\0"
   .align 8
   Lt_65BE:
   .ascii "TabSize=\0"
   .align 8
   Lt_65C3:
   .ascii "PositionMiddle=\0"
   .align 8
   Lt_65C7:
   .ascii "BraceHighlight=\0"
   .align 8
   Lt_65CB:
   .ascii "EditorFontname=\0"
   .align 8
   Lt_65D0:
   .ascii "EditorFontsize=\0"
   .align 8
   Lt_65D5:
   .ascii "EditorFontCharSet=\0"
   .align 8
   Lt_65DC:
   .ascii "[Startup]\0"
   .align 8
   Lt_65DF:
   .ascii "StartupLeft=\0"
   .align 8
   Lt_65E3:
   .ascii "StartupTop=\0"
   .align 8
   Lt_65E7:
   .ascii "StartupRight=\0"
   .align 8
   Lt_65EB:
   .ascii "StartupBottom=\0"
   .align 8
   Lt_65EF:
   .ascii "StartupMaximized=\0"
   .align 8
   Lt_65F3:
   .ascii "ShowExplorer=\0"
   .align 8
   Lt_65F7:
   .ascii "ShowExplorerWidth=\0"
   .align 8
   Lt_65FB:
   .ascii "ToolBoxLeft=\0"
   .align 8
   Lt_65FF:
   .ascii "ToolBoxTop=\0"
   .align 8
   Lt_6603:
   .ascii "ToolBoxRight=\0"
   .align 8
   Lt_6607:
   .ascii "ToolBoxBottom=\0"
   .align 8
   Lt_6617:
   .ascii "[Compiler]\0"
   .align 8
   Lt_661A:
   .ascii "FBWINCompiler32=\0"
   .align 8
   Lt_661F:
   .ascii "FBWINCompiler64=\0"
   .align 8
   Lt_6624:
   .ascii "CompilerSwitches=\0"
   .align 8
   Lt_6629:
   .ascii "CompilerHelpfile=\0"
   .align 8
   Lt_662E:
   .ascii "Win32APIHelpfile=\0"
   .align 8
   Lt_6633:
   .ascii "WinFBXHelpfile=\0"
   .align 8
   Lt_6638:
   .ascii "RunViaCommandWindow=\0"
   .align 8
   Lt_663C:
   .ascii "DisableCompileBeep=\0"
   .align 8
   Lt_6640:
   .ascii "WinFBXPath=\0"
   .align 8
   Lt_6647:
   .ascii "[UserTools]\0"
   .align 8
   Lt_664F:
   .ascii "USERTOOL_\0"
   .align 8
   Lt_6650:
   .ascii "00\0"
   .align 8
   Lt_6656:
   .ascii "|-|\0"
   .align 8
   Lt_6687:
   .ascii "[Builds]\0"
   .align 8
   Lt_668F:
   .ascii "BUILD_\0"
   .align 8
   Lt_66A9:
   .ascii "[MRU]\0"
   .align 8
   Lt_66B2:
   .ascii "MRU_\0"
   .align 8
   Lt_66BC:
   .ascii "[MRUPROJECTS]\0"
   .align 8
   Lt_66C5:
   .ascii "MRUPROJECT_\0"
   .align 8
   Lt_66CF:
   .ascii "[Themes]\0"
   .align 8
   Lt_66D2:
   .ascii "SelectedTheme=\0"
   .align 8
   Lt_66DB:
   .ascii "THEME_\0"
   .align 8
   Lt_66DF:
   .ascii "\54\0\174\0\0\0"
   .align 8
   Lt_66FC:
   .ascii "\116\0\117\0\124\0\105\0\123\0\55\0\123\0\124\0\101\0\122\0\124\0\0\0"
   .align 8
   Lt_66FE:
   .ascii "\116\0\117\0\124\0\105\0\123\0\55\0\123\0\124\0\101\0\122\0\124\0\15\0\12\0\0\0"
   .align 8
   Lt_6701:
   .ascii "\116\0\117\0\124\0\105\0\123\0\55\0\105\0\116\0\104\0\0\0"
   .align 8
   Lt_6707:
   .ascii "[Notes]\0"
   .align 8
   Lt_670D:
   .ascii "MRU\0"
   .align 8
   Lt_671A:
   .ascii "MRUPROJECTS\0"
   .align 8
   Lt_672C:
   .ascii "\124\0\110\0\105\0\115\0\105\0\137\0\0\0"
   .align 8
   Lt_6768:
   .ascii "' SNIPPET START\0"
   .align 8
   Lt_6769:
   .ascii "\47\0\40\0\123\0\116\0\111\0\120\0\120\0\105\0\124\0\40\0\123\0\124\0\101\0\122\0\124\0\0\0"
   .align 8
   Lt_6770:
   .ascii "' DESCRIPTION=\0"
   .align 8
   Lt_6771:
   .ascii "\47\0\40\0\104\0\105\0\123\0\103\0\122\0\111\0\120\0\124\0\111\0\117\0\116\0\75\0\0\0"
   .align 8
   Lt_6777:
   .ascii "' TRIGGER=\0"
   .align 8
   Lt_6778:
   .ascii "\47\0\40\0\124\0\122\0\111\0\107\0\107\0\105\0\122\0\75\0\0\0"
   .align 8
   Lt_677E:
   .ascii "' CODE=\0"
   .align 8
   Lt_677F:
   .ascii "\47\0\40\0\103\0\117\0\104\0\105\0\75\0\0\0"
   .align 8
   Lt_6786:
   .ascii "\134\0\114\0\106\0\0\0"
   .align 8
   Lt_6789:
   .ascii "' SNIPPET END\0"
   .align 8
   Lt_678A:
   .ascii "\47\0\40\0\123\0\116\0\111\0\120\0\120\0\105\0\124\0\40\0\105\0\116\0\104\0\0\0"
   .align 8
   Lt_67BA:
   .ascii "\47\0\0\0"
   .align 8
   Lt_67D8:
   .ascii "\125\0\123\0\105\0\122\0\124\0\117\0\117\0\114\0\137\0\0\0"
   .align 8
   Lt_67E1:
   .ascii "\174\0\55\0\174\0\0\0"
   .align 8
   Lt_67F3:
   .ascii "\102\0\125\0\111\0\114\0\104\0\137\0\0\0"
   .align 8
   Lt_6805:
   .ascii "\115\0\122\0\125\0\137\0\0\0"
   .align 8
   Lt_680F:
   .ascii "\115\0\122\0\125\0\120\0\122\0\117\0\112\0\105\0\103\0\124\0\137\0\0\0"
